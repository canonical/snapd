summary: certain refresh sequence on the maas snap breaks the layout system

details: |
    Snapd attempts to update preserved mount namespaces when the per-snap mount
    profile is changed by interface connection changes, snap refreshes or even
    base snap refreshes. The exact way in which this is done is very complex and
    over time, a simpler method was devised, where bulk of the changes are
    undone and the namespace is re-constructed with the minimal attempt to
    reuse.

    This test constructs a mount namespace with features that captures the
    essence of a failure encountered in the field by a real snap application
    package, in order to show that the failure no longer occurs.

    Historically this test also enabled the robust-mount-namespace-updates feature,
    but it is now enabled by default.

    This test is related to lp-1844496, lp-1852361 and lp-1867193.

systems: [ubuntu-18.04-64] # tight coupling with container guest

prepare: |
    "$TESTSTOOLS"/lxd-state prepare-snap
    lxc launch --quiet "ubuntu:18.04" bionic
    lxc exec bionic -- apt autoremove --purge -y snapd ubuntu-core-launcher
    lxc exec bionic -- apt update
    lxc exec bionic -- mkdir -p "$GOHOME"
    lxc file push --quiet "$GOHOME"/snapd_*.deb "bionic/$GOHOME/"
    lxc exec bionic -- apt install -y "$GOHOME"/snapd_*.deb

restore: |
    lxc stop --force bionic
    lxc delete bionic
    snap remove --purge lxd
    "$TESTSTOOLS"/lxd-state undo-mount-changes

execute: |
    # first command is done twice due to https://bugs.launchpad.net/snapd/+bug/1865503
    lxc exec bionic -- snap install maas --channel=2.7/edge
    lxc exec bionic -- snap install maas --channel=2.7/edge
    lxc exec bionic -- snap refresh maas --channel=edge
