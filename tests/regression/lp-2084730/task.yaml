summary: Ensure that snapd state doesn't get stuck if inhibition hint file is locked.

details: |
    Check that snapd state will not stay locked when inhibition hint file lock is held.
    For context: In LP #2084730, A problem was discovered related to refresh app awareness
    feature which, in a very specific scenario, can cause snapd to enter a deadlock state
    because snapd was tring to hold an exclusive lock on the inhibition hint lock file
    while locking global state which was already locked by snap run. This results in all API
    calls hanging which was made worse by snap run trying to call the snapd API causing
    a deadlock.

environment:
  INHIBITION_LOCK_FILE: /var/lib/snapd/inhibit/test-snapd-sh.lock

prepare: |
    snap install --stable test-snapd-sh
    mkdir -p /var/lib/snapd/inhibit
    touch "$INHIBITION_LOCK_FILE"

    snap set core experimental.parallel-instances=true

restore: |
    # release inhibition hint lock
    systemctl stop inhibition-file-locker.service

    # Wait for refresh to finish to be able to remove the snap
    snap debug ensure-state-soon
    retry -n 10 sh -c "snap changes | NOMATCH Doing"

    snap set core experimental.parallel-instances!

execute: |
    systemd-run --unit inhibition-file-locker.service flock "$INHIBITION_LOCK_FILE" --command "sleep 10000"
    # Wait for the inhibition file lock to be held
    retry -n 10 not flock --timeout 0 "$INHIBITION_LOCK_FILE" --command "true"

    # This refresh will block because it tries to hold the inhibition file lock for test-snapd-sh
    snap refresh --no-wait --edge test-snapd-sh > locked-change-id

    # wait until snapd is blocked in link-snap
    # avoid using the API directly to not take the state lock
    locked_id="$(cat locked-change-id)"
    retry -n 50 --wait 1 sh -c "snap debug state /var/lib/snapd/state.json --change=$locked_id | MATCH 'Doing .* Make current revision for snap .* unavailable'"

    # and still waiting
    snap debug state /var/lib/snapd/state.json --change="$locked_id" | MATCH 'Doing .* Make current revision for snap .* unavailable'

    # Check snapd has the inhibition hint lock file open
    if command -v lsof; then
        lsof "$INHIBITION_LOCK_FILE" | MATCH "snapd"
    fi

    # Check that snapd state is not locked when trying to hold the inhibition file lock above
    timeout 5 snap debug api /v2/snaps

    # Check that operations changing the state of the snap (remove, or another refresh) fail the conflict check
    snap refresh --beta test-snapd-sh 2>&1 | MATCH 'snap "test-snapd-sh" has "refresh-snap" change in progress'
    snap remove test-snapd-sh 2>&1 | MATCH 'snap "test-snapd-sh" has "refresh-snap" change in progress'

    # Check that parallel instance of the blocked snap is not affected
    snap install --stable test-snapd-sh_instance
    snap refresh --edge test-snapd-sh_instance
    snap remove test-snapd-sh_instance
