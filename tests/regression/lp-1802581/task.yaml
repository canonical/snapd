summary: Regression test for LP 1802581

description: |
    When using the snapd GPIO interface the slot side needs to export the GPIO
    pint so that a file appears under /sys/class/gpio/gpioNNN. That file is a
    symbolic link to a special, platform specific device path. The symbolic
    link needs to be evaluated so that apparmor rules for the plug side can be
    constructed.

    A customer has reported that when a snap is disabled and then re-enabled
    the GPIO pin is not exported and apparmor backend cannot setup security
    of the snap being enabled.

    A similar issue has occurred once in the past where the order in which
    security backends operated was not deterministic. We fixed the issue by
    applying a fixed order so that the systemd backend, responsible for
    exporting the pin, would always run before the apparmor backend, which
    could now rely on the pin being exposed to userspace.

systems: [ubuntu-core-16-64]

prepare: |
    echo "Run mock gpio daemon"
    systemd-run --unit mock-gpio -- "$(pwd)/mock-gpio.py"
    # shellcheck source=tests/lib/systemd.sh
    . "$TESTSLIB/systemd.sh"
    wait_for_service mock-gpio

restore: |
    systemctl stop mock-gpio || true
    # for good measure, mock-gpio.py does this umount already on exit
    umount /sys/class/gpio || true

debug: |
    journalctl -u mock-gpio.service

execute: |
    echo "Install a snap that uses the gpio consumer"
    #shellcheck source=tests/lib/snaps.sh
    . "$TESTSLIB"/snaps.sh
    install_local gpio-consumer

    echo "And connect the gpio pin"
    snap connect gpio-consumer:gpio :gpio-pin
    snap interfaces | MATCH ":gpio-pin.*gpio-consumer:gpio"

    # LP-1802581
    echo "Now disable and enable the snap to ensure lp: #1802581 is fixed"
    snap disable gpio-consumer
    snap enable gpio-consumer

    echo "Check that the connection is still here after enable"
    snap interfaces | MATCH ":gpio-pin.*gpio-consumer:gpio"

    echo "Ensure that our mock service is full functional"
    systemctl status mock-gpio.service | MATCH "Active: active"
