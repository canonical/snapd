summary: Regression test for https://bugs.launchpad.net/snapd/+bug/1803542
environment:
    VARIANT/absent: absent
    VARIANT/present: present
    VARIANT/shared: shared
    VARIANT/private: private
prepare: |
    #shellcheck source=tests/lib/snaps.sh
    . "$TESTSLIB/snaps.sh"
    install_local test-snapd-sh
    #shellcheck source=tests/lib/dirs.sh
    . "$TESTSLIB/dirs.sh"
    # Ensure that every snap namespace is discarded.
    for name in $(snap list | awk '!/Name/ {print $1}'); do
        "$LIBEXECDIR"/snapd/snap-discard-ns "$name"
    done
    if findmnt --noheadings /run/snapd/ns >/dev/null; then
        umount /run/snapd/ns
    fi
    ! findmnt --noheadings /run/snapd/ns
execute: |
    case "$VARIANT" in
       absent)
            rmdir /run/snapd/ns
            ;;
       present)
            mkdir -p /run/snapd/ns
            ;;
       shared)
            mkdir -p /run/snapd/ns
            mount --bind /run/snapd/ns /run/snapd/ns
            mount --make-shared /run/snapd/ns
            # This ensure the mount point is shared
            test "$(grep '/snapd/ns /run/snapd/ns' < /proc/self/mountinfo | awk '{print $7}' | cut -d : -f 1)" = shared
            ;;
        private)
            mkdir -p /run/snapd/ns
            mount --bind /run/snapd/ns /run/snapd/ns
            mount --make-private /run/snapd/ns
            # Ensure the mount point is private
            test "$(grep '/snapd/ns /run/snapd/ns' < /proc/self/mountinfo | awk '{print $7}')" = -
            ;;
        *)
            echo "unknown variant: $VARIANT"
            exit 1
            ;;
    esac
    # We can run snap-confine and it will do the right thing.
    test-snapd-sh -c /bin/true
    test "$(grep '/snapd/ns /run/snapd/ns' < /proc/self/mountinfo | awk '{print $7}')" = -
