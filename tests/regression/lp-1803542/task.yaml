summary: Regression test for https://bugs.launchpad.net/snapd/+bug/1803542
environment:
    VARIANT/absent: absent
    VARIANT/present: present
    VARIANT/shared: shared
    VARIANT/private: private
prepare: |
    "$TESTSTOOLS"/snaps-state install-local test-snapd-sh
    # Ensure that every snap namespace is discarded.
    for name in $(snap list | awk '!/Name/ {print $1}'); do
        snapd.tool exec snap-discard-ns "$name"
    done
    if findmnt --noheadings /run/snapd/ns >/dev/null; then
        umount /run/snapd/ns
    fi
    not findmnt --noheadings /run/snapd/ns
debug: |
    cat /proc/self/mountinfo
execute: |
    case "$VARIANT" in
       absent)
            test -d /run/snapd/ns && rmdir /run/snapd/ns
            ;;
       present)
            mkdir -p /run/snapd/ns
            ;;
       shared)
            mkdir -p /run/snapd/ns
            mount --bind /run/snapd/ns /run/snapd/ns
            mount --make-shared /run/snapd/ns
            # verify mount tags to ensure the mount point has shared propagation (format shared:<nnnn>)
            test "$(grep '/snapd/ns /run/snapd/ns' < /proc/self/mountinfo | awk '{print $7}' | cut -d : -f 1)" = shared
            ;;
        private)
            mkdir -p /run/snapd/ns
            mount --bind /run/snapd/ns /run/snapd/ns
            mount --make-private /run/snapd/ns
            # verify mount tags to ensure the mount point has private propagation (no mount tags set)
            test "$(grep '/snapd/ns /run/snapd/ns' < /proc/self/mountinfo | awk '{print $7}')" = -
            ;;
        *)
            echo "unknown variant: $VARIANT"
            exit 1
            ;;
    esac
    # We can run snap-confine and it will do the right thing.
    test-snapd-sh.sh -c /bin/true
    # verify that no mount tags are set, private propagation does not set any
    test "$(grep '/snapd/ns /run/snapd/ns' < /proc/self/mountinfo | awk '{print $7}')" = -
