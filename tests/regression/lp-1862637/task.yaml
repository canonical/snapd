summary: /var/lib/dhcp is shared with host

details: |
    During construction of the snap execution environment, the snap-confine
    program runs under apparmor confinement and needs to have permission to
    mount the /var/lib/dhcp directory from the host system into the snap
    execution environment being constructed. Historically this directory was not
    present in all the systems (especially the oldest core system) so
    snap-confine will only mount it, if it exists, but will silently skip the
    mount if does not exist on the host. From the perspective of running snap
    applications the directory is always present, but may be an empty, read-only
    placeholder. The test is more complex as the directory is handled with both
    snap-confine hard-coded logic and also dynamic mount profiles governed by
    snapd interface connections, specifically the network-control interface.

prepare: |
    snap pack test-snapd-app
    snap install --dangerous ./test-snapd-app_1_all.snap

restore: |
    rm -f /var/lib/dhcp/.canary

execute: |
    # The snap always sees /var/lib/dhcp. 
    test-snapd-app.sh -c 'test -d /var/lib/dhcp'
    if not os.query is-core16; then
        if [ -d /var/lib/dhcp ]; then
            # Variant 1) The host is not a core16 system and has /var/lib/dhcp
            # Directory is bind mounted and writable when the interface is
            # connected.
            touch /var/lib/dhcp/.canary
            test-snapd-app.sh -c 'test ! -f /var/lib/dhcp/.canary'

            snap connect test-snapd-app:network-control
            test-snapd-app.sh -c 'test -f /var/lib/dhcp/.canary'
            test-snapd-app.sh -c 'echo hi > /var/lib/dhcp/.canary'
            test "$(cat /var/lib/dhcp/.canary)" = hi

            snap disconnect test-snapd-app:network-control
            test-snapd-app.sh -c 'test ! -f /var/lib/dhcp/.canary'
            not test-snapd-app.sh -c 'echo bye > /var/lib/dhcp/.canary'
            test "$(cat /var/lib/dhcp/.canary)" = hi
        else
            # Variant 2) The host is not a core16 system but lacks /var/lib/dhcp
            # Directory is not created on the host and is not bind mounted.
            # Snaps always see read only, empty directory.
            test-snapd-app.sh -c 'test ! -f /var/lib/dhcp/.canary'

            snap connect test-snapd-app:network-control
            not test-snapd-app.sh -c 'echo hi > /var/lib/dhcp/.canary'
            test-snapd-app.sh -c 'test ! -f /var/lib/dhcp/.canary'

            snap disconnect test-snapd-app:network-control
            not test-snapd-app.sh -c 'echo bye > /var/lib/dhcp/.canary'
            test-snapd-app.sh -c 'test ! -f /var/lib/dhcp/.canary'
        fi
    else
        # Variant 3) The host is a core16 system.
        # Directory is always, effectively, bind mounted.
        # Writing permission depends on interface connection.
        touch /var/lib/dhcp/.canary
        test-snapd-app.sh -c 'test -f /var/lib/dhcp/.canary'

        snap connect test-snapd-app:network-control
        test-snapd-app.sh -c 'test -f /var/lib/dhcp/.canary'
        test-snapd-app.sh -c 'echo hi > /var/lib/dhcp/.canary'
        test "$(cat /var/lib/dhcp/.canary)" = hi

        snap disconnect test-snapd-app:network-control
        not test-snapd-app.sh -c 'echo bye > /var/lib/dhcp/.canary'
        test "$(cat /var/lib/dhcp/.canary)" = hi
    fi
