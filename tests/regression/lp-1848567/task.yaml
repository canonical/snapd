summary: ensure apparmor_parser is not using gobs of memory

details: |
  Ensure that apparmor_parser is not using excessive amounts of memory when
  compiling snap-update-ns profile of an application that looks like
  gnome-system-monitor snap.

prepare: |
  # Pack, install and connect the three participants.
  snap pack test-snapd-app
  snap pack test-snapd-gnome-3-28-1804
  snap pack test-snapd-gtk-common-themes

  snap install --dangerous test-snapd-app_1_all.snap
  snap install --dangerous test-snapd-gnome-3-28-1804_1_all.snap
  snap install --dangerous test-snapd-gtk-common-themes_1_all.snap

  snap connect test-snapd-app:gnome-3-28-1804 test-snapd-gnome-3-28-1804
  snap connect test-snapd-app:icon-themes test-snapd-gtk-common-themes:icon-themes
  snap connect test-snapd-app:sound-themes test-snapd-gtk-common-themes:sound-themes

execute: |
  if snap debug sandbox-features --required apparmor:kernel:mount; then
    # Re-compile the apparmor profile for snap-update-ns for the
    # test-snapd-app snap while ensuring that the profile is not loaded
    # into kernel memory and that the compiler is not using any existing
    # caches. Use memory-observe-do to record the maximum resident memory usage
    # and store it in a file.
    "$TESTSTOOLS"/memory-observe-do -o memory-kb.txt apparmor_parser \
      --skip-read-cache --skip-cache --skip-kernel-load -Ono-expr-simplify \
      /var/lib/snapd/apparmor/profiles/snap-update-ns.test-snapd-app
    # Without de-duplicating mount rules the compiler would take about 1.5GB on a
    # 64 bit system. With the de-duplication logic it took less than 38MB on an
    # average of 10 runs. The threshold in this test is set to about 50MB.
    test "$(cat memory-kb.txt)" -lt 50000
  fi
