summary: Ensure that content meta-data is updated on refresh 

details: |
    Snapd has a state system which stores information about connected
    interfaces. The connection itself carries certain attributes and those
    attributes were being left stale, when one of the connected snaps were
    refreshed, bringing in with them updated values of the attribute. This was
    particularly problematic for the content sharing interface, as the "read" or
    "write" attributes contained a list of files or directories to expose to the
    peer on the other end of the interface connection.

    This test installs a pair of snaps connected with the content sharing
    interface and updates one of them, to ensure that the expected changes
    coming from the second version of the snap are reflected in the system.

    This test is related to lp-1942266 which handles the case for "system-files"
    interface.

prepare: |
    snap pack test-snapd-app
    snap pack test-snapd-content.v1
    snap pack test-snapd-content.v2

execute: |
    snap install --dangerous test-snapd-app_1_all.snap
    snap install --dangerous test-snapd-content_1_all.snap
    snap connect test-snapd-app:things test-snapd-content:things

    # Inspect the things that are available. We should see A and B now.
    #shellcheck disable=SC2016
    test-snapd-app.sh -c 'cat $SNAP/things/*/thing' | MATCH THING-A
    #shellcheck disable=SC2016
    test-snapd-app.sh -c 'cat $SNAP/things/*/thing' | MATCH THING-B
    #shellcheck disable=SC2016
    test-snapd-app.sh -c 'cat $SNAP/things/*/thing' | NOMATCH THING-C

    # Install the 2nd version of the content snap, it should also provide THING-C
    snap install --dangerous test-snapd-content_2_all.snap
    #shellcheck disable=SC2016
    test-snapd-app.sh -c 'cat $SNAP/things/*/thing' | MATCH THING-A
    #shellcheck disable=SC2016
    test-snapd-app.sh -c 'cat $SNAP/things/*/thing' | MATCH THING-B
    #shellcheck disable=SC2016
    test-snapd-app.sh -c 'cat $SNAP/things/*/thing' | MATCH THING-C
