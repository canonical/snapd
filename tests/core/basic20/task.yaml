summary: Check basic core20 system functionality

systems: [ubuntu-core-20-*]

execute: |
    echo "Check that the system snaps are there"
    snap list core20
    snap list snapd
    if snap list core; then
        echo "The old core snap is installed but should not"
        exit 1
    fi

    echo "Ensure that the system is fully seeded"
    snap changes | MATCH "Done.*Initialize system state"

    echo "Check that a simple shell snap"
    # TODO:UC20: add test-snapd-sh-core20
    snap install test-snapd-sh-core18
    test-snapd-sh-core18.sh -c 'echo hello' | MATCH hello

    if python3 -m json.tool < /var/lib/snapd/system-key | grep '"build-id": ""'; then
        echo "The build-id of snapd must not be empty."
        exit 1
    fi

    echo "Ensure passwd/group is available for snaps"
    test-snapd-sh-core18.sh -c 'cat /var/lib/extrausers/passwd' | MATCH test

    echo "Ensure extracted kernel.efi exists"
    test -e /boot/grub/pc-kernel*/kernel.efi
    test -e /boot/grub/kernel.efi

    # ensure that our the-tool (and thus our snap-bootstrap ran)
    echo "Check that we booted with the rebuilt initramfs in the kernel snap"
    test -e /writable/system-data/the-tool-ran

    if [ -e /dev/tpm0 ]; then
        echo "The recovery key is available"
        test -e /var/lib/snapd/device/fde/recovery-key
        echo "... and has the expected size"
        test "$(stat --printf=%s /var/lib/snapd/device/fde/recovery-key)" = "16"
        echo "... and has the expected owner and permissions"
        test "$(stat --printf='%u:%g %a' /var/lib/snapd/device/fde/recovery-key)" = "0:0 600"
    fi
