summary: Test the failover scenario of the snapd snap installation on a UC16 system

# snapd snap is already installed by default on uc18+
systems: [ubuntu-core-16-*]

prepare: |
  "$TESTSTOOLS"/snaps-state repack_core_snap_into_snapd_snap

restore: |
  rm -f /etc/systemd/user/snapd.session-agent.service
  rm -f /etc/systemd/user/snapd.session-agent.socket
  rm -f /etc/systemd/user/sockets.target.wants/snapd.session-agent.socket
  systemctl --user daemon-reload
  rm -f /etc/dbus-1/session.d/snapd.session-services.conf
  rm -f /etc/dbus-1/system.d/snapd.system-services.conf

execute: |
  echo "Re-pack snapd with broken snapd"
  unsquashfs -d ./snapd-broken snapd-from-core.snap
  echo "" > ./snapd-broken/usr/lib/snapd/snapd
  # pick up snap-failure from the current snapd
  (cd ./snapd-broken && snap pack .)

  # try to install it multiple times to ensure that we can revert back to the 
  # core snap as many times as needed, if a device for some reason keeps wanting
  # to try to transition to the snapd snap and keeps failing
  #shellcheck disable=SC2167
  for _ in $(seq 1 2); do
    # get the number of times that snapd.failure was started before we do 
    # anything
    started_before="$("$TESTSTOOLS"/journal-state get-log -u snapd.failure | grep -c 'Started Failure handling of the snapd snap.' || true)"

    echo "Now install the broken snapd"
    if snap install --dangerous ./snapd-broken/snapd_*.snap; then
        echo "installing a broken snapd should not work, test failed"
        exit 1
    fi

    echo "Verify that snapd.failure was activated when we tried to install a broken snapd"
    #shellcheck disable=SC2165
    for _ in $(seq 60); do
        # get the number of times that snapd.failure was started
        started_after="$("$TESTSTOOLS"/journal-state get-log -u snapd.failure | grep -c 'Started Failure handling of the snapd snap.' || true)"
        if [ "$started_after" -gt "$started_before" ] ; then
            break
        fi
        sleep 1
    done

    echo "Verify we got the expected error message"
    snap change --last=install|MATCH "there was a snapd rollback across the restart"
    echo "No snapd snap is installed"
    not snap list snapd

    test ! -e /etc/systemd/system/snapd.service
    test ! -e /etc/systemd/system/usr-lib-snapd.mount
    test ! -e /snap/snapd/x1
  done
