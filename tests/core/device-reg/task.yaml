summary: |
    Ensure after device initialisation registration worked and
    we have a serial and can acquire a session macaroon

execute: |
    #shellcheck source=tests/lib/core-config.sh
    . "$TESTSLIB"/core-config.sh
    #shellcheck source=tests/lib/names.sh
    . "$TESTSLIB"/names.sh

    echo "Wait for first boot to be done"
    wait_for_first_boot_change

    echo "We have a model assertion"
    snap model --assertion | MATCH "series: 16"

    if ! snap model --verbose | grep "brand-id:\s+ canonical" ; then
       echo "Not a canonical model. Skipping."
       exit 0
    fi

    echo "Wait for device initialisation to be done"
    wait_for_device_initialized_change

    echo "Check we have a serial"
    snap model --serial --assertion | MATCH "authority-id: canonical"
    snap model --serial --assertion | MATCH "brand-id: canonical"
    case "$SPREAD_SYSTEM" in
        ubuntu-core-20-64)
            snap model --serial --assertion | MATCH "model: ubuntu-core-20-amd64"
            ;;
        ubuntu-core-20-arm-*)
            snap model --serial --assertion | MATCH "model: ubuntu-core-20-$gadget_name"
            ;;
        ubuntu-core-18-64)
            snap model --serial --assertion | MATCH "model: ubuntu-core-18-amd64"
            ;;
        ubuntu-core-18-arm-*)
            snap model --serial --assertion | MATCH "model: ubuntu-core-18-$gadget_name"
            ;;
        ubuntu-core-16-64)
            snap model --serial --assertion | MATCH "model: pc"
            ;;
        *)
            snap model --serial --assertion | MATCH "model: $gadget_name"
    esac

    echo "Make sure we could acquire a session macaroon"
    snap find pc
    MATCH '"session-macaroon":"[^"]' < /var/lib/snapd/state.json
