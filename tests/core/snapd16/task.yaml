summary: Test snapd install on a UC16 system

# snapd snap is already installed by default on uc18+
systems: [ubuntu-core-16-*]

prepare: |
    "$TESTSTOOLS"/snaps-state repack_core_snap_into_snapd_snap

restore: |
    not test -d /snap/snapd
    rm -f /etc/systemd/user/snapd.session-agent.service
    rm -f /etc/systemd/user/snapd.session-agent.socket
    rm -f /etc/systemd/user/sockets.target.wants/snapd.session-agent.socket
    systemctl --user daemon-reload
    rm -f /etc/dbus-1/session.d/snapd.session-services.conf
    rm -f /etc/dbus-1/system.d/snapd.system-services.conf

execute: |
    if [ "$SPREAD_REBOOT" = 0 ]; then
        echo "No snapd snap is installed"
        not snap list snapd

        echo "Ensure the snapd snap can be installed"
        snap install snapd-from-core.snap --dangerous

        echo "And it is considered installed"
        snap list snapd

        echo "And snapd from the snap is run in the CGroup"
        systemctl status snapd|MATCH "/snap/snapd/x1/usr/lib/snapd/snapd"

        echo "And we can refresh the snapd snap again"
        prev=$(readlink /snap/snapd/current)
        snap install snapd-from-core.snap --dangerous
        next=$(readlink /snap/snapd/current)
        if [ "$next" = "$prev" ]; then
            echo "Failed to refresh the snapd snap, still on same revision"
            exit 1
        fi

        echo "And after a reboot the snapd snap is still ok"
        REBOOT
    elif [ "$SPREAD_REBOOT" = 1 ]; then
        echo "still installed"
        snap list snapd
        echo "and running the right snapd"
        systemctl status snapd|MATCH "/snap/snapd/x2/usr/lib/snapd/snapd"

        # RESTORE CODE
        # TODO: move this to restore section when spread is fixed
        # see https://github.com/snapcore/spread/pull/85
        # we cannot restore in "restore:" because we need a reboot
        # right now to get a clean state again
        systemctl stop snapd.service snapd.socket snapd.autoimport.service snapd.snap-repair.service snapd.snap-repair.timer
        umount "/snap/snapd/$(readlink /snap/snapd/current)"

        rm -f /etc/systemd/system/usr-lib-snapd.mount
        rm -f /etc/systemd/system/snap-snapd-*.mount
        rm -f /etc/systemd/system/snapd.{service,timer,socket}
        rm -f /etc/systemd/system/snapd.*.{service,timer,socket}
        rm -f /etc/systemd/system/*.wants/snapd.*.{service,timer,socket}
        systemctl daemon-reload
        # this will have the "snapd" snap /usr/lib/snapd bind mounted
        umount --lazy /usr/lib/snapd
        systemctl start snapd.service snapd.socket
        systemctl status snapd|MATCH " /usr/lib/snapd/snapd"

        echo "And we reboot to get a clean system again"
        REBOOT
    fi
    snap list
    snap remove snapd
    # and we can still run the rsync snap after the reboot
    rsync --help
