summary: Ensure that netplan works on Ubuntu Core with network-setup-{control,observe}

details: |
    Netplan apply is used to apply network configuration to the system

environment:
    NETPLAN: io.netplan.Netplan

# TODO:UC20: enable, fails right now with: "The permission of the
#            setuid helper is not correct", the issue is with the permissions of
#            /usr/lib/dbus-1.0/dbus-daemon-launch-helper - it shows up as not
#            being in the right group because the /etc/group from the classic
#            host that we use to prepare the core system has a different group
#            defined for gid 103 (which on core is messagebus, but on classic is
#            systemd-network), and thus the dbus daemon thinks it has the wrong
#            permissions (well basically speaking it does)

# TODO: re-enable this on ubuntu-core-16-* when network-setup-control is updated
# to allow running netplan directly from the base snap and we can update this
# test to just using a simple shell script snap instead of building netplan from
# source, as currently that is broken on xenial with test-snapd-netplan-apply
# for some reason, see https://github.com/anonymouse64/test-snapd-netplan-apply/issues/1
systems: [ubuntu-core-18-*]

prepare: |
    snap install test-snapd-netplan-apply --edge

execute: |
    echo "The interface is disconnected by default"
    snap connections test-snapd-netplan-apply | MATCH 'network-setup-control +test-snapd-netplan-apply:network-setup-control +- +-'

    echo "Running netplan apply without network-setup-control fails"
    if test-snapd-netplan-apply.netplan apply; then
        echo "Expected access denied error for netplan apply"
        exit 1
    fi

    echo "Count how many network service restarts happened before calling netplan apply"
    stopped_before="$("$TESTSTOOLS"/journal-state get-log -u systemd-networkd | grep -c 'Stopped Network Service.' || true)"
    started_before="$("$TESTSTOOLS"/journal-state get-log -u systemd-networkd | grep -c 'Started Network Service.' || true)"

    echo "When the interface is connected"
    snap connect test-snapd-netplan-apply:network-setup-control

    echo "Running netplan apply now works"
    if ! test-snapd-netplan-apply.netplan apply; then
        echo "Unexpected error running netplan apply"
        exit 1
    fi

    echo "Ensure that network config was stopped and restarted from netplan"
    for _ in $(seq 60); do
        stopped_after="$("$TESTSTOOLS"/journal-state get-log -u systemd-networkd | grep -c 'Stopped Network Service.' || true)"
        started_after="$("$TESTSTOOLS"/journal-state get-log -u systemd-networkd | grep -c 'Started Network Service.' || true)"
        if [ "$stopped_after" -gt "$stopped_before" ] && \
           [ "$started_after" -gt "$started_before" ] ; then
            break
        fi
        sleep 1
    done

    echo "Ensure that the number of network restarts is greater after netplan apply was run"
    [ "$stopped_after" -gt "$stopped_before" ] && [ "$started_after" -gt "$started_before" ]

    if os.query is-core16; then
        echo "Skipping Ubuntu Core 16 which does not have Info D-Bus method"
        exit 0
    fi

    echo "Disconnecting network-setup-control to test network-setup-observe"
    snap disconnect test-snapd-netplan-apply:network-setup-control

    echo "The network-setup-observe interface is disconnected by default"
    snap connections test-snapd-netplan-apply | MATCH 'network-setup-observe +test-snapd-netplan-apply:network-setup-observe +- +-'

    echo "Running netplan info via D-Bus without network-setup-observe fails"
    if test-snapd-netplan-apply.info; then
        echo "Expected access denied error for netplan info via D-Bus"
        exit 1
    fi

    echo "When the interface is connected"
    snap connect test-snapd-netplan-apply:network-setup-observe

    echo "Running netplan info via D-Bus now works"
    if ! test-snapd-netplan-apply.info; then
        echo "Unexpected error running netplan info via D-Bus"
        exit 1
    fi
