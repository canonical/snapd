summary: Check that snapd failure handling works

# TODO:UC20: enable for UC20, currently snapd.failure.service does not work on
#            UC20, it currently isn't activated for some reason
# UC16 still uses the core snap rather than the snapd snap, so disable this test
# for UC16
systems: [-ubuntu-core-20-*, -ubuntu-core-16-*]

debug: |
    # dump failure data
    journalctl -u snapd.failure.service
    journalctl -u snapd.socket || true
    ls -l /snap/snapd/

prepare: |
    cp -a /etc/systemd/system/snapd.service.d/local.conf local.conf.bak
    sed -i 's/^StartLimitInterval=0/StartLimitInterval=10s/g' /etc/systemd/system/snapd.service.d/local.conf
    systemctl daemon-reload

restore: |
    # Stop snapd.failure.service in case it is active
    if systemctl is-active snapd.failure.service | MATCH active; then
        systemctl stop snapd.failure.service
    fi
    cp -a local.conf.bak /etc/systemd/system/snapd.service.d/local.conf
    systemctl daemon-reload

execute: |
    echo "Testing failover handling of the snapd snap"
    current=$(readlink /snap/snapd/current)
    SNAPD_SNAP=$(ls /var/lib/snapd/snaps/snapd_"$current".snap)

    # for debugging
    snap list --all

    echo "Verify that a random signal does not trigger the failure handling"
    echo "and snapd is just restarted"
    systemctl kill --signal=SIGSEGV snapd.service
    systemctl is-active snapd.failure.service | MATCH inactive
    echo "Snap list is working still"
    snap list | MATCH "^snapd .* $current .*"

    echo "Break snapd"
    unsquashfs -d ./snapd-broken "$SNAPD_SNAP"
    echo "" > ./snapd-broken/usr/lib/snapd/snapd
    (cd ./snapd-broken && snap pack .)
    echo "Now install the broken snapd"
    if snap install --dangerous ./snapd-broken/snapd_*.snap; then
        echo "installing a broken snapd should not work, test broken"
        exit 1
    fi

    echo "And verify that snap commands still work and snapd is reverted"
    retry-tool -n 30 --wait 5 systemctl is-active snapd.failure.service
    snap list | MATCH "^snapd .* $current .*"

    echo "Verify we got the expected error message"
    snap change --last=install|MATCH "there was a snapd rollback across the restart"

    echo "restart snapd and ensure we can still talk to it"
    systemctl restart snapd.socket snapd.service
    snap list | MATCH "^snapd .* $current .*"
