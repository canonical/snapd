summary: verify early boot handling of a try recovery system on UC20
# TODO:UC20 this test should be converted into a nested one once keys can be
# resealed

systems: [ubuntu-core-20-*]

prepare: |
    # clear boot variables
    snap debug set-boot-vars --recovery recovery_system_status= try_recovery_system=

    snap install --edge jq
    # devmode as the snap does not have snapd-control
    snap install test-snapd-curl --devmode --edge

    MATCH 'snapd_recovery_mode=run' < /proc/cmdline
    # verify we are in run mode via the API
    test-snapd-curl.curl -s --unix-socket /run/snapd.socket http://localhost/v2/system-info > system-info
    jq -r '.result["system-mode"]' < system-info | MATCH 'run'

    echo "Obtain available systems"
    test-snapd-curl.curl -s --unix-socket /run/snapd.socket http://localhost/v2/systems > systems.json
    # TODO:UC20: there is only one system for now
    jq .result.systems[0].current < systems.json | MATCH 'true'
    label="$(jq -r .result.systems[0].label < systems.json)"
    test -n "$label"
    # make sure that the seed exists
    test -d "/var/lib/snapd/seed/systems/$label"
    # keep track of the label
    echo "$label" > system-label

restore: |
    rm -f /writable/systems.json.run
    rm -f /writable/systems.label

    if mountpoint /usr/sbin/shutdown; then
        umount /usr/sbin/shutdown
    fi

debug: |
    cat systems.json || true
    cat system-info || true
    cat /tmp/mock-shutdown.calls || true
    cat system-label || true

execute: |
    # shellcheck source=tests/lib/uc20-recovery.sh
    . "$TESTSLIB/uc20-recovery.sh"

    if [ "$SPREAD_REBOOT" == "0" ]; then
        echo "In run mode"

        label="$(cat system-label)"
        # sanity check
        test -n "$label"

        # pretend the current recovery system is being tried
        snap debug set-boot-vars --recovery \
            recovery_system_status=try \
            "try_recovery_system=$label"

        # and reboot into it
        transition_to_recover_mode "$label"

    elif [ "$SPREAD_REBOOT" == "1" ]; then
            echo "We should be back in run mode again"
        test-snapd-curl.curl -s --unix-socket /run/snapd.socket http://localhost/v2/system-info > system-info
        jq -r '.result["system-mode"]' < system-info | MATCH 'run'

        label="$(cat system-label)"
        # sanity check
        test -n "$label"

        snap debug boot-vars --uc20 --root-dir /run/mnt/ubuntu-seed > recovery-vars
        MATCH recovery_system_status=tried < recovery-vars
        MATCH "try_recovery_system=$label" < recovery-vars
    fi
