summary: |
    Test that device initialisation and registration can be customized
    with the prepare-device gadget hook

# TODO:UC20: enable for UC20, it assumes /var/lib/snapd/seed/assertions/model
#            which we don't have currently
systems: [ubuntu-core-1*]

prepare: |
    if [ "$TRUST_TEST_KEYS" = "false" ]; then
        echo "This test needs test keys to be trusted"
        exit
    fi
    #shellcheck source=tests/lib/core-config.sh
    . "$TESTSLIB"/core-config.sh
    #shellcheck source=tests/lib/systemd.sh
    . "$TESTSLIB"/systemd.sh
    #shellcheck source=tests/lib/systems.sh
    . "$TESTSLIB"/systems.sh

    systemctl stop snapd.service snapd.socket
    clean_snapd_lib

    # Configure the pc snap
    unpack_pc_snap

    mkdir -p squashfs-root/meta/hooks
    cp prepare-device squashfs-root/meta/hooks

    pack_pc_snap

    # Generic setup for test account
    prepare_core_model
    # shellcheck disable=SC2119
    prepare_and_manip_seed
    prepare_test_account developer1
    prepare_test_model developer1-pc
    prepare_testrootorg_store

    # start fake device svc
    systemd_create_and_start_unit fakedevicesvc "$(command -v fakedevicesvc) localhost:11029"

    # kick first boot again
    systemctl start snapd.service snapd.socket

    # wait for first boot to be done
    wait_for_first_boot_change

restore: |
    if [ "$TRUST_TEST_KEYS" = "false" ]; then
        echo "This test needs test keys to be trusted"
        exit
    fi
    #shellcheck source=tests/lib/core-config.sh
    . "$TESTSLIB"/core-config.sh
    #shellcheck source=tests/lib/systemd.sh
    . "$TESTSLIB"/systemd.sh

    systemctl stop snapd.service snapd.socket
    systemd_stop_and_destroy_unit fakedevicesvc
    clean_snapd_lib

    # Restore pc snap configuration
    restore_pc_snap

    # Generic restore for test account
    restore_updated_seed
    restore_test_account developer1
    restore_test_model developer1-pc
    restore_testrootorg_store
    restore_core_model

    # kick first boot again
    systemctl start snapd.service snapd.socket

    # wait for first boot to be done
    wait_for_first_boot_change

execute: |
    if [ "$TRUST_TEST_KEYS" = "false" ]; then
        echo "This test needs test keys to be trusted"
        exit
    fi

    echo "We have a model assertion"
    snap model --verbose|MATCH "model:\s* my-model"

    echo "Wait for device initialisation to be done"
    while ! snap changes | grep -q "Done.*Initialize device"; do sleep 1; done

    echo "Check we have a serial"
    snap model --serial --assertion|MATCH "authority-id: developer1"
    snap model --serial --assertion|MATCH "brand-id: developer1"
    snap model --serial --assertion|MATCH "model: my-model"
    snap model --serial --assertion|MATCH "serial: 7777"
