summary: Ensure security profile re-generation works with system-key

execute: |
    restart_snapd() {
        systemctl stop snapd.service
        while [ "$(systemctl show -pActiveState snapd.service)" != "ActiveState=inactive" ]; do
            systemctl show -pActiveState snapd.service
            sleep 1
        done

        systemctl start snapd.service
        while [ "$(systemctl show -pActiveState snapd.service)" != "ActiveState=active" ]; do
            systemctl show -pActiveState snapd.service
            sleep 1
        done
    }

    echo "Ensure a valid system-key file is on-disk"
    cat /var/lib/snapd/system-key | MATCH "build-id: [0-9a-z]+"
    buf="$(stat /var/lib/snapd/system-key)"
    system_key_content="$(cat /var/lib/snapd/system-key)"

    echo "Ensure that the system-key is not rewritten if system-key is unchanged"
    restart_snapd
    buf2="$(stat /var/lib/snapd/system-key)"
    if [ "$buf" != "$buf2" ]; then
        echo "system-key got rewriten: $buf != buf2, test broken"
        exit 1
    fi

    echo "Ensure that the system-key is rewritten if system-key changes"
    printf "something: new\n" >> /var/lib/snapd/system-key
    restart_snapd
    if grep "something: new" /var/lib/snapd/system-key; then
        echo "system-key *not* rewriten test broken"
        exit 1
    fi
