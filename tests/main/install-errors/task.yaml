summary: Checks for cli errors installing snaps

systems: [-ubuntu-core-16-64, -ubuntu-core-16-arm-64, -ubuntu-core-16-arm-32]

environment:
    SNAP_NAME: test-snapd-tools
    # Ensure that running purely from the deb (without re-exec) works
    # correctly
    SNAP_REEXEC/noreexec: 0
    SNAP_REEXEC/withreexec: 1

prepare: |
    echo "Given a snap with a failing command is installed"
    . $TESTSLIB/snaps.sh
    install_local $SNAP_NAME

execute: |
    echo "Install unexisting snap prints error"
    if snap install unexisting.canonical; then
        echo "Installing unexisting snap should fail"
        exit 1
    fi

    echo "============================================"

    echo "Install without snap name shows error"
    if snap install; then
        echo "Installing without snap name should fail"
        exit 1
    fi

    echo "============================================"

    echo "Install points to sudo when not authenticated"
    if su - -c "snap install $SNAP_NAME 2>${PWD}/install.output" test; then
        echo "Unauthenticated install should fail"
        exit 1
    fi
    grep "try with sudo" install.output

    echo "============================================"

    echo "Calling a failing command from a snap should fail"
    if test-snapd-tools.fail; then
        echo "Failing snap commands should keep failing after installed"
        exit 1
    fi

    echo "============================================"

    echo "Install a snap that is already installed shows a message"
    echo "but does "exit 0" (LP: #1622782)"
    snap install $SNAP_NAME 2> stderr.out
    cat stderr.out | MATCH "snap \"$SNAP_NAME\" is already installed"
