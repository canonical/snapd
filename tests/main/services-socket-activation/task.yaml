summary: Basic verification of socket-activated services.

details: |
    This installs a snap which define sockets for systemd socket activation, and verifies
    that basic start/stop works as intended for services that have socket activation.

prepare: |
    "$TESTSTOOLS"/snaps-state install-local socket-activation

restore: |
    systemctl daemon-reload

execute: |
    [ -f /etc/systemd/system/snap.socket-activation.sleep-daemon.sock.socket ]
    [ -S /var/snap/socket-activation/common/socket ]

    verify_status() {
        local ENABLED="$1"
        local MAIN_ACTIVE="$2"
        local ACT_ACTIVE="$3"

        echo "Checking that services are listed correctly"
        snap services | cat -n > svcs.txt
        MATCH "     1\s+Service\s+Startup\s+Current\s+Notes$" < svcs.txt
        MATCH "     2\s+socket-activation.sleep-daemon\s+${ENABLED}\s+${MAIN_ACTIVE}\s+socket-activated$" < svcs.txt

        echo "Check that systemctl for the main unit is as expected"
        systemctl show --property=UnitFileState snap.socket-activation.sleep-daemon.service | grep "static"
        systemctl show --property=ActiveState snap.socket-activation.sleep-daemon.service | grep "ActiveState=${MAIN_ACTIVE}"

        echo "Check that systemctl for the socket is looking correct too"
        systemctl show --property=UnitFileState snap.socket-activation.sleep-daemon.sock.socket | grep "${ENABLED}"
        systemctl show --property=ActiveState snap.socket-activation.sleep-daemon.sock.socket | grep "ActiveState=${ACT_ACTIVE}"
    }

    # verify default behavior on install is that the main service
    # is inactive but enabled, and socket is active
    verify_status "enabled" "inactive" "active"

    # this will fail, but still start the service
    echo "Start the primary unit, emulate that the trigger has run"
    systemctl start snap.socket-activation.sleep-daemon.service

    # verify that the main service is now active
    verify_status "enabled" "active" "active"

    # test normal restart
    snap restart socket-activation
    
    verify_status "enabled" "active" "active"

    # test --reload restart, with --reload we expect different behavior 
    # because of systemd. Verify that systemd is acting like we expect
    # as well
    snap restart --reload socket-activation

    verify_status "enabled" "active" "active"

    systemctl reload-or-restart snap.socket-activation.sleep-daemon.sock.socket 2>&1 | MATCH "failed"

    echo "Testing that we can stop will not disable the service"
    snap stop socket-activation.sleep-daemon

    verify_status "enabled" "inactive" "inactive"

    echo "Testing that we can correctly disable activations"
    snap stop --disable socket-activation.sleep-daemon

    echo "Verifying that service is now listed as disabled"
    verify_status "disabled" "inactive" "inactive"

    echo "Starting the service will start the socket unit, but not enable"
    snap start socket-activation.sleep-daemon
    
    verify_status "disabled" "inactive" "active"

    echo "Enable service and verify its listed as enabled"
    snap start --enable socket-activation.sleep-daemon

    verify_status "enabled" "inactive" "active"
