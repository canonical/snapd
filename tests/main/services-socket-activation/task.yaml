summary: Basic verification of socket-activated services.

details: |
    This installs a snap which define sockets for systemd socket activation, and verifies
    that basic start/stop works as intended for services that have socket activation.

prepare: |
    "$TESTSTOOLS"/snaps-state install-local socket-activation

restore: |
    systemctl daemon-reload

execute: |
    [ -f /etc/systemd/system/snap.socket-activation.sleep-daemon.sock.socket ]
    [ -S /var/snap/socket-activation/common/socket ]
    
    echo "Checking that services are listed correctly"
    snap services | cat -n > svcs.txt
    MATCH "     1\s+Service\s+Startup\s+Current\s+Notes$" < svcs.txt
    MATCH "     2\s+socket-activation.sleep-daemon\s+enabled\s+inactive\s+socket-activated$" < svcs.txt

    echo "Checking that the service is reported as static"
    systemctl show --property=UnitFileState snap.socket-activation.sleep-daemon.service | grep "static"

    echo "Checking that service activation unit is reported as enabled and running"
    systemctl show --property=UnitFileState snap.socket-activation.sleep-daemon.sock.socket | grep "enabled"
    systemctl show --property=ActiveState snap.socket-activation.sleep-daemon.sock.socket | grep "ActiveState=active"

    echo "Testing that we can stop will not disable the service"
    snap stop socket-activation.sleep-daemon
    systemctl show --property=UnitFileState snap.socket-activation.sleep-daemon.sock.socket | grep "enabled"
    systemctl show --property=ActiveState snap.socket-activation.sleep-daemon.sock.socket | grep "ActiveState=inactive"

    echo "Testing that we can correctly disable activations"
    snap stop --disable socket-activation.sleep-daemon

    echo "Verifying that service is now listed as disabled"
    snap services | cat -n > svcs.txt
    MATCH "     1\s+Service\s+Startup\s+Current\s+Notes$" < svcs.txt
    MATCH "     2\s+socket-activation.sleep-daemon\s+disabled\s+inactive\s+socket-activated$" < svcs.txt
    
    echo "Checking that service activation unit is reported as disabled and inactive"
    systemctl show --property=UnitFileState snap.socket-activation.sleep-daemon.sock.socket | grep "disabled"
    systemctl show --property=ActiveState snap.socket-activation.sleep-daemon.sock.socket | grep "ActiveState=inactive"

    echo "Starting the service will start the socket unit, but not enable"
    snap start socket-activation.sleep-daemon

    echo "Checking that services are listed as expected"
    snap services | cat -n > svcs.txt
    MATCH "     1\s+Service\s+Startup\s+Current\s+Notes$" < svcs.txt
    MATCH "     2\s+socket-activation.sleep-daemon\s+disabled\s+inactive\s+socket-activated$" < svcs.txt

    echo "Checking that service activation unit is reported as disabled and active"
    systemctl show --property=UnitFileState snap.socket-activation.sleep-daemon.sock.socket | grep "disabled"
    systemctl show --property=ActiveState snap.socket-activation.sleep-daemon.sock.socket | grep "ActiveState=active"

    echo "Enable service and verify its listed as enabled"
    snap start --enable socket-activation.sleep-daemon

    echo "Checking that services are listed correctly"
    snap services | cat -n > svcs.txt
    MATCH "     1\s+Service\s+Startup\s+Current\s+Notes$" < svcs.txt
    MATCH "     2\s+socket-activation.sleep-daemon\s+enabled\s+inactive\s+socket-activated$" < svcs.txt

    echo "Checking that service activation unit is reported as enabled and active again"
    systemctl show --property=UnitFileState snap.socket-activation.sleep-daemon.sock.socket | grep "enabled"
    systemctl show --property=ActiveState snap.socket-activation.sleep-daemon.sock.socket | grep "ActiveState=active"
