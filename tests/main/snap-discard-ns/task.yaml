summary: check basic operation of snap-discard-ns

details: |
    The internal command snap-discard-ns discards (unmounts) the
    /run/snapd/ns/$SNAP_NAME.mnt file and removes the current mount profile
    /run/snapd/ns/snap.$SNAP_NAME.fstab. The profile removal is optional and it
    is not an error if it doesn't exist.

prepare: |
    snap install test-snapd-tools

execute: |
    . "$TESTSLIB/dirs.sh"

    echo "We can try to discard a namespace before snap runs"
    $LIBEXECDIR/snapd/snap-discard-ns test-snapd-tools

    echo "We can try to discard a namespace before the .mnt file exits"
    mkdir -p /run/snapd/ns/
    $LIBEXECDIR/snapd/snap-discard-ns test-snapd-tools

    echo "We can try to discard a namespace before the .mnt file is mounted"
    touch /run/snapd/ns/test-snapd-tools.mnt
    $LIBEXECDIR/snapd/snap-discard-ns test-snapd-tools

    echo "We can discard the namespace after a snap runs"
    test-snapd-tools.success
    # The last hex is the same as nsfs but older stat on ubuntu 14.04 doesn't know
    # proc is there because on older kernels /proc/*/ns/mnt is not on nsfs but still on procfs.
    stat -f -c %T /run/snapd/ns/test-snapd-tools.mnt | MATCH 'proc|nsfs|0x6e736673'
    $LIBEXECDIR/snapd/snap-discard-ns test-snapd-tools
    stat -f -c %T /run/snapd/ns/test-snapd-tools.mnt | MATCH 'tmpfs'

    echo "We can fake a current mount profile and see that it is removed too"
    test-snapd-tools.success
    touch /run/snapd/ns/snap.test-snapd-tools.fstab
    $LIBEXECDIR/snapd/snap-discard-ns test-snapd-tools
    test ! -e /run/snapd/ns/snap.test-snapd-tools.fstab
