summary: Ensure that snapctl is-connected --list command works.

details: |
  Verifies that `snapctl is-connected --list` command when executed
  from a snap shows properly the list of connections established. 

prepare: |
  "$TESTSTOOLS"/snaps-state install-local test-snap

restore: |
  snap remove --purge test-snap

execute: |
  snap connect test-snap:network
  snap connect test-snap:camera
  OUT=""
  if [ -n "$SNAPD_TRACE" ] && [ -n "$SNAPD_JSON_LOGGING" ]; then
    # When structured trace logging is active, the output
    # will contain debug logs so filter out all logs
    OUT=$(test-snap.listconn 2>&1 | grep -v '"level":' || true)
  else
    OUT=$(test-snap.listconn 2>&1 || true)
  fi
  EXPECTED=$(printf "camera\nnetwork\n")
  if [ "$OUT" != "$EXPECTED" ]; then
    echo "List connections doesn't show expected plugs/slots: $OUT"
    exit 1
  fi

  snap disconnect test-snap:camera
  if [ -n "$SNAPD_TRACE" ] && [ -n "$SNAPD_JSON_LOGGING" ]; then
    # When structured trace logging is active, the output
    # will contain debug logs so filter out all logs
    OUT=$(test-snap.listconn 2>&1 | grep -v '"level":' || true)
  else
    OUT=$(test-snap.listconn 2>&1 || true)
  fi
  EXPECTED=$(printf "network\n")
  if [ "$OUT" != "$EXPECTED" ]; then
    echo "List connections doesn't show expected plugs/slots: $OUT"
    exit 1
  fi
