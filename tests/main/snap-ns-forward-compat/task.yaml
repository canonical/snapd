summary: Test that snap-confine errors in the right way

# Skip 32-bit architectures because the core20 snap is not available there
systems: [-*-32]

prepare: |
    echo "Install test snap"
    mkdir testsnap/import
    "$TESTSTOOLS"/snaps-state install-local testsnap

execute: |
    echo "Checking if the unshare command supports saving the namespace"
    unshare --mount=/something true 2> error.log || true
    tests.cleanup defer rm error.log
    if grep "option '--mount' doesn't allow an argument" error.log; then
        echo "unshare --mount=<file> is not supported, skipping test"
        exit 0
    fi


    echo "Creating a mount namespace whose root is a tmpfs"
    mkdir -p /run/snapd/ns/
    mount -o bind --make-private /run/snapd/ns/ /run/snapd/ns/
    touch /run/snapd/ns/testsnap.mnt
    MOUNT_TMPDIR="$(mktemp -d --tmpdir test-ns.XXXXXX)"
    tests.cleanup defer rmdir "$MOUNT_TMPDIR"
    SNAP_MOUNT_DIR="$(os.paths snap-mount-dir)"
    export SNAP_MOUNT_DIR
    unshare --mount=/run/snapd/ns/testsnap.mnt --propagation unchanged ./setup_mount_namespace.sh "$MOUNT_TMPDIR"
    # Mark our rootfs, so that snap-update-ns will not destroy it
    echo 'tmpfs / tmpfs x-snapd.origin=rootfs 0 0' > /run/snapd/ns/snap.testsnap.fstab

    echo "Running snap application and checking that it reuses our namespace"
    # We run this with SNAPD_DEBUG because this is the first execution of the
    # snap, and if the test fails it's important to know if the namespace was
    # reused or not.
    # ("/this-is-our-rootfs" has been created by setup_mount_namespace.sh)
    SNAPD_DEBUG=1 testsnap.cmd test -f /this-is-our-rootfs

    # Now add a content snap, and verify that snap-update-ns can handle our
    # tmpfs on "/"
    "$TESTSTOOLS"/snaps-state install-local test-snapd-content-slot
    snap connect testsnap:shared-content-plug test-snapd-content-slot:shared-content-slot

    # Check that nothing bad happened to our rootfs
    SNAPD_DEBUG=1 testsnap.cmd test -f /this-is-our-rootfs

    # Check that the content snap has been mounted
    testsnap.cmd test -f /snap/testsnap/x1/import/shared-content
