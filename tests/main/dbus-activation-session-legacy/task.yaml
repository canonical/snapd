summary: D-Bus session services support activation without a user instance of systemd

details: |
    Verify that snaps that consume the D-Bus session bus can be activated
    without a user instance of systemd running (the session bus is started
    manually). This is tested by creating a private D-Bus session, installing a
    snap that provides an activatable D-Bus service, and verifying that the
    service is activated when a method call is made.

prepare: |
    snap set system experimental.user-daemons=true

restore: |
    systemctl stop private-session-bus.service || true
    rm -f dbus-launch.env run-session-bus.sh
    snap unset system experimental.user-daemons

execute: |
    # This filters out Ubuntu 14.04 and Ubuntu Core respectively
    if [ "$(command -v systemd-run)" == "" ]; then
        exit 0
    fi

    cat << EOF > run-session-bus.sh
    #!/bin/sh
    cd $(pwd)
    exec dbus-daemon --print-address --session --address=unix:abstract=$(mktemp /tmp/dbus-XXXXXX) --fork > dbus-launch.env
    EOF
    chmod a+x run-session-bus.sh

    echo "Run a private D-Bus session bus as a systemd service"
    systemd-run --unit=private-session-bus.service \
        --service-type=forking ./run-session-bus.sh
    # CentOS 7's systemd does not seem to wait for the appear to wait
    # for the service to finish starting, so wait for the environment
    # file to be non-empty
    retry -n 3 --wait 1 test -s dbus-launch.env
    DBUS_SESSION_BUS_ADDRESS="$(cat dbus-launch.env)"
    export DBUS_SESSION_BUS_ADDRESS

    echo "Install a snap containing an activatable D-Bus session service"
    snap install --edge test-snapd-dbus-service

    echo "A service activation file has been created"
    test -f /var/lib/snapd/dbus-1/services/io.snapcraft.SnapDbusService.service

    echo "Making a method call wakes the service"
    "$TESTSTOOLS"/snaps-state install-local test-snapd-dbus-service-client
    snap connect test-snapd-dbus-service-client:dbus-session-plug \
                 test-snapd-dbus-service:dbus-session-slot
    test-snapd-dbus-service-client.session | MATCH "hello world"

    echo "Removing the snap also removes the service activation file"
    snap remove test-snapd-dbus-service
    test ! -f /var/lib/snapd/dbus-1/services/io.snapcraft.SnapDbusService.service
