summary: Check that prepare-image works for with enforced validation

details: |
    Snapd contains intricate implementation details needed for the first-boot
    process, also known as seeding. It is only natural that it also carries
    logic for validating and preparing seed directories.

    The test prepares the environment to run "snap prepare-image --custom",
    passing a JSON file with customizations that enable enforced snap
    validation. Once the seed is created the test looks if the expected revision
    of a snap that was in the seed, as actually used, even though the revision
    published to the selected channel is different.

    A local variant of the test downloads the the wrong revision from the store,
    passing it to "snap prepare-image" to show that enforced validation
    correctly selects the revision indicated by the validation set.

backends: [-autopkgtest]

systems: [-ubuntu-core-*, -fedora-*, -opensuse-*, -arch-*]

environment:
    ROOT: "$PWD/root"
    SEED: "$PWD/root/system-seed"
    LOCAL_GATING/local: 1
    LOCAL_GATING/fetched: 0

debug: |
    find "$SEED" -ls || true

execute: |
    echo Running prepare-image
    cat >custom.json <<EOF
    {
      "validation": "enforce"
    }
    EOF

    SNAP_ARG=
    if [ "${LOCAL_GATING}" = "1" ]; then
       snap download --edge test-snapd-gating
       chmod +r test-snapd-gating_*.snap
       SNAP_ARG="--snap test-snapd-gating_*.snap"
    fi

    su -c "SNAPPY_USE_STAGING_STORE=$SNAPPY_USE_STAGING_STORE snap prepare-image ${SNAP_ARG} --customize custom.json $TESTSLIB/assertions/gating-20-amd64.model $ROOT" test

    GATED_REV=2

    echo Verifying the result
    test -f "${SEED}/snaps/test-snapd-gated_${GATED_REV}.snap"

