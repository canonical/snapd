summary: Ensure that the output of snap interface <interface-name> contains an existing url

details: |
    Each interface should contain a url pointing to a documentation page found on
    snapcraft.io as https://snapcraft.io/docs/<interface-name>-interface. That page
    must also exist.

systems: [ubuntu-24.04-64]

execute: |
    # Checks to see if the url supplied as the first argument returns an OK HTML status code
    webpage_exists() {
        local url=$1
        local status_code
        local num_retries=3

        for _ in $(seq $num_retries); do
            # Make a HEAD request to the URL and capture the HTTP status code
            status_code=$(curl -o /dev/null -s -w "%{http_code}\n" "$url")

            # Check if the status code is in the 2xx range
            if [ "$status_code" -ge 200 ] && [ "$status_code" -lt 300 ]; then
                return 0
            fi
        done
        return 1
    }
     
    # The exclusion_map contains interfaces that are missing              
    # documentation. Each key is the name of the interface, while its    
    # value is the date by which it should have a working URL.           
    # The expiry date is <expiration year>/<expiration month>      
    
    declare -A exclusion_map
    exclusion_map["intel-qat"]="2024/10"
    exclusion_map["microceph"]="2024/10"
    exclusion_map["microceph-support"]="2024/10"
    exclusion_map["pkcs11"]="2024/10"
    exclusion_map["registry"]="2024/11"
    exclusion_map["snap-interfaces-requests-control"]="2024/11"
    exclusion_map["system-packages-doc"]="2024/10"
    exclusion_map["xilinx-dma"]="2024/10"
    exclusion_map["nomad-support"]="2024/10"

    # If the interface is in the exclusion_map and it is currently sooner
    # than its specified expiration date, then return true
    exclude() { 
        if [ -v "exclusion_map[$1]" ]; then
            local expire_date="${exclusion_map[$1]}"
            local year=${expire_date%%/*}
            local month=${expire_date#*/}
            if [[ $(date '+%Y') -lt $year ]]; then
                return 0
            fi
            if [[ $(date '+%Y') -eq $year ]] && [[ $((10#$(date '+%m'))) -le $((10#$month)) ]]; then
                return 0
            fi
        fi
        return 1
    }

    bad=""
    # Loop through all interfaces
    for iface in $(snap interface --all | awk 'NR > 1 {print $1}' | tr '\n' ' '); do
        printf "Checking presence of documentation url for interface %s\n" "'$iface':"
        url="https://snapcraft.io/docs/$iface-interface"
        actual="$( snap interface "$iface" )"
        if MATCH "documentation: $url" <<<"$actual"; then
            if exclude "$iface" || webpage_exists "$url"; then
                echo "ok"
            else
                bad=1
                echo "ERROR: Could not find help url for $iface at $url"
            fi
        else
            bad=1
            echo
            echo "ERROR: The output of 'snap interface $iface' does not contain a documentation entry for $url:"
            echo "----------------"
            echo "$actual"
            echo "----------------"
        fi
    done

    test -z "$bad"
