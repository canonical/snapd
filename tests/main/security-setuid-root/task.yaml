summary: Check that snap-confine refuses to run unconfined

details: |
    snap-confine is setuid root but is only confined with an apparmor profile
    when invoked as a system-installed package or when running in the core from
    the usual location (/usr/lib/snapd/snap-confine). As a security precaution
    it should detect and refuse to run if invoked from the core snap.

# No confinement (AppArmor, Seccomp) available on these systems
systems: [-debian-*, -fedora-*, -opensuse-*, -arch-*, -amazon-*, -centos-*]

prepare: |
    "$TESTSTOOLS"/snaps-state install-local test-snapd-sh
    echo "Ensure the snap-confine profiles on core are not loaded"
    for p in /var/lib/snapd/apparmor/profiles/snap-confine.*; do
        apparmor_parser -R "$p"
    done

restore: |
    echo "Ensure the snap-confine profiles are restored"
    for p in /var/lib/snapd/apparmor/profiles/snap-confine.*; do
        apparmor_parser -r "$p"
    done

debug: |
    ls -ld "$SNAP_MOUNT_DIR/core/current/usr/lib/snapd/snap-confine" || true
    ls -ld "$SNAP_MOUNT_DIR/ubuntu-core/current/usr/lib/snapd/snap-confine" || true
    ls -ld /usr/lib/snapd/snap-confine || true
    snap list

execute: |
    # NOTE: This has to run as the test user because the protection is only
    # active if user gains elevated permissions as a result of using setuid
    # root snap-confine.
    SNAP_MOUNT_DIR="$(os.paths snap-mount-dir)"
    if su test -c "sh -c \"SNAP_NAME=test-snapd-sh SNAP_INSTANCE_NAME=test-snapd-sh $SNAP_MOUNT_DIR/core/current/usr/lib/snapd/snap-confine snap.test-snapd-sh.sh -c '/bin/true' 2>/dev/null\""; then
        echo "snap-confine didn't refuse to run!"
        exit 1
    fi
    su test -c "sh -c \"SNAP_NAME=test-snapd-sh SNAP_INSTANCE_NAME=test-snapd-sh $SNAP_MOUNT_DIR/core/current/usr/lib/snapd/snap-confine snap.test-snapd-sh.sh -c '/bin/true' 2>&1\"" | MATCH "Refusing to continue to avoid permission escalation attacks"
