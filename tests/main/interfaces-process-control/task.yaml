summary: Ensure that the process-control interface works.

details: |
    The process-control interface allows a snap to control other processes via signals
    and nice.

    A snap which defines the process-control plug must be shown in the interfaces list.
    The plug must not be auto-connected on install and, as usual, must be able to be
    reconnected.

    A snap declaring a plug on this interface must be able to kill other processes. Currently
    this test does not check the priority change capability of the interface, will be
    extended later.

prepare: |
    echo "Given a snap declaring a plug on the process-control interface is installed"
    "$TESTSTOOLS"/snaps-state install-local process-control-consumer

execute: |
    echo "The interface is disconnected by default"
    snap interfaces -i process-control | MATCH -- '- +process-control-consumer:process-control'

    echo "When the plug is connected"
    snap connect process-control-consumer:process-control

    echo "Then the snap is able to kill an existing process"
    sleep 5m &
    pid=$!
    kill -s 0 "$pid"
    process-control-consumer.signal SIGTERM "$pid"
    not kill -s 0 "$pid"

    if [ "$(snap debug confinement)" = partial ] ; then
        exit
    fi

    echo "When the plug is disconnected"
    snap disconnect process-control-consumer:process-control

    echo "Then the snap is not able to kill an existing process"
    sleep 5m &
    pid=$!
    if process-control-consumer.signal SIGTERM "$pid" 2> process-kill.error; then
        echo "Expected permission error accessing killing a process with disconnected plug"
        exit 1
    fi
    grep -q "Permission denied" process-kill.error
    kill -s 0 "$pid"
    kill "$pid"
    not kill -s 0 "$pid"
