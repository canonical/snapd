summary: Check that root can activate the session agent via socket activation

systems:
    # Ubuntu 14.04 does not have a complete systemd implementation
    - -ubuntu-14.04-*
    # Systemd on CentOS 7/Amazon Linux 2 does not have the user@uid unit
    - -amazon-linux-2-*
    - -centos-7-*

environment:
    TEST_UID: $(id -u test)
    USER_RUNTIME_DIR: /run/user/${TEST_UID}

prepare: |
    # Ensure that snapd.session-agent.socket is enabled.  This may not
    # be the case on distributions where presets have been used to
    # disable it.
    if [ ! -L /usr/lib/systemd/user/sockets.target.wants/snapd.session-agent.socket ] &&
            ! systemctl --user --global is-enabled snapd.session-agent.socket; then
        systemctl --user --global enable snapd.session-agent.socket
        touch agent-was-enabled
    fi
    mkdir -p "$USER_RUNTIME_DIR"
    chmod u=rwX,go= "$USER_RUNTIME_DIR"
    chown test:test "$USER_RUNTIME_DIR"
    systemctl start "user@${TEST_UID}.service"

    # ensure curl is available (needed for e.g. core18)
    if ! command -v curl; then
        snap install --devmode --edge test-snapd-curl
        snap alias test-snapd-curl.curl curl
    fi

restore: |
    if snap list test-snapd-curl; then
        snap remove --purge test-snapd-curl
    fi
    systemctl stop "user@${TEST_UID}.service"
    rm -rf "${USER_RUNTIME_DIR:?}"/* "${USER_RUNTIME_DIR:?}"/.[!.]*
    if [ -f agent-was-enabled ]; then
        systemctl --user --global disable snapd.session-agent.socket
        rm agent-was-enabled
    fi

execute: |
    systemctl_user() {
        su -l -c "XDG_RUNTIME_DIR=\"${USER_RUNTIME_DIR}\" systemctl --user $*" test
    }
    echo "Initially snap session-agent is not running"
    if systemctl_user is-active snapd.session-agent.service; then
        exit 1
    fi

    echo "However its REST API socket exists"
    test -S "${USER_RUNTIME_DIR}/snapd-session-agent.socket"

    echo "We can issue queries to the socket as root"
    curl --unix-socket "${USER_RUNTIME_DIR}/snapd-session-agent.socket" \
        -D- http://localhost/v1/session-info | MATCH "HTTP/1.1 200 OK"

    echo "Now snap session-agent is running"
    systemctl_user is-active snapd.session-agent.service

    echo "If we stop session-agent, it can be restarted via socket activation"
    systemctl_user stop snapd.session-agent.service
    if systemctl_user is-active snapd.session-agent.service; then
        exit 1
    fi

    curl --unix-socket "${USER_RUNTIME_DIR}/snapd-session-agent.socket" \
        -D- http://localhost/v1/session-info | MATCH "HTTP/1.1 200 OK"
    systemctl_user is-active snapd.session-agent.service

    echo "The user running the session agent can also communicate with it"
    su -l -c "curl --unix-socket \"${USER_RUNTIME_DIR}/snapd-session-agent.socket\" \
        -D- http://localhost/v1/session-info" test | MATCH "HTTP/1.1 200 OK"
