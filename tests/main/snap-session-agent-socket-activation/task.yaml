summary: Check that root can activate the session agent via socket activation

systems:
    # Ubuntu 14.04 does not have a complete systemd implementation
    - -ubuntu-14.04-*
    # Systemd on CentOS 7/Amazon Linux 2 does not have the user@uid unit
    - -amazon-linux-2-*
    - -centos-7-*
    # fails regularly with "curl: Recv failure: connection reset by peer"
    - -ubuntu-core-16-*

prepare: |
    # Ensure that snapd.session-agent.socket is enabled.  This may not
    # be the case on distributions where presets have been used to
    # disable it.
    if [ ! -L /usr/lib/systemd/user/sockets.target.wants/snapd.session-agent.socket ] &&
            ! systemctl --user --global is-enabled snapd.session-agent.socket; then
        systemctl --user --global enable snapd.session-agent.socket
        touch agent-was-enabled
    fi

    # ensure curl is available (needed for e.g. core18)
    if ! command -v curl; then
        snap install --devmode --edge test-snapd-curl
        snap alias test-snapd-curl.curl curl
    fi

    tests.session -u test prepare

restore: |
    tests.session -u test restore

    if [ -f agent-was-enabled ]; then
        systemctl --user --global disable snapd.session-agent.socket
    fi

execute: |
    echo "Initially snap session-agent is not running"
    not tests.session -u test exec systemctl --user is-active snapd.session-agent.service

    echo "However its REST API socket exists"
    test -S /run/user/12345/snapd-session-agent.socket

    echo "We can issue queries to the socket as root"
    curl --unix-socket /run/user/12345/snapd-session-agent.socket \
        -D- http://localhost/v1/session-info | MATCH "HTTP/1.1 200 OK"

    echo "Now snap session-agent is running"
    tests.session -u test exec systemctl --user is-active snapd.session-agent.service

    echo "If we stop session-agent, it can be restarted via socket activation"
    tests.session -u test exec systemctl --user stop snapd.session-agent.service
    not tests.session -u test exec systemctl --user is-active snapd.session-agent.service

    curl --unix-socket /run/user/12345/snapd-session-agent.socket \
        -D- http://localhost/v1/session-info | MATCH "HTTP/1.1 200 OK"
    tests.session -u test exec systemctl --user is-active snapd.session-agent.service

    echo "The user running the session agent can also communicate with it"
    tests.session -u test exec curl --unix-socket /run/user/12345/snapd-session-agent.socket \
        -D- http://localhost/v1/session-info | MATCH "HTTP/1.1 200 OK"
