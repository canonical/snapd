summary: "Check that stop-modes works"

kill-timeout: 3m

debug: |
    grep -n '' *.pid || true
    stop_modes="sighup sighup-all sigusr1 sigusr1-all sigusr2 sigusr2-all"
    for s in $stop_modes; do
        systemctl status snap.test-snapd-service.test-snapd-${s}-service || true
    done

execute: |
    echo "When the service snap is installed"
    . $TESTSLIB/snaps.sh
    install_local test-snapd-service

    echo "We can see it running"
    systemctl status snap.test-snapd-service.test-snapd-service|MATCH "running"
    systemctl show -p MainPID snap.test-snapd-service.test-snapd-service > old-main.pid

    stop_modes="sighup sighup-all sigusr1 sigusr1-all sigusr2 sigusr2-all"
    for s in $stop_modes; do
        systemctl show -p MainPID snap.test-snapd-service.test-snapd-${s}-service > old-${s}.pid
        systemctl show -p ActiveState snap.test-snapd-service.test-snapd-${s}-service | MATCH "ActiveState=active"
    done

    echo "When it is re-installed"
    install_local test-snapd-service

    # note that we do not spread test sigterm{,-all} because catching this
    # signal in the service means the stop will timeout with a 90s delay
    for s in $stop_modes; do
        echo "We can still see it running with the same PID"
        systemctl show -p MainPID snap.test-snapd-service.test-snapd-${s}-service > new-${s}.pid
        systemctl show -p ActiveState snap.test-snapd-service.test-snapd-${s}-service | MATCH "ActiveState=active"

        test "$(cat new-${s}.pid)" = "$(cat old-${s}.pid)"

        if [[ "$s" == sig* ]]; then
            echo "checking that the right signal was sent"
            sleep 1
            journalctl -u snap.test-snapd-service.test-snapd-${s}-service | MATCH "got ${s%%-all}"
        fi
    done

    echo "But regular services are restarted"
    journalctl -u snap.test-snapd-service.test-snapd-service | MATCH "stop service"
    systemctl show -p MainPID snap.test-snapd-service.test-snapd-service > new-main.pid
    test "$(cat new-main.pid)" != "$(cat old-main.pid)"

    echo "Once the snap is removed, the service is stopped"
    snap remove test-snapd-service
    for s in $stop_modes; do
        journalctl | MATCH "stop ${s}"
    done

restore:
    rm -f *.pid || true
