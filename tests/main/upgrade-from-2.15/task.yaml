summary: Ensure upgrades from snapd 2.15 work

systems: [ubuntu-16.04-64]

prepare: |
    #shellcheck source=tests/lib/pkgdb.sh
    . "$TESTSLIB/pkgdb.sh"
    distro_purge_package snapd

restore: |
    #shellcheck source=tests/lib/pkgdb.sh
    . "$TESTSLIB/pkgdb.sh"
    if [ -e old_install_done ]; then
        echo "Ensure core is gone and we have ubuntu-core instead"
        distro_purge_package snapd
    fi
    distro_install_build_snapd

    # snap-confine, in the old version of snapd, leaves behind junk in
    # /tmp/snap.rootfs_* This is now detected by invariant detector, which uses
    # it as a sign of possible snap-confine crash. To avoid the false positive,
    # remove those leftovers.
    rm -rf /tmp/snap.rootfs_*

    # Remove file with wget history
    rm -f /root/.wget-hsts

execute: |
    #shellcheck source=tests/lib/systemd.sh
    . "$TESTSLIB"/systemd.sh

    echo "download snapd 2.15.2ubuntu1 and the matching ubuntu-core-launcher"
    wget https://launchpad.net/ubuntu/+source/snap-confine/1.0.38-0ubuntu0.16.04.8/+build/10606388/+files/ubuntu-core-launcher_1.0.38-0ubuntu0.16.04.8_amd64.deb
    wget https://launchpad.net/ubuntu/+source/snap-confine/1.0.38-0ubuntu0.16.04.8/+build/10606388/+files/snap-confine_1.0.38-0ubuntu0.16.04.8_amd64.deb
    wget https://launchpad.net/ubuntu/+source/snapd/2.15.2ubuntu1/+build/10939171/+files/snapd_2.15.2ubuntu1_amd64.deb
    echo "Install snapd 2.15.2"
    apt install -y ./ubuntu-core-launcher_1.0.38-0ubuntu0.16.04.8_amd64.deb ./snap-confine_1.0.38-0ubuntu0.16.04.8_amd64.deb ./snapd_2.15.2ubuntu1_amd64.deb

    echo "Installation completed"
    touch old_install_done

    echo "install a service snap and check its active"
    snap install go-example-webserver

    # google ships 4.15 in (some?) of their cloud instances for 16.04
    if [[ "$(uname -r)" != 4.4.* ]]; then
        # snapd version 2.15 will not work with kernels newer than
        # 4.4 because later kernels require snap-exec to be mmapable
        # add this missing rule here
        sed -i  's#^}$#/usr/lib/snapd/snap-exec m,\n}#' /var/lib/snapd/apparmor/profiles/snap.go-example-webserver.webserver
        apparmor_parser -r /var/lib/snapd/apparmor/profiles/snap.go-example-webserver.webserver
        systemctl start snap.go-example-webserver.webserver
    fi
    wait_for_service snap.go-example-webserver.webserver.service

    echo "Install a test snap"
    snap install test-snapd-sh
    
    echo "upgrade to current snapd"
    apt install -y "$GOHOME"/snapd*.deb

    echo "and ensure the snap service is still active"
    wait_for_service snap.go-example-webserver.webserver.service

    echo "wait for ubuntu-core->core transition"
    snap debug ensure-state-soon
    retry -n 240 --wait 1 sh -c 'snap changes | MATCH ".*Done.*Transition ubuntu-core to core"'

    echo "check that snap confine profiles are fine after upgrade"
    test -f /etc/apparmor.d/usr.lib.snapd.snap-confine.real
    test "$(find /var/lib/snapd/apparmor/profiles/ -name "snap-confine.core.*" | wc -l)" -eq 1
    MATCH "^/usr/lib/snapd/snap-confine \\(enforce\\)" < /sys/kernel/security/apparmor/profiles
    MATCH "^/snap/core/.*/usr/lib/snapd/snap-confine \\(enforce\\)" < /sys/kernel/security/apparmor/profiles

    echo "ensure that the old/obsolete snap-confine appamor profile got removed"
    test ! -f /etc/apparmor.d/usr.lib.snapd.snap-confine

    echo "Smoke test, this should fail if profiles were wrong"
    test-snapd-sh.sh -c 'echo hello' | MATCH hello
