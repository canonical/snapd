summary: Check that revert works.

# ubuntu-14.04: systemd-run not supported
systems: [-ubuntu-14.04*]

environment:
    STORE_TYPE/fake: fake
    STORE_TYPE/remote: ${REMOTE_STORE}
    BLOB_DIR: $(pwd)/fake-store-blobdir

prepare: |
    if [ "$STORE_TYPE" = "fake" ]; then
        if os.query is-core; then
            exit
        fi
        if [ "$TRUST_TEST_KEYS" = "false" ]; then
            echo "This test needs test keys to be trusted"
            exit
        fi
    fi

    echo "Given a snap is installed"
    snap install test-snapd-tools

    if [ "$STORE_TYPE" = "fake" ]; then
        #shellcheck source=tests/lib/store.sh
        . "$TESTSLIB"/store.sh
        setup_fake_store "$BLOB_DIR"

        echo "And a new version of that snap put in the controlled store"
        #shellcheck source=tests/lib/store.sh
        . "$TESTSLIB"/store.sh
        init_fake_refreshes "$BLOB_DIR" test-snapd-tools
    fi

restore: |
    if [ "$STORE_TYPE" = "fake" ]; then
        if os.query is-core; then
            exit
        fi
        if [ "$TRUST_TEST_KEYS" = "false" ]; then
            echo "This test needs test keys to be trusted"
            exit
        fi
        #shellcheck source=tests/lib/store.sh
        . "$TESTSLIB"/store.sh
        teardown_fake_store "$BLOB_DIR"
    fi

execute: |
    if [ "$STORE_TYPE" = "fake" ]; then
        if os.query is-core; then
            exit
        fi
        if [ "$TRUST_TEST_KEYS" = "false" ]; then
            echo "This test needs test keys to be trusted"
            exit
        fi
    fi

    echo "Revert without snap name shows error"
    if snap revert; then
        echo "Reverting without snap name should fail"
        exit 1
    fi

    echo "When a refresh is made"
    snap refresh --edge test-snapd-tools

    echo "Then the new version is installed"
    snap list | MATCH --  'test-snapd-tools +[0-9]+\.[0-9]+\+fake1'

    echo "And the snap runs"
    test-snapd-tools.echo hello|MATCH hello

    echo "When a revert is made"
    snap revert test-snapd-tools

    echo "Then the old version is active"
    snap list | MATCH -- 'test-snapd-tools +[0-9]+\.[0-9]+ '

    echo "And the data directories are present"
    SNAP_MOUNT_DIR="$(os.paths snap-mount-dir)"
    find "$SNAP_MOUNT_DIR/test-snapd-tools" -maxdepth 1 | MATCH current
    find /var/snap/test-snapd-tools -maxdepth 1 | MATCH current

    echo "And the snap runs confined"
    snap list|MATCH 'test-snapd-tools.* -$'

    echo "And the still snap runs"
    test-snapd-tools.echo hello|MATCH hello

    echo "And a new revert fails"
    if snap revert test-snapd-tools; then
        echo "A revert on an already reverted snap should fail"
        exit 1
    fi

    echo "And a refresh doesn't update the snap"
    snap refresh
    snap list | MATCH -- 'test-snapd-tools +[0-9]+\.[0-9]+ '

    echo "Unless the snap is asked for explicitly"
    snap refresh --edge test-snapd-tools
    snap list | MATCH -- 'test-snapd-tools +[0-9]+\.[0-9]+\+fake1'
