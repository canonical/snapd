summary: Check that revert works.

environment:
    STORE_TYPE/fake: fake
    STORE_TYPE/remote: ${REMOTE_STORE}
    BLOB_DIR: $(pwd)/fake-store-blobdir

prepare: |
    if [ "$STORE_TYPE" = "fake" ]; then
        if [[ "$SPREAD_SYSTEM" == ubuntu-core-16-* ]]; then
            exit
        fi
        if [ "$TRUST_TEST_KEYS" = "false" ]; then
            echo "This test needs test keys to be trusted"
            exit
        fi
    fi

    echo "Given a snap is installed"
    snap install test-snapd-tools

    if [ "$STORE_TYPE" = "fake" ]; then
        . $TESTSLIB/store.sh
        setup_fake_store $BLOB_DIR

        echo "And a new version of that snap put in the controlled store"
        . $TESTSLIB/store.sh
        init_fake_refreshes test-snapd-tools $BLOB_DIR
    fi

restore: |
    if [ "$STORE_TYPE" = "fake" ]; then
        if [[ "$SPREAD_SYSTEM" == ubuntu-core-16-* ]]; then
            exit
        fi
        if [ "$TRUST_TEST_KEYS" = "false" ]; then
            echo "This test needs test keys to be trusted"
            exit
        fi
        . $TESTSLIB/store.sh
        teardown_fake_store $BLOB_DIR
    fi

execute: |
    if [ "$STORE_TYPE" = "fake" ]; then
        if [[ "$SPREAD_SYSTEM" == ubuntu-core-16-* ]]; then
            exit
        fi
        if [ "$TRUST_TEST_KEYS" = "false" ]; then
            echo "This test needs test keys to be trusted"
            exit
        fi
    fi

    echo "When a refresh is made"
    snap refresh --edge test-snapd-tools

    echo "Then the new version is installed"
    snap list | grep -Pq "test-snapd-tools +\d+\.\d+\+fake1"

    echo "When a revert is made"
    snap revert test-snapd-tools

    echo "Then the old version is active"
    snap list | grep -Pq "test-snapd-tools +\d+\.\d+ "

    echo "And the data directories are present"
    ls /snap/test-snapd-tools | grep -q current
    ls /var/snap/test-snapd-tools | grep -q current

    echo "And the snap runs confined"
    snap list|grep test-snapd-tools|grep -q "-"

    echo "And a new revert fails"
    if snap revert test-snapd-tools; then
        echo "A revert on an already reverted snap should fail"
        exit 1
    fi

    echo "And a refresh doesn't update the snap"
    snap refresh
    snap list | grep -Pq "test-snapd-tools +\d+\.\d+ "

    echo "Unless the snap is asked for explicitly"
    snap refresh --edge test-snapd-tools
    snap list | grep -Pq "test-snapd-tools +\d+\.\d+\+fake1"
