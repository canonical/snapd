summary: Test refreshing and reverting a component from the store

details: |
  Verifies that we can install a snap and components from the store, refresh the
  snap+components, and revert the snap+components.

systems: [ubuntu-16.04-64, ubuntu-18.04-64, ubuntu-2*, ubuntu-core-*, fedora-*]

restore: |
  snap refresh --unhold
  snap remove test-snap-component-refreshes
  snap unset system refresh.retain

execute: |
  snap set system refresh.retain=5

  snap refresh --hold

  snap install test-snap-component-refreshes+one+two --revision=3 --edge

  # this snap uses a default track "custom", so we should be tracking
  # custom/edge
  snap list test-snap-component-refreshes | awk 'NR != 1 { print $4 }' | MATCH 'custom/edge'

  # verify that the components are installed with the correct revisions (these
  # are component revisions, not snap revisions)
  test-snap-component-refreshes one | MATCH '.*revision 3$'
  test-snap-component-refreshes two | MATCH '.*revision 3$'

  # test refreshing while providing a revision
  snap refresh test-snap-component-refreshes --revision=4
  test-snap-component-refreshes one | MATCH '.*revision 4$'
  test-snap-component-refreshes two | MATCH '.*revision 4$'

  # test just a normal refresh
  snap refresh test-snap-component-refreshes
  test-snap-component-refreshes one | MATCH '.*revision 5$'
  test-snap-component-refreshes two | MATCH '.*revision 5$'

  # candidate has the same snap revision as edge, but it contains a different
  # set of component revisions
  snap refresh test-snap-component-refreshes --candidate
  test-snap-component-refreshes one | MATCH '.*revision 7$'
  test-snap-component-refreshes two | MATCH '.*revision 6$'

  # go back to a revision we've already installed
  snap refresh test-snap-component-refreshes --revision=4
  test-snap-component-refreshes one | MATCH '.*revision 4$'
  test-snap-component-refreshes two | MATCH '.*revision 4$'

  # snap revision in beta is missing the "two" component, so it shouldn't be
  # linked
  snap refresh test-snap-component-refreshes --beta
  test-snap-component-refreshes one | MATCH '.*revision 6$'
  not test-snap-component-refreshes two

  # although revision 4 does have the "two" component available, it doesn't get
  # linked since it is not installed for the current revision
  snap refresh test-snap-component-refreshes --revision=4
  test-snap-component-refreshes one | MATCH '.*revision 4$'
  not test-snap-component-refreshes two

  # since revision 4 of the "two" component is not referenced by anything else
  # in the sequence, it should be unlinked and discarded
  snap tasks --last=refresh-snap | MATCH 'Unlink.*test-snap-component-refreshes\+two'
  snap tasks --last=refresh-snap | MATCH 'Discard.*test-snap-component-refreshes\+two'

  # note that a revert does bring back the "two" component, since it was
  # installed when revision 5 was last installed
  snap revert test-snap-component-refreshes --revision=5
  test-snap-component-refreshes one | MATCH '.*revision 7$'
  test-snap-component-refreshes two | MATCH '.*revision 6$'
