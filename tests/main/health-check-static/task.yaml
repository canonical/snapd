summary: Run static health check
details: |
    When a snap is refreshed and the health check fails, the snap in reverted

environment:
    SNAP_NAME: test-snapd-service
    SNAP_NAME_GOOD: ${SNAP_NAME}-v1-good
    SNAP_NAME_BAD: ${SNAP_NAME}-v3-bad-health
    SNAP_FILE_GOOD: ${SNAP_NAME}_1.0_all.snap
    SNAP_FILE_BAD: ${SNAP_NAME}_3.0_all.snap
    
prepare: |
    echo "Given a good (v1) and a bad health check (v3) snap"
    snapbuild $TESTSLIB/snaps/$SNAP_NAME_GOOD .
    snapbuild $TESTSLIB/snaps/$SNAP_NAME_BAD .

debug: |
    journalctl -u snap.test-snapd-service.service.service

execute: |
    wait_for_service_status() {
        retries=0
        while ! systemctl status snap.test-snapd-service.service.service|grep "$1"; do
            # retry
            retries=$((retries+1))
            if [ $retries -gt 20 ]; then
                echo 'expected "service v1" output did not appear in systemctl status snap.test-snapd-service.service.service'
                exit 1
            fi
            sleep 1
        done
    }
    echo "When we install v1"
    snap install --dangerous ${SNAP_FILE_GOOD}
    echo "The v1 service started correctly"
    wait_for_service_status "Started Service for snap application test-snapd-service.service"
    
    echo "When we refresh to v3 with a broken health check"
    if snap install --dangerous ${SNAP_FILE_BAD}; then
       echo "The ${SNAP_FILE_BAD} snap should not install cleanly, test broken"
       exit 1
    fi
    echo "Then v3 is rolled back and v1 is started again"
    wait_for_service_status "Started Service for snap application test-snapd-service.service"
    wait_for_service_status "service v1"
