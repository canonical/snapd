summary: Ensure that ECONNRESET is handled
restore: |
    echo "Remove the firewall rule again"
    iptables -D OUTPUT -m owner --uid-owner $(id -u test) -j REJECT  -p tcp --reject-with tcp-reset
execute: |
    echo "Downloading a large snap in the background"
    su -c "/usr/bin/env SNAPD_DEBUG=1 snap download --edge test-snapd-huge 2>snap-download.log" test &

    echo "Wait until the download started and downloaded more than 1 MB"
    partial=test-snapd-huge_1.snap.partial
    for i in $(seq 20); do
        [ -f $partial ] && [ $(wc -c <"$partial") -gt 1048576 ] && break
        sleep .5
    done
    [ ! -f $partial ] || [ $(wc -c <"$partial") -eq 0 ] && exit 1

    echo "Block the download using iptables"
    iptables -I OUTPUT -m owner --uid-owner $(id -u test) -j REJECT -p tcp --reject-with tcp-reset

    echo "Check that we retried"
    for i in $(seq 10); do
        [ grep -q "Retrying.*\.snap, attempt 2" snap-download.log ] && break
        sleep 1
    done
    MATCH "Retrying.*\.snap, attempt 2" snap-download.log
    # Note that the download will not be successful because of the nature of
    # the netfilter testbed. When snap download retries the next attempt will
    # end up with a "connection refused" error, something we do not retry
