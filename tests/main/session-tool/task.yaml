summary: tests for session-tool
# Session-tool depends on busctl and doesn't work on 14.04
systems: [-ubuntu-14.04-*]
environment:
    USER/root: root
    USER/test: test
prepare: |
    # Kill sessions that systemd has leaked earlier.
    session-tool --kill-leaked
    # Check which sessions we have before running the test
    loginctl list-sessions > before.txt
    # Prepare for using sessions as the given user
    session-tool --prepare -u "$USER"
execute: |
    for n in $(seq 300); do
        echo "ITERATION $(date) $n"
        session-tool -u "$USER" id -u  2>/tmp/session-tool.log | MATCH "$(id -u "$USER")"
        session-tool -u "$USER" env    2>/tmp/session-tool.log | MATCH "XDG_RUNTIME_DIR=/run/user/$(id -u "$USER")"
        # We get a logind session
        session-tool -u "$USER" loginctl list-sessions | grep "$USER"
        # Exit code is forwarded
        session-tool -u "$USER" true
        not session-tool -u "$USER" false
        # The -p option can be used to know the PID of the started program.
        # This is different from the pid of session-tool as there's a session
        # manager overlooking the termination of PAM stack (internally we use runuser).
        session-tool -u "$USER" -p /tmp/outer.pid "$(command -v any-python)" -c 'from __future__ import print_function; import os; print(os.getpid())' >/tmp/inner.pid
        test "$(cat /tmp/outer.pid)" = "$(cat /tmp/inner.pid)"
    done
restore: |
    # Restore after using sessions as the given user
    session-tool --restore -u "$USER"

    # Kill sessions that systemd has leaked over time.
    session-tool --kill-leaked

    # NOTE: This part of the test is very flaky if you restart systemd-logind
    # It *seems* that all new systems (Debian Sid, Arch, Tumbleweed and Ubuntu 20.04)
    # Forget about the root session that was there to begin with.

    # When we are done the sessions are exactly what we started with but this
    # can take a moment as the termination process is asnychronous.
    retry-tool -n 10 --wait 1 sh -c 'loginctl list-sessions > after.txt && diff -u before.txt after.txt'
    # Remove files we've created
    rm -f /tmp/{inner,outer}.pid
    rm -f {before,after}.txt
