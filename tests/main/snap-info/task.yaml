summary: Check that snap info works

# core18 has no python3-yaml
# amazon: no PyYAML is not packaged for python3
systems: [-amazon-*, -centos-*]

prepare: |
    snap pack "$TESTSLIB"/snaps/basic
    snap install test-snapd-tools
    snap install --channel beta --devmode test-snapd-devmode
    # ensures that an empty directory doesn't confuse things
    mkdir -v core

restore: |
    rmdir -v core

execute: |
    echo "With no arguments, errors out"
    not snap info

    echo "With one non-snap argument, errors out"
    not snap info /etc/passwd

    snap info --unicode=always        \
      basic_1.0_all.snap              \
      "$TESTSLIB"/snaps/basic-desktop \
      test-snapd-tools                \
      test-snapd-devmode              \
      core                            \
      /etc/passwd                     \
      test-snapd-python-webserver     \
      > out
    PYTHONIOENCODING=utf8 python3 check.py < out

    snap info --verbose "$TESTSLIB"/snaps/basic-desktop|MATCH "path: "
    "$TESTSTOOLS"/snaps-state install-local basic-desktop
    snap info basic-desktop|MATCH "license:[ ]+GPL-3.0"

    snap info --verbose basic_1.0_all.snap|MATCH "sha3-384:"
    snap info --verbose test-snapd-tools|MATCH "  ignore-validation:"

    echo "Ensure we show friendly error messages"
    snap info no-such-snap > out.stdout 2> out.stderr || true
    MATCH 'no snap found for "no-such-snap"' < out.stderr

    snap info no-such-snap no-such-other-snap > out.stdout 2> out.stderr || true
    MATCH 'warning: no snap found for "no-such-snap"' < out.stdout 
    MATCH 'warning: no snap found for "no-such-other-snap"' < out.stdout
    MATCH 'error: no valid snaps given' < out.stderr

    snap info no-such-snap test-snapd-tools > out.stdout 2> out.stderr
    MATCH 'warning: no snap found for "no-such-snap"' < out.stdout
    # no error output generated
    not test -s out.stderr

    echo "Ensure we show versions as strings (LP: 1669291)"
    snap info test-snapd-number-version | MATCH "edge:[ ]+2.10"
