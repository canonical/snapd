summary: Checks for parallel installation of sideloaded snaps containing desktop applications

restore: |
    snap set system experimental.parallel-instances=null

execute: |
    echo "Sideload the regular snap"
    "$TESTSTOOLS"/snaps-state install-local basic-desktop

    snap set system experimental.parallel-instances=true

    SNAP_MOUNT_DIR="$(os.paths snap-mount-dir)"
    for instance in foo longname; do
        echo "Sideload same snap as different instance named basic-desktop+$instance"
        expected="^basic-desktop_$instance 1.0 installed\$"
        "$TESTSTOOLS"/snaps-state install-local-as basic-desktop "basic-desktop_$instance" | MATCH "$expected"

        diff -u <(head -n5 "/var/lib/snapd/desktop/applications/basic-desktop+${instance}_echo.desktop") - <<-EOF
    [Desktop Entry]
    X-SnapInstanceName=basic-desktop_${instance}
    Name=Echo
    Comment=It echos stuff
    Exec=env BAMF_DESKTOP_FILE_HINT=/var/lib/snapd/desktop/applications/basic-desktop+${instance}_echo.desktop $SNAP_MOUNT_DIR/bin/basic-desktop_$instance.echo
    EOF

        test -d "$SNAP_MOUNT_DIR/basic-desktop_$instance/x1"
    done

    echo "All snaps are listed"
    snap list | MATCH '^basic-desktop '
    snap list | MATCH '^basic-desktop_foo '
    snap list | MATCH '^basic-desktop_longname '

    echo "Removing one instance does not remove other instances' data"
    snap remove --purge basic-desktop_foo
    test -f /var/lib/snapd/desktop/applications/basic-desktop+longname_echo.desktop
    test -f /var/lib/snapd/desktop/applications/basic-desktop_echo.desktop

    snap remove --purge basic-desktop
    test -f /var/lib/snapd/desktop/applications/basic-desktop+longname_echo.desktop
