summary: Check that preseeding of current ubuntu cloud image works under lxd.

details: |
  This test checks that preseeding of Ubuntu cloud images with snap-preseed
  command works in lxc container and that the resulting image can be run
  in a container and seeding finishes successfully.

# this test works only on 18.04-64 because it requires lxd from deb (lxd snap
# as it wouldn't allow mount) and tries to replicate launchpad builder setup.
systems: [ubuntu-18.04-64]

environment:
  IMAGE_MOUNTPOINT: /mnt/cloudimg

prepare: |
  #shellcheck source=tests/lib/preseed.sh
  . "$TESTSLIB/preseed.sh"

  IMGURL=$(tests.nested download image-url ubuntu-20.04-64)
  wget --quiet "$IMGURL" -O cloudimg.img

  modprobe nbd

  # Run qemu-nbd as a service, so that it does not interact with ssh
  # stdin/stdout it would otherwise inherit from the spread session.
  # TODO: re-use tests/lib/preseed.sh:mount_ubuntu_image() here
  systemd-run --system --service-type=forking --unit=qemu-nbd-preseed.service "$(command -v qemu-nbd)" -v --fork -c /dev/nbd0 "$(pwd)/cloudimg.img"
  # nbd0p1 may take a short while to become available
  if ! retry -n 30 --wait 1 test -e /dev/nbd0p1; then
        echo "ERROR: /dev/nbd0p1 did not show up"
        journalctl -u qemu-nbd-preseed.service
        find /dev/ -name "nbd0*" -ls
        exit 1
  fi
  mkdir -p "$IMAGE_MOUNTPOINT"
  mount /dev/nbd0p1 "$IMAGE_MOUNTPOINT"

  # add snapd from this branch into the seed
  "$TESTSTOOLS"/snaps-state repack_snapd_deb_into_snap snapd
  mv snapd-from-deb.snap snapd.snap
  inject_snap_into_seed "$IMAGE_MOUNTPOINT" snapd

  if [ ! -x /usr/bin/lxc ]; then
    apt install -y lxd
    touch remove-lxd
  fi

  # for images that are already preseeded, we need to undo the preseeding there
  echo "Running preseed --reset for already preseeded cloud images"
  SNAPD_DEBUG=1 /usr/lib/snapd/snap-preseed --reset "$IMAGE_MOUNTPOINT"

restore: |
  if [ -f remove-lxd ]; then
    for container in my-ubuntu my-ubuntu-preseeded; do
      lxc stop "$container" --force || true
      lxc delete "$container" || true
    done
    apt purge -y lxd
    apt autoremove --purge -y
  fi

    umount "$IMAGE_MOUNTPOINT"
  rmdir "$IMAGE_MOUNTPOINT"

  # qemu-nbd -d may sporadically fail when removing the device,
  # reporting it's still in use.
  retry -n 30 --wait 1 qemu-nbd -d /dev/nbd0

  "$TESTSTOOLS"/lxd-state undo-mount-changes

execute: |
  echo "Create a trivial container using the lxd snap"
  lxd waitready
  lxd init --auto

  lxc launch "ubuntu:20.04" my-ubuntu

  # use a privileged and unconfined lxd container that is close to launchpad
  # builders configuration; this is required for mounting inside the container.
  # based on lxd config created by https://git.launchpad.net/launchpad-buildd/tree/lpbuildd/target/lxd.py
  lxc config set my-ubuntu security.privileged true
  lxc config set my-ubuntu security.nesting true
  cat <<__LXC__ | lxc config set my-ubuntu raw.lxc -
  lxc.apparmor.profile=unconfined
  lxc.cap.drop=
  lxc.cap.drop=sys_time sys_module
  lxc.cgroup.devices.allow=
  lxc.cgroup.devices.deny=
  lxc.mount.auto=
  lxc.mount.auto=proc:rw sys:rw
  __LXC__
  lxc config device add my-ubuntu mounted-ubuntu-image disk source="$IMAGE_MOUNTPOINT" path="$IMAGE_MOUNTPOINT"
  lxc restart my-ubuntu

  echo "Make latest snap-preseed command available in the lxd container"
  lxc exec my-ubuntu -- mkdir -p "$GOHOME"
  lxc file push /usr/lib/snapd/snap-preseed "my-ubuntu/$GOHOME/"
  lxc file push cloudimg.img "my-ubuntu/$GOHOME/"
  lxc file push preseed-prepare.sh "my-ubuntu/$GOHOME/"

  echo "Running preseeding in the lxd container"
  # mount /dev, /proc, /sys under mounted ubuntu image in the container.
  lxc exec my-ubuntu -- "$GOHOME"/preseed-prepare.sh "$IMAGE_MOUNTPOINT"
  lxc exec my-ubuntu -- "$GOHOME"/snap-preseed "$IMAGE_MOUNTPOINT"

  echo "Sanity check of mount units"
  # preseeded image is mounted on the host, so we can directly inspect
  # preseeding artifacts.
  MATCH "Type=squashfs$" < "$IMAGE_MOUNTPOINT"/etc/systemd/system/snap-lxd-*.mount
  MATCH "Type=squashfs$" < "$IMAGE_MOUNTPOINT"/etc/systemd/system/snap-snapd-*.mount
  MATCH "Type=squashfs$" < "$IMAGE_MOUNTPOINT"/etc/systemd/system/snap-core20-*.mount

  snap debug state "$IMAGE_MOUNTPOINT"/var/lib/snapd/state.json --change=1 > tasks.log

  echo "Checking preseeding tasks"
  MATCH "Doing .+ mark-preseeded +Mark system pre-seeded" < tasks.log
  MATCH "Do .+ mark-seeded +Mark system seeded" < tasks.log

  echo "Importing resulting ubuntu image with lxd"
  # see https://ubuntu.com/tutorials/create-custom-lxd-images#3-creating-basic-system-installation
  # XXX: this is suboptimal, copy current snapd-generator from 18.04 build into 20.04
  cp /lib/systemd/system-generators/snapd-generator "$IMAGE_MOUNTPOINT"/lib/systemd/system-generators/
  sudo tar -cvzf preseeded-rootfs.tar.gz -C "$IMAGE_MOUNTPOINT" .
  tar -cvzf metadata.tar.gz metadata.yaml
  lxc image import metadata.tar.gz preseeded-rootfs.tar.gz --alias ubuntu-preseeded
  rm preseeded-rootfs.tar.gz

  echo "Checking that preseeded image runs with lxd"
  lxc launch ubuntu-preseeded my-ubuntu-preseeded

  # it takes quite a bit before snapd is ready
  retry -n 50 --wait 5 sh -c 'lxc exec my-ubuntu-preseeded --  snap wait system seed.loaded'
  # check for changes in error, those could get unnoticed if seeding succeeded
  # after a retry.
  if lxc exec my-ubuntu-preseeded --  snap changes | MATCH -i error; then
    echo "Unexpected seed error:"
    lxc exec my-ubuntu-preseeded --  snap changes
    exit 1
  fi
  lxc exec my-ubuntu-preseeded -- snap debug seeding | MATCH "preseeded:\s+true"
  lxc exec my-ubuntu-preseeded -- snap debug seeding | MATCH "seeded:\s+true"
  if lxc exec my-ubuntu-preseeded -- snap debug seeding | MATCH "seed-error"; then
    echo "Unexpected seed error:"
    lxc exec my-ubuntu-preseeded -- snap debug seeding
    exit 1
  fi

  echo "Sanity check that mount overrides were generated inside the container"
  lxc exec my-ubuntu-preseeded -- find /var/run/systemd/generator/ -name container.conf > overrides.log
  MATCH "/var/run/systemd/generator/snap-core20.*mount.d/container.conf" < overrides.log
  MATCH "/var/run/systemd/generator/snap-snapd-.*mount.d/container.conf" < overrides.log
  MATCH "/var/run/systemd/generator/snap-lxd-.*mount.d/container.conf" < overrides.log
