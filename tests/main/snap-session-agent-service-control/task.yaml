summary: Check that root can control user instances of systemd via the session agent

systems:
    # Ubuntu 14.04 does not have a complete systemd implementation
    - -ubuntu-14.04-*
    # Ubuntu Core 16 has read-only /etc/systemd/user
    - -ubuntu-core-16-*
    # Systemd on CentOS 7/Amazon Linux 2 does not have the user@uid unit
    - -amazon-linux-2-*
    - -centos-7-*

prepare: |
    # Ensure that snapd.session-agent.socket is enabled.  This may not
    # be the case on distributions where presets have been used to
    # disable it.
    if [ ! -L /usr/lib/systemd/user/sockets.target.wants/snapd.session-agent.socket ] &&
            ! systemctl --user --global is-enabled snapd.session-agent.socket; then
        systemctl --user --global enable snapd.session-agent.socket
        touch agent-was-enabled
    fi

    # ensure curl is available (needed for e.g. core18)
    if ! command -v curl; then
        snap install --devmode --edge test-snapd-curl
        snap alias test-snapd-curl.curl curl
    fi

    tests.session -u test prepare

restore: |
    tests.session -u test restore
    snap remove --purge test-snapd-curl

    if [ -f agent-was-enabled ]; then
        systemctl --user --global disable snapd.session-agent.socket
    fi
    rm -f /etc/systemd/user/snap.test-service.service

execute: |
    echo "Create a user mode service"
    cat << \EOF > /etc/systemd/user/snap.test-service.service
    [Unit]
    Description=test service
    [Service]
    Type=simple
    ExecStart=/bin/sleep 1d
    EOF

    echo "The session agent can reload the user mode systemd instance"
    curl --unix-socket /run/user/12345/snapd-session-agent.socket \
        -D- -X POST -H "Content-Type: application/json" \
        -d '{"action": "daemon-reload"}' \
        http://localhost/v1/service-control | MATCH "HTTP/1.1 200 OK"

    echo "The service is now visible but not active"
    tests.session -u test exec systemctl --user show --property=LoadState snap.test-service.service | MATCH LoadState=loaded
    tests.session -u test exec systemctl --user show --property=ActiveState snap.test-service.service | MATCH ActiveState=inactive

    echo "The session agent can start user mode services"
    curl --unix-socket /run/user/12345/snapd-session-agent.socket \
        -D- -X POST -H "Content-Type: application/json" \
        -d '{"action": "start", "services": ["snap.test-service.service"]}' \
        http://localhost/v1/service-control | MATCH "HTTP/1.1 200 OK"
    tests.session -u test exec systemctl --user show --property=ActiveState snap.test-service.service | MATCH ActiveState=active

    echo "The session agent can stop user mode services"
    curl --unix-socket /run/user/12345/snapd-session-agent.socket \
        -D- -X POST -H "Content-Type: application/json" \
        -d '{"action": "stop", "services": ["snap.test-service.service"]}' \
        http://localhost/v1/service-control | MATCH "HTTP/1.1 200 OK"
    tests.session -u test exec systemctl --user show --property=ActiveState snap.test-service.service | MATCH ActiveState=inactive
