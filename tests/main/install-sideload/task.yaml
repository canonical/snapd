summary: Checks for snap sideload install

# slow in autopkgtest (>1m)
backends: [-autopkgtest]

environment:
    # Ensure that running purely from the deb (without re-exec) works
    # correctly
    SNAP_REEXEC/reexec0: 0
    SNAP_REEXEC/reexec1: 1

prepare: |
    for snap in basic test-snapd-tools basic-desktop test-snapd-devmode; do
        snap pack "$TESTSLIB"/snaps/$snap
    done

execute: |
    echo "Sideloaded snap shows status"
    expected='^basic 1.0 installed$'
    snap install --dangerous ./basic_1.0_all.snap | MATCH "$expected"

    echo "Sideloaded snap with (deprecated) --force-dangerous option"
    snap remove --purge basic
    snap install --force-dangerous ./basic_1.0_all.snap | MATCH "$expected"

    echo "Sideloaded snap executes commands"
    snap install --dangerous ./test-snapd-tools_1.0_all.snap
    test-snapd-tools.success
    [ "$(test-snapd-tools.echo Hello World)" = "Hello World" ]

    echo "Sideload desktop snap"
    SNAP_MOUNT_DIR="$(os.paths snap-mount-dir)"
    snap install --dangerous ./basic-desktop_1.0_all.snap
    diff -u <(head -n5 /var/lib/snapd/desktop/applications/basic-desktop_echo.desktop) - <<-EOF
    	[Desktop Entry]
    	X-SnapInstanceName=basic-desktop
    	Name=Echo
    	Comment=It echos stuff
    	Exec=env BAMF_DESKTOP_FILE_HINT=/var/lib/snapd/desktop/applications/basic-desktop_echo.desktop $SNAP_MOUNT_DIR/bin/basic-desktop.echo
    EOF

    echo "Sideload devmode snap fails without flags"
    expected="requires devmode or confinement override"
    "$TESTSTOOLS"/to-one-line "$( snap install --dangerous ./test-snapd-devmode_1.0_all.snap 2>&1 )" | MATCH "$expected"

    echo "Sideload devmode snap succeeds with --devmode"
    expected="test-snapd-devmode 1.0 installed"
    snap install --devmode ./test-snapd-devmode_1.0_all.snap | MATCH "$expected"
    expected="^test-snapd-devmode +.* +devmode"
    snap list | MATCH  "$expected"

    if [ "$(snap debug confinement)" = strict ] ; then
        echo "Sideload devmode snap succeeds with --jailmode"
        expected="test-snapd-devmode 1.0 installed"
        snap install --dangerous --jailmode ./test-snapd-devmode_1.0_all.snap | MATCH "$expected"
        expected="^test-snapd-devmode +.* +jailmode"
        snap list | MATCH "$expected"
    fi

    echo "Sideload devmode snap fails with both --devmode and --jailmode"
    expected="cannot use devmode and jailmode flags together"
    ( snap install --devmode --jailmode ./test-snapd-devmode_1.0_all.snap 2>&1 || true ) | MATCH "$expected"

    echo "Sideload a second time succeeds"
    snap install --dangerous ./test-snapd-tools_1.0_all.snap
    test-snapd-tools.success

    # TODO:UC20: fix to work on uc20 too
    # The "seed/" dir is on a FAT partition on uc20 so the permissions are
    # different here.
    if ! os.query is-core20; then
        echo "All snap blobs are 0600"
        test "$( find /var/lib/snapd/{snaps,cache,seed/snaps}/ -type f -printf '%#m\n' | sort -u | xargs )" = "0600"
    fi

    # TODO: check we copy the data directory over

    echo "Remove --revision works"
    snap remove --revision x1 test-snapd-tools
    test-snapd-tools.success
    test ! -d "$SNAP_MOUNT_DIR/test-snapd-tools/x1"

    echo "Install multiple local snaps"
    expected="(basic 1.0 installed\stest-snapd-tools 1.0 installed)|(test-snapd-tools 1.0 installed\sbasic 1.0 installed)"
    snap install --dangerous test-snapd-tools_1.0_all.snap basic_1.0_all.snap | MATCH -z "$expected"
    snap install --devmode test-snapd-tools_1.0_all.snap basic_1.0_all.snap | MATCH -z "$expected"
