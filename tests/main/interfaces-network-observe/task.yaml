summary: Ensure that the network-observe interface works

details: |
    The network-observe interface allows a snap to query the network status information.

    A snap which defines the network-observe plug must be shown in the interfaces list.
    The plug must not be autoconnected on install and, as usual, must be able to be
    reconnected.

    A snap declaring a plug on this interface must be able to access read the network status,
    the test sets up a network service to establish a known state in the network to be queried.

environment:
    PORT: 8081
    SERVICE_FILE: "./service.sh"
    SERVICE_NAME: "test-service"

prepare: |
    echo "Given a snap declaring a plug on the network-observe interface is installed"
    snapbuild $TESTSLIB/snaps/network-observe-consumer .
    snap install network-observe-consumer_1.0_all.snap

    echo "And a network service is up"
    printf "#!/bin/sh -e\nwhile true; do echo \"HTTP/1.1 200 OK\n\nok\n\" |  nc -l -p $PORT -q 1; done" > $SERVICE_FILE
    chmod a+x $SERVICE_FILE
    systemd-run --unit $SERVICE_NAME $SERVICE_FILE
    while ! netstat -lnt | grep -Pq "tcp.*?:$PORT +.*?LISTEN\n*"; do sleep 0.5; done

restore: |
    systemctl stop $SERVICE_NAME
    rm -f network-observe-consumer_1.0_all.snap net-query.output $SERVICE_FILE

execute: |
    CONNECTED_PATTERN=":network-observe +network-observe-consumer"
    DISCONNECTED_PATTERN="(?s).*?\n- +network-observe-consumer:network-observe"

    echo "Then the plug disconnected by default"
    snap interfaces | grep -Pzq "$DISCONNECTED_PATTERN"

    echo "===================================="

    echo "When the plug is connected"
    snap connect network-observe-consumer:network-observe ubuntu-core:network-observe
    snap interfaces | grep -Pzq "$CONNECTED_PATTERN"

    echo "Then the snap command can query network status information"
    network-observe-consumer | grep -P "0.0.0.0:$PORT.*?LISTEN"

    echo "===================================="

    echo "When the plug is disconnected"
    snap disconnect network-observe-consumer:network-observe ubuntu-core:network-observe
    snap interfaces | grep -Pzq "$DISCONNECTED_PATTERN"

    echo "Then the snap command can not query network status information"
    if network-observe-consumer 2>net-query.output; then
        echo "Expected error caling command with disconnected plug"
    fi
    cat net-query.output | grep -Pq "Permission denied"
