summary: Ensure that the network-observe interface works

systems: [-fedora-*, -opensuse-*]

details: |
    The network-observe interface allows a snap to query the network status information.

    A snap which defines the network-observe plug must be shown in the interfaces list.
    The plug must not be autoconnected on install and, as usual, must be able to be
    reconnected.

    A snap declaring a plug on this interface must be able to access read the network status,
    the test sets up a network service to establish a known state in the network to be queried.

environment:
    PORT: 8081
    SERVICE_FILE: "./service.sh"
    SERVICE_NAME: "test-service"

prepare: |
    #shellcheck source=tests/lib/snaps.sh
    . "$TESTSLIB/snaps.sh"
    #shellcheck source=tests/lib/systemd.sh
    . "$TESTSLIB/systemd.sh"

    echo "Given a snap declaring a plug on the network-observe interface is installed"
    install_local network-observe-consumer

    echo "And a network service is up"
    # shellcheck source=tests/lib/network.sh
    . "$TESTSLIB"/network.sh
    make_network_service "$SERVICE_NAME" "$SERVICE_FILE" "$PORT"

restore: |
    #shellcheck source=tests/lib/systemd.sh
    . "$TESTSLIB/systemd.sh"

    #shellcheck disable=SC2153
    systemd_stop_and_destroy_unit "$SERVICE_NAME"
    rm -f net-query.output "$SERVICE_FILE"

execute: |
    echo "The interface is disconnected by default"
    snap interfaces -i network-observe | MATCH -- '^- +network-observe-consumer:network-observe'

    echo "When the plug is connected"
    snap connect network-observe-consumer:network-observe

    echo "Then the snap command can query network status information"
    network-observe-consumer | MATCH "LISTEN.*:$PORT"

    if [ "$(snap debug confinement)" = strict ] ; then
        echo "When the plug is disconnected"
        snap disconnect network-observe-consumer:network-observe

        echo "Then the snap command can not query network status information"
        if network-observe-consumer 2>net-query.output; then
            echo "Expected error caling command with disconnected plug"
        fi
        grep -Pq "Permission denied" < net-query.output
    fi
