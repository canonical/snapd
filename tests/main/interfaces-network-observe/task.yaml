summary: Ensure that the network-observe interface works

systems: [-fedora-*, -opensuse-*]

details: |
    The network-observe interface allows a snap to query the network status information.

    A snap which defines the network-observe plug must be shown in the interfaces list.
    The plug must not be autoconnected on install and, as usual, must be able to be
    reconnected.

    A snap declaring a plug on this interface must be able to access read the network status,
    the test sets up a network service to establish a known state in the network to be queried.

environment:
    PORT: 8081
    SERVICE_FILE: "./service.sh"
    SERVICE_NAME: "test-service"

prepare: |
    . "$TESTSLIB/snaps.sh"
    . "$TESTSLIB/systemd.sh"

    echo "Given a snap declaring a plug on the network-observe interface is installed"
    install_local network-observe-consumer

    echo "And a network service is up"
    printf "#!/bin/sh -e\nwhile true; do echo \"HTTP/1.1 200 OK\n\nok\n\" |  nc -l -p $PORT; done" > $SERVICE_FILE
    chmod a+x $SERVICE_FILE
    systemd_create_and_start_unit $SERVICE_NAME "$(readlink -f $SERVICE_FILE)"

    while ! netstat -lnt | grep -Pq "tcp.*?:$PORT +.*?LISTEN\n*"; do sleep 0.5; done

restore: |
    . "$TESTSLIB/systemd.sh"

    systemd_stop_and_destroy_unit $SERVICE_NAME
    rm -f net-query.output $SERVICE_FILE

execute: |
    echo "The interface is disconnected by default"
    snap interfaces | MATCH "\- +network-observe-consumer:network-observe"

    echo "When the plug is connected"
    snap connect network-observe-consumer:network-observe

    echo "Then the snap command can query network status information"
    network-observe-consumer | grep -P "0.0.0.0:$PORT.*?LISTEN"

    if [ "$(snap debug confinement)" = strict ] ; then
        echo "When the plug is disconnected"
        snap disconnect network-observe-consumer:network-observe

        echo "Then the snap command can not query network status information"
        if network-observe-consumer 2>net-query.output; then
            echo "Expected error caling command with disconnected plug"
        fi
        cat net-query.output | grep -Pq "Permission denied"
    fi
