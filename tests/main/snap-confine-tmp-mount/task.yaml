summary: ensure snap-confine correctly setups up the private tmp mount namespace

details: |
    Ensure that when creating the private tmp mount namespace for a snap that it
    is done so under /tmp/snap-private-tmp/snap.SNAP_NAME which is owned by root

# ubuntu-14.04: the test sets up a user session, which requires more recent systemd
systems: [-ubuntu-14.04-*]

prepare: |
    echo "Install a helper snap"
    "$TESTSTOOLS"/snaps-state install-local test-snapd-sh

    tests.session -u test prepare

restore: |
    tests.session -u test restore
    rm -f /tmp/snap-confine-stdout.log /tmp/snap-confine-stderr.log

debug: |
    # Print snap-confine stdout
    cat /tmp/snap-confine-stdout.log || true
    # Print snap-confine stderr
    cat /tmp/snap-confine-stderr.log || true

execute: |
    SNAP_CONFINE=$(os.paths libexec-dir)/snapd/snap-confine

    # on Ubuntu Core we need to use the correct path to ensure it is
    # appropriately confined by apparmor as it may be from the snapd
    # snap
    if os.query is-core16; then
        # on uc16, we should just use /usr/lib/snapd/snap-confine from the host 
        # which by definition will come from the currently installed core snap 
        SNAP_CONFINE=/usr/lib/snapd/snap-confine
    elif os.query is-core; then
        # on UC18+, snap-confine will come from the snapd snap, so use the 
        # active installed revision as the snap-confine to execute
        SNAPD_SNAP_REV=$(snap list snapd | tail -n +2 | awk '{print $3}')
        SNAP_CONFINE="/snap/snapd/$SNAPD_SNAP_REV/usr/lib/snapd/snap-confine"
    fi
    # execute snap-confine - this should create a private tmp dir as
    # /tmp/snap-private-tmp/snap.test-snapd-sh/ - snap-confine outputs to
    # stderr and id will output to stdout so capture each separately
    tests.session -u test exec sh -c "env -i SNAPD_DEBUG=1 SNAP_INSTANCE_NAME=test-snapd-sh $SNAP_CONFINE --base core snap.test-snapd-sh.sh /bin/bash -c id 1>/tmp/snap-confine-stdout.log 2>/tmp/snap-confine-stderr.log"

    stat -c "%U %G %a" /tmp/snap-private-tmp | MATCH "root root 700"
    stat -c "%U %G %a" /tmp/snap-private-tmp/snap.test-snapd-sh | MATCH "root root 700"
    stat -c "%U %G %a" /tmp/snap-private-tmp/snap.test-snapd-sh/tmp | MATCH "root root 1777"
    # and snap-confine should ensure the target binary is executed as the test user
    MATCH "uid=12345\(test\) gid=12345\(test\)" /tmp/snap-confine-stdout.log
