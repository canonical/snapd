summary: |
  Ensure `snap validate --enforce` works with validation-sets from the store.

# This test uses validation set assertions from the store uploaded upfront
# with my (stolowski) private store key (account-id: xSfWKGdLoQBoQx88vIM1MpbFNMq53t1f,
# public-key-sha3: o_x83A3wpIvJznIHBJIK7jRmRZKLlqx5jOr30HUsloFfBseXNF0ztoj18EvNualy);
# the input assertion provided with the test is testenforce1-seq1.yaml and testenforce1-seq2.yaml;
# they are included for reference and in case this needs to be recreated with another
# developer account, but otherwise are not used in the test.
#
# If this needs to be redone with another developer account, the steps are:
# 1. update account-id in the testenforce-*.yaml files for the developer to use.
# 2. upload validation-set assertions to the store (repeat for sequence 1 and sequence 2,
#    paste respective testenforceX-seqN.yaml file when snapcraft opens up the editor):
#    snapcraft edit-validation-sets <account-id> testenforce1 1
#    snapcraft edit-validation-sets <account-id> testenforce1 2
#    snapcraft edit-validation-sets <account-id> testenforce2 1
# 3. change account-ids in the test with the desired developer key

environment:
  ACCOUNT_ID: xSfWKGdLoQBoQx88vIM1MpbFNMq53t1f

restore: |
  snap validate --forget "$ACCOUNT_ID"/testenforce1 || true
  snap validate --forget "$ACCOUNT_ID"/testenforce2 || true

execute: |
  echo "Setting validation set in enforce mode fails when snap is not installed"
  if snap validate --enforce "$ACCOUNT_ID"/testenforce1 > log.txt 2>&1; then
    echo "Expected snap validate to fail"
    exit 1
  fi
  MATCH "error: cannot apply validation set: cannot enforce validation set: validation sets assertions are not met:" < log.txt
  MATCH "missing required snaps:" < log.txt
  MATCH "test-snapd-validation-set-enforcing \(required by sets xSfWKGdLoQBoQx88vIM1MpbFNMq53t1f/testenforce1\)" < log.txt

  echo "Install the required snap and enable enforcing mode, pinned at sequence point 1"
  snap install --beta test-snapd-validation-set-enforcing
  snap validate --enforce "$ACCOUNT_ID"/testenforce1=1

  echo "Check that the validation set is listed and enforced"
  snap validate | MATCH "^$ACCOUNT_ID/testenforce1=1 +enforce +1 +valid"
  snap list | MATCH "test-snapd-validation-set-enforcing +1\.0\.0 +1 +latest/beta"

  echo "Check that an invalid snap cannot be installed"
  if snap install hello-world > log.txt 2>&1; then
    echo "Expected snap install to fail"
    exit 1
  fi
  MATCH 'error: cannot install "hello-world": cannot install snap "hello-world" due to' < log.txt
  MATCH "enforcing rules of validation set" < log.txt
  MATCH "16/$ACCOUNT_ID/testenforce1/1" < log.txt
  
  echo "But it can be installed with --ignore-validation flag"
  snap install --ignore-validation hello-world
  snap validate | MATCH "^$ACCOUNT_ID/testenforce1=1 +enforce +1 +invalid"
  snap remove --purge hello-world

  echo "Snap cannot be removed when required"
  if snap remove test-snapd-validation-set-enforcing > log.txt 2>&1; then
    echo "Expected snap remove to fail"
    exit 1
  fi
  MATCH 'error: cannot remove "test-snapd-validation-set-enforcing": snap' < log.txt
  MATCH '"test-snapd-validation-set-enforcing" is not removable: snap' < log.txt
  MATCH '"test-snapd-validation-set-enforcing" is required by validation sets:' < log.txt
  MATCH "16/$ACCOUNT_ID/testenforce1/1" < log.txt

  echo "Refresh the snap from edge channel (while the validation set is pinned)"
  snap switch --edge test-snapd-validation-set-enforcing
  snap refresh
  snap validate | MATCH "^$ACCOUNT_ID/testenforce1=1 +enforce +1 +valid"
  snap list | MATCH "test-snapd-validation-set-enforcing +2\.0\.0 +2 +latest/edge"

  echo "And snap can be removed once validation set is forgotten"
  snap validate --forget "$ACCOUNT_ID"/testenforce1
  snap remove --purge test-snapd-validation-set-enforcing

  echo "Use two validation sets, one requiring specific snap revision, no pinning"
  snap install --edge test-snapd-validation-set-enforcing
  snap validate --enforce "$ACCOUNT_ID"/testenforce1
  snap validate --enforce "$ACCOUNT_ID"/testenforce2
  # testenforce1 is at seq 2 since it wasn't pinned
  snap validate | MATCH "^$ACCOUNT_ID/testenforce1 +enforce +2 +valid"
  snap validate | MATCH "^$ACCOUNT_ID/testenforce2 +enforce +1 +valid"
  snap list | MATCH "test-snapd-validation-set-enforcing +2\.0\.0 +2 +latest/edge"
