summary: Check that AppArmor Prompting support is as expected

details: |
    Test that AppArmor Prompting is supported on the systems for which support
    is expected (non-core Ubuntu systems from mantic on), and unsupported on
    all other systems.

prepare: |
    # Before enabling prompting, we must have a snap installed which provides
    # a prompting `handler-service` attribute with a connection via the
    # `snap-interfaces-requests-control` interface.
    
    # Prerequisite for having a prompts handler service
    snap set system experimental.user-daemons=true
    
    # Install a snap which identifies itself to snapd as a prompting handler-service
    "$TESTSTOOLS"/snaps-state install-local test-snapd-prompt-handler
    snap connect test-snapd-prompt-handler:snap-interfaces-requests-control

restore: |
    snap set system experimental.apparmor-prompting=false

execute: |
    echo "Precondition check that snapd is active"
    systemctl is-active snapd.service snapd.socket

    # Apparmor prompting feature is not supported in Ubuntu core
    if os.query is-core; then
        not snap set system experimental.apparmor-prompting=true >& err.out
        MATCH "cannot enable prompting feature as it is not supported on Ubuntu Core systems" < err.out

    # Ubuntu 16.04, 18.04 and 20.04 have kernels which don't support prompting.
    # For Ubuntu 22.04, the kernel is new enough to support prompting, but the
    # system AppArmor parser is not, so if we are not using the snapd-vendored
    # AppArmor via reexec, prompting is not supported on jammy. This can occur
    # because reexec is manually disabled, or if the native snapd package on
    # the system is of equal version or newer than the tracked snapd snap. 
    elif not os.query is-ubuntu || os.query is-ubuntu-le 20.04 || ( os.query is-ubuntu 22.04 && not tests.info is-reexec-in-use ); then
        not snap set system experimental.apparmor-prompting=true >& err.out
        MATCH "cannot enable prompting feature as it is not supported by the system" < err.out

    # The rest of the ubuntu systems shouldn't show any errors
    else
        snap set system experimental.apparmor-prompting=true >& err.out
        test -z "$(cat err.out)"
    fi
