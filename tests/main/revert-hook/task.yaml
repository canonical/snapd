summary: Check revert hook.

environment:
    STORE_TYPE/fake: fake
    STORE_TYPE/remote: ${REMOTE_STORE}
    BLOB_DIR: $(pwd)/fake-store-blobdir

prepare: |
    if [ "$STORE_TYPE" = "fake" ]; then
        if [[ "$SPREAD_SYSTEM" == ubuntu-core-16-* ]]; then
            exit
        fi
        if [ "$TRUST_TEST_KEYS" = "false" ]; then
            echo "This test needs test keys to be trusted"
            exit
        fi
    fi

    echo "Given a snap is installed"
    snap install test-snapd-revert-hook

    if [ "$STORE_TYPE" = "fake" ]; then
        . $TESTSLIB/store.sh
        setup_fake_store $BLOB_DIR

        echo "And a new version of that snap put in the controlled store"
        . $TESTSLIB/store.sh
        init_fake_refreshes test-snapd-revert-hook $BLOB_DIR
    fi

restore: |
    if [ "$STORE_TYPE" = "fake" ]; then
        if [[ "$SPREAD_SYSTEM" == ubuntu-core-16-* ]]; then
            exit
        fi
        if [ "$TRUST_TEST_KEYS" = "false" ]; then
            echo "This test needs test keys to be trusted"
            exit
        fi
        . $TESTSLIB/store.sh
        teardown_fake_store $BLOB_DIR
    fi

execute: |
    if [ "$STORE_TYPE" = "fake" ]; then
        if [[ "$SPREAD_SYSTEM" == ubuntu-core-16-* ]]; then
            exit
        fi
        if [ "$TRUST_TEST_KEYS" = "false" ]; then
            echo "This test needs test keys to be trusted"
            exit
        fi
    fi

    . $TESTSLIB/dirs.sh

    echo "Make sure the configuration is clean"
    if snap get test-snapd-revert-hook reverted; then
        echo "Expected `snap get` to fail, 'reverted' option shouldn't exist"
    fi

    echo "When a refresh is made"
    snap refresh --devmode --edge test-snap-revert-hook

    echo "Then the new version is installed"
    snap list | MATCH 'test-snapd-revert-hook +[0-9]+\.[0-9]+\+fake1'

    echo "And revert is made"
    snap revert --devmode test-snapd-revert-hook

    echo "Verify that revert hook was executed"
    snap get test-snap-revert-hook reverted | MATCH "x1"
