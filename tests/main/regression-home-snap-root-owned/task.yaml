summary: Regression test that ensures that $HOME/snap is not root owned for sudo commands

systems:
    - -ubuntu-14.04-*  # no support for tests.session

prepare: |
    # ensure we have no snap user data directory yet
    rm -rf /home/test/snap
    rm -rf /root/snap
    "$TESTSTOOLS"/snaps-state install-local test-snapd-sh
    tests.session -u test prepare

restore: |
    tests.session -u test restore

execute: |
    # run a snap command via sudo
    SNAP_MOUNT_DIR="$(os.paths snap-mount-dir)"
    output="$(tests.session -u test exec sudo "$SNAP_MOUNT_DIR/bin/test-snapd-sh.sh" -c env)"

    # ensure SNAP_USER_DATA points to the right place
    echo "$output" | MATCH SNAP_USER_DATA=/root/snap/test-snapd-sh/x[0-9]+
    echo "$output" | MATCH HOME=/root/snap/test-snapd-sh/x[0-9]+
    echo "$output" | MATCH SNAP_USER_COMMON=/root/snap/test-snapd-sh/common

    echo "Verify that the /root/snap directory created and root owned"
    if [ "$(stat -c '%U' /root/snap)" != "root" ]; then
        echo "The /root/snap directory is not owned by root"
        ls -ld "$SNAP_MOUNT_DIR/snap"
        exit 1
    fi

    echo "Verify that there is no /home/test/snap appearing"
    if [ -e /home/test/snap ]; then
        user="$(stat -c '%U' /home/test/snap)"
        echo "An unexpected /home/test/snap directory got created (owner $user)"
        ls -ld /home/test/snap
        exit 1
    fi
