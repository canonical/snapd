summary: Check that prepare-image can prepare UC20+ classic models

details: |
    Snapd contains intricate implementation details needed for the first-boot
    process, also known as seeding. It is only natural that it also carries
    logic for validating and preparing seed directories.

    The test prepares the environment to run "snap prepare-image --classic",
    where the seed for is prepared for systems other than Ubuntu Core. Once the
    seed is created the test looks that certain key pieces, such as snaps and
    assertions, are in place.

# running this on one machine is enough
systems: [ubuntu-22.04-64]

environment:
    ROOT: /home/test/tmp/
    STORE_ADDR: localhost:11028
    STORE_DIR: $(pwd)/fake-store-blobdir

prepare: |
    if [ "$TRUST_TEST_KEYS" = "false" ]; then
        echo "This test needs test keys to be trusted"
        exit
    fi

    "$TESTSTOOLS"/store-state setup-fake-store "$STORE_DIR"

    mkdir "$ROOT"
    chown -R test:test "$ROOT"

restore: |
    if [ "$TRUST_TEST_KEYS" = "false" ]; then
        echo "This test needs test keys to be trusted"
        exit
    fi

    "$TESTSTOOLS"/store-state teardown-fake-store "$STORE_DIR"
    rm -rf "$ROOT"

execute: |
    if [ "$TRUST_TEST_KEYS" = "false" ]; then
        echo "This test needs test keys to be trusted"
        exit
    fi
    if [ "$REMOTE_STORE" = "staging" ]; then
        echo "SKIP: cannot run with staging store yet"
        exit 0
    fi

    # get the model assertion
    gendeveloper1 sign-model < "$TESTSLIB"/assertions/developer1-22-classic-dangerous.json > "$ROOT/model.assertion"
    
    echo Expose the needed assertions through the fakestore
    cp "$TESTSLIB"/assertions/developer1.account "$STORE_DIR/asserts"
    cp "$TESTSLIB"/assertions/developer1.account-key "$STORE_DIR/asserts"
    cp "$TESTSLIB"/assertions/testrootorg-store.account-key "$STORE_DIR/asserts"
    # have snap use the fakestore for assertions (but nothing else)
    export SNAPPY_FORCE_SAS_URL=http://$STORE_ADDR

    echo Running prepare-image as a user
    su -c "SNAPPY_USE_STAGING_STORE=$SNAPPY_USE_STAGING_STORE snap prepare-image --classic --channel edge $ROOT/model.assertion $ROOT" test 2>stderr

    # prepare-image ran as user so it warns about the ownership
    MATCH 'WARNING: ensure that the contents under .* are owned by root:root in the \(final\) image' < stderr
    # But there are not other warnings/errors on stderr
    wc -l < stderr | MATCH "^1$"

    echo Verifying the result
    systemid="$(date +%Y%m%d)"
    find "$ROOT/system-seed/" -ls

    test -e "$ROOT/system-seed/systems/$systemid/model"
    test -e "$ROOT/system-seed/systems/$systemid/assertions/model-etc"
    test -e "$ROOT/system-seed/systems/$systemid/assertions/snaps"

    test -e "$ROOT"/system-seed/snaps/core22_*.snap
    test -e "$ROOT"/system-seed/snaps/pc-kernel_*.snap
    test -e "$ROOT"/system-seed/snaps/pc_*.snap
    test -e "$ROOT"/system-seed/snaps/snapd_*.snap
