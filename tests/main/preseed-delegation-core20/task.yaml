summary: Check that preseed delegation for core20 works.

details: |
  This test checks that preseed delegation for UC20 image with snap-preseed
  command works.

# TODO: test on 21.10 / 22.04; they fail because new build of snapd cannot
# be run in core20-based chroot due to old libc.
# This test cannot be executed in arm architecture because the model
# assertion is made for amd64
systems: [ubuntu-20.04-64]

environment:
  PREPARE_IMAGE_DIR: uc20image
  STORE_ADDR: localhost:11028
  STORE_DIR: $(pwd)/fake-store-blobdir

prepare: |
  #shellcheck source=tests/lib/prepare.sh
  . "$TESTSLIB"/prepare.sh
  snap download "--channel=${SNAPD_CHANNEL}" snapd
  repack_snapd_snap_with_deb_content_and_run_mode_firstboot_tweaks /tmp

  snap pack systemusers-snap

  mkdir -p "$STORE_DIR/asserts"
  echo Expose the needed assertions through the fakestore
  cp "${TESTSLIB}/assertions/testrootorg-store.account-key" "${STORE_DIR}/asserts"
  cp "${TESTSLIB}/assertions/developer1.account"     "${STORE_DIR}/asserts"
  cp "${TESTSLIB}/assertions/developer1.account-key" "${STORE_DIR}/asserts"
  cp "${TESTSLIB}/assertions/developer2.account"     "${STORE_DIR}/asserts"
  cp "${TESTSLIB}/assertions/developer2.account-key" "${STORE_DIR}/asserts"

  "$TESTSTOOLS"/store-state setup-fake-store "$STORE_DIR"

  echo "Import preseed signing key for delegate 'developer2'"
  mkdir -p ~/.snap/gnupg
  gpg --homedir=~/.snap/gnupg --import < developer2-privkey.asc

restore: |
  rm -rf "$PREPARE_IMAGE_DIR"
  "$TESTSTOOLS"/store-state teardown-fake-store "$STORE_DIR"

debug: |
  cat preseed.log || true

execute: |
  # have snap use the fakestore for assertions (but nothing else)
  export SNAPPY_FORCE_SAS_URL=http://$STORE_ADDR

  echo "Preseed using delegate key with 'snap prepare-image'"
  SNAPD_SNAP=$(ls /tmp/snapd*.snap)

  snap prepare-image --preseed --preseed-sign-key="(delegate)" --channel=stable --snap="$SNAPD_SNAP" "$TESTSLIB"/assertions/developer1-20-dangerous.model "$PREPARE_IMAGE_DIR" > preseed.log 2>&1

  echo "Make sure no umount errors were reported during preseeding cleanup"
  NOMATCH "umount.*failed" < preseed.log
  NOMATCH "target is busy" < preseed.log

  SYSLABEL=$(ls "$PREPARE_IMAGE_DIR"/system-seed/systems/)
  PRESEEDAS="$PREPARE_IMAGE_DIR/system-seed/systems/$SYSLABEL/preseed"
  ARTIFACT="$PREPARE_IMAGE_DIR/system-seed/systems/$SYSLABEL/preseed.tgz"

  echo "Basic check of the generated preseed assertion"
  if [ ! -f "$PRESEEDAS" ]; then
    echo "preseed assertion not found"
    exit 1
  fi
  MATCH "type: preseed"            < "$PRESEEDAS"
  MATCH "type: account"            < "$PRESEEDAS"
  MATCH "type: account-key"        < "$PRESEEDAS"
  MATCH "authority-id: developer2" < "$PRESEEDAS"
  MATCH "brand-id: developer1"     < "$PRESEEDAS"
  MATCH "system-label: $SYSLABEL"  < "$PRESEEDAS"

  echo "Examine tasks of the preseeded system"
  tar -xzf "$ARTIFACT" --strip-components=3 var/lib/snapd/state.json
  snap debug state state.json --change=1 > tasks.log

  echo "Check that critical tasks of preseeded snapd have expected statuses"
  # Note, these checks match statuses, but not the order
  # mark-preseeded task is where snap-preseed stopped, therefore it's in Doing.
  MATCH "Doing .+ mark-preseeded +Mark system pre-seeded" < tasks.log
  MATCH "Do .+ mark-seeded +Mark system seeded" < tasks.log

  tar -tzf "$ARTIFACT" > files.log

  echo "Check that critical files are present in the artifact"
  # The list of files is not exhaustive as it would be annoying to maintain; all
  # the critical files should be checked though.
  MATCH "^etc/systemd/user/sockets.target.wants/snapd.session-agent.socket" < files.log
  MATCH "^etc/systemd/user/snapd.session-agent.socket" < files.log
  MATCH "^etc/systemd/user/snapd.session-agent.service" < files.log

  MATCH "^etc/dbus-1/system.d/wpa_supplicant.conf" < files.log
  MATCH "^etc/dbus-1/system.d/snapd.system-services.conf" < files.log

  MATCH "^var/lib/snapd/dbus-1/services/io.snapcraft.SessionAgent.service" < files.log
  MATCH "^var/lib/snapd/dbus-1/services/io.snapcraft.Launcher.service" < files.log
  MATCH "^var/lib/snapd/dbus-1/services/io.snapcraft.Settings.service" < files.log

  MATCH "^etc/systemd/system/cloud-final.service.wants/snapd.seeded.service" < files.log
  MATCH "^etc/systemd/system/snapd.snap-repair.service" < files.log
  MATCH "^etc/systemd/system/snapd.system-shutdown.service" < files.log
  MATCH "^etc/systemd/system/snapd.core-fixup.service" < files.log
  MATCH "^etc/systemd/system/snap-pc-.*.mount" < files.log
  MATCH "^etc/systemd/system/snap-pc.*kernel-.*.mount" < files.log
  MATCH "^etc/systemd/system/usr-lib-snapd.mount" < files.log
  MATCH "^etc/systemd/system/snapd.spread-tests-run-mode-tweaks.service" < files.log
  MATCH "^etc/systemd/system/dbus-fi.w1.wpa_supplicant1.service" < files.log
  MATCH "^etc/systemd/system/snapd.snap-repair.timer" < files.log
  MATCH "^etc/systemd/system/sshd-keygen@.service.d/disable-sshd-keygen-if-cloud-init-active.conf" < files.log
  MATCH "^etc/systemd/system/snapd.service.wants/usr-lib-snapd.mount" < files.log
  MATCH "^etc/systemd/system/snapd.autoimport.service" < files.log
  MATCH "^etc/systemd/system/final.target.wants/snapd.system-shutdown.service" < files.log
  MATCH "^etc/systemd/system/snapd.apparmor.service" < files.log
  MATCH "^etc/systemd/system/dbus-org.freedesktop.timesync1.service" < files.log
  MATCH "^etc/systemd/system/sshd.service" < files.log
  MATCH "^etc/systemd/system/snapd.socket" < files.log
  MATCH "^etc/systemd/system/timers.target.wants/snapd.snap-repair.timer" < files.log
  MATCH "^etc/systemd/system/dbus-org.freedesktop.resolve1.service" < files.log
  MATCH "^etc/systemd/system/snap-core20-.*.mount" < files.log
  MATCH "^etc/systemd/system/snap-snapd-x1.mount" < files.log
  MATCH "^etc/systemd/system/snapd.seeded.service" < files.log
  MATCH "^etc/systemd/system/snapd.recovery-chooser-trigger.service" < files.log
  MATCH "^etc/systemd/system/sockets.target.wants/snapd.socket" < files.log
  MATCH "^etc/systemd/system/cloud-init.target.wants/cloud.*" < files.log
  MATCH "^etc/systemd/system/snapd.service" < files.log

  MATCH "^etc/systemd/system/multi-user.target.wants/snapd.core-fixup.service" < files.log
  MATCH "^etc/systemd/system/snapd.mounts.target.wants/snap-pc-.*.mount" < files.log
  MATCH "^etc/systemd/system/multi-user.target.wants/snap-pc-.*.mount" < files.log
  MATCH "^etc/systemd/system/multi-user.target.wants/snapd.spread-tests-run-mode-tweaks.service" < files.log
  MATCH "^etc/systemd/system/snapd.mounts.target.wants/snap-pc.*kernel-.*.mount" < files.log
  MATCH "^etc/systemd/system/multi-user.target.wants/snap-pc.*kernel-.*.mount" < files.log
  MATCH "^etc/systemd/system/multi-user.target.wants/snapd.autoimport.service" < files.log
  MATCH "^etc/systemd/system/multi-user.target.wants/snapd.apparmor.service" < files.log
  MATCH "^etc/systemd/system/snapd.mounts.target.wants/snap-core20-.*.mount" < files.log
  MATCH "^etc/systemd/system/multi-user.target.wants/snap-core20-.*.mount" < files.log
  MATCH "^etc/systemd/system/snapd.mounts.target.wants/snap-snapd-.*.mount" < files.log
  MATCH "^etc/systemd/system/multi-user.target.wants/snap-snapd-.*.mount" < files.log
  MATCH "^etc/systemd/system/multi-user.target.wants/snapd.seeded.service" < files.log
  MATCH "^etc/systemd/system/multi-user.target.wants/snapd.recovery-chooser-trigger.service" < files.log
  MATCH "^etc/systemd/system/multi-user.target.wants/snapd.service" < files.log
  MATCH "^etc/systemd/system/getty.target.wants/" < files.log
  MATCH "^etc/systemd/system/getty.target.wants/getty@tty1.service" < files.log
  MATCH "^etc/systemd/system/snapd.failure.service" < files.log

  MATCH "^snap/pc-kernel/current" < files.log
  MATCH "^snap/core20/current" < files.log
  MATCH "^snap/snapd/current" < files.log

  MATCH "^var/cache/apparmor/.*.0/snap.pc.hook.configure" < files.log
  MATCH "^var/cache/apparmor/.*.0/snap-update-ns.pc" < files.log
  MATCH "^var/cache/apparmor/.*.0/snap-confine.snapd.x1" < files.log

  MATCH "^var/lib/snapd/apparmor/profiles/snap.pc.hook.configure" < files.log
  MATCH "^var/lib/snapd/apparmor/profiles/snap-update-ns.pc" < files.log
  MATCH "^var/lib/snapd/apparmor/profiles/snap-confine.snapd.x1" < files.log

  MATCH "^var/lib/snapd/seccomp/bpf/snap.pc.hook.configure.src" < files.log
  MATCH "^var/lib/snapd/seccomp/bpf/snap.pc.hook.configure.bin" < files.log

  MATCH "^var/lib/snapd/sequence/pc-kernel.json" < files.log
  MATCH "^var/lib/snapd/sequence/pc.json" < files.log
  MATCH "^var/lib/snapd/sequence/snapd.json" < files.log
  MATCH "^var/lib/snapd/sequence/core20.json" < files.log

  MATCH "^var/lib/snapd/assertions/asserts-v0/snap-declaration/16/.*" < files.log

  MATCH "^var/lib/snapd/assertions/asserts-v0/model/16/developer1/testkeys-snapd-dangerous-core-20-amd64/" < files.log
  MATCH "^var/lib/snapd/assertions/asserts-v0/snap-revision/.*" < files.log
  MATCH "^var/lib/snapd/assertions/asserts-v0/account-key/.*" < files.log

  MATCH "^var/lib/extrausers/group" < files.log
  MATCH "^var/lib/extrausers/passwd" < files.log
