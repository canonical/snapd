summary: Ensure that the cups interface works.

# Default cups/cups-pdf configuration on these distributions isn't
# working yet without further tweaks.
systems: [-ubuntu-core-16-*, -opensuse-*, -fedora-*]

details: |
    The cups-control interface allows a snap to access the locale configuration.

    A snap which defines the cups-control plug must be shown in the interfaces list.
    The plug must not be autoconnected on install and, as usual, must be able to be
    reconnected.

    A snap declaring a plug on this interface must be able to talk to the cups daemon.
    The test snap used pulls the lpr functionality and installs a pdf printer. In order
    to actually connect to the socket it needs to declare a plug on the network interface.
    The test checks for the existence of a pdf file generated by the lpr command in the
    snap.

environment:
    TEST_FILE: /var/snap/test-snapd-cups-control-consumer/current/test_file.txt

prepare: |
    echo "Given a snap declaring a cups plug is installed"
    snap install test-snapd-cups-control-consumer

    if [[ "$SPREAD_SYSTEM" != ubuntu-14.04-* ]]; then
        # Not all distributions are starting the cups service directly after
        # the package was installed.
        echo "Enabling cups service in case it is not enabled"
        if ! systemctl is-enabled cups ; then
            # We can't use --now as this isn't supported by all distributions
            systemctl enable cups
        fi
        echo "Starting cups service in case it is not active"
        if ! systemctl is-active cups; then
            systemctl start cups
        fi
    fi

restore: |
    rm -rf $HOME/PDF $TEST_FILE print.error

debug: |
    systemctl status cups || true
    journalctl -u cpus || true

execute: |
    echo "Then the plug is disconnected by default"
    snap interfaces | MATCH "^\- +test-snapd-cups-control-consumer:cups-control"

    echo "When the plug is connected"
    snap connect test-snapd-cups-control-consumer:cups-control

    echo "Then the snap command is able to print files"
    echo "Hello World" > $TEST_FILE
    test-snapd-cups-control-consumer.lpr $TEST_FILE
    while ! test -e $HOME/PDF/*.pdf; do sleep 1; done

    if [ "$(snap debug confinement)" = partial ] ; then
        exit 0
    fi

    echo "When the plug is disconnected"
    snap disconnect test-snapd-cups-control-consumer:cups-control

    echo "Then the snap command is not able to print files"
    if test-snapd-cups-control-consumer.lpr $TEST_FILE 2>print.error; then
        echo "Expected error with plug disconnected"
        exit 1
    fi
    grep -q "scheduler not responding" print.error
