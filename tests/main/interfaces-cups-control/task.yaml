summary: Ensure that the cups interface works.

systems: [-ubuntu-core-16-64, -ubuntu-core-16-arm-64, -ubuntu-core-16-arm-32]

details: |
    The cups-control interface allows a snap to access the locale configuration.

    A snap which defines the cups-control plug must be shown in the interfaces list.
    The plug must not be autoconnected on install and, as usual, must be able to be
    reconnected.

    A snap declaring a plug on this interface must be able to talk to the cups daemon.
    The test snap used pulls the lpr functionality and installs a pdf printer. In order
    to actually connect to the socket it needs to declare a plug on the network interface.
    The test checks for the existence of a pdf file generated by the lpr command in the
    snap.

environment:
    TEST_FILE: /var/snap/test-snapd-cups-control-consumer/current/test_file.txt

prepare: |
    echo "Given a snap declaring a cups plug is installed"
    snap install test-snapd-cups-control-consumer

    echo "And the pdf printer is available"
    if [[ "$SPREAD_SYSTEM" == ubuntu-14.04-* ]]; then
        apt-get install -y cups-pdf
    else
        apt-get install -y printer-driver-cups-pdf
    fi

restore: |
    if [[ "$SPREAD_SYSTEM" == ubuntu-14.04-* ]]; then
        apt-get remove -y cups-pdf
    else
        apt-get remove -y printer-driver-cups-pdf
    fi
    rm -rf $HOME/PDF $TEST_FILE print.error

execute: |
    CONNECTED_PATTERN=":cups-control +test-snapd-cups-control-consumer"
    DISCONNECTED_PATTERN="(?s).*?\n- +test-snapd-cups-control-consumer:cups-control"
    . "$TESTSLIB/names.sh"

    echo "Then it is not shown as connected"
    snap interfaces | grep -Pzq "$DISCONNECTED_PATTERN"

    echo "===================================="

    echo "When the plug is connected"
    snap connect test-snapd-cups-control-consumer:cups-control ${core_name}:cups-control
    snap interfaces | grep -Pzq "$CONNECTED_PATTERN"

    echo "Then the snap command is able to print files"
    echo "Hello World" > $TEST_FILE
    test-snapd-cups-control-consumer.lpr $TEST_FILE
    while ! test -e $HOME/PDF/test_file.pdf; do sleep 1; done

    echo "===================================="

    echo "When the plug is disconnected"
    snap disconnect test-snapd-cups-control-consumer:cups-control ${core_name}:cups-control
    snap interfaces | grep -Pzq "$DISCONNECTED_PATTERN"

    echo "Then the snap command is not able to print files"
    if test-snapd-cups-control-consumer.lpr $TEST_FILE 2>print.error; then
        echo "Expected error with plug disconnected"
        exit 1
    fi
    grep -q "scheduler not responding" print.error
