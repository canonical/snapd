summary: Check that the undo on refresh keeps the previous snap intact
details: |
    When a snap is refreshed and the refresh fails, the undo code had
    a bug that removed the security confinement (LP: #1637981)

environment:
    SNAP_NAME: test-snapd-service
    SNAP_NAME_GOOD: ${SNAP_NAME}-v1-good
    SNAP_NAME_BAD: ${SNAP_NAME}-v2-bad
    SNAP_FILE_GOOD: ${SNAP_NAME}_1.0_all.snap
    SNAP_FILE_BAD: ${SNAP_NAME}_2.0_all.snap
    
prepare: |
    echo "Given a good (v1) and a bad (v2) snap"
    snapbuild $TESTSLIB/snaps/$SNAP_NAME_GOOD .
    snapbuild $TESTSLIB/snaps/$SNAP_NAME_BAD .

execute: |
    echo "When we install v1"
    snap install --devmode --dangerous ${SNAP_FILE_GOOD}
    echo "The v1 service started correctly"
    sleep 1
    nc localhost 12345 | grep "service v1"
    
    echo "When we refresh to v2"
    if snap install --devmode --dangerous ${SNAP_FILE_BAD}; then
       echo "The ${SNAP_FILE_BAD} snap should not install cleanly, test broken"
       exit 1
    fi
    echo "Then v2 is rolled back and v1 is started again"
    systemctl status snap.test-snapd-service.service.service|grep running
    systemctl status snap.test-snapd-service.service.service|grep snap/test-snapd-service/x1/bin/good
    nc localhost 12345 | grep "service v1"
