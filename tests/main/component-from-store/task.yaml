summary: Test installing a component from the store

details: |
  Verifies that we can install a snap and components from the store at the same
  time.

systems: [ubuntu-16.04-64, ubuntu-18.04-64, ubuntu-2*, ubuntu-core-*, fedora-*]

prepare: |
  snap set system experimental.parallel-instances=true

restore: |
  if snap list test-snap-with-components; then
      snap remove test-snap-with-components
  fi
  if snap list test-snap-with-components_key; then
      snap remove test-snap-with-components_key
  fi
  snap remove test-snap-with-components
  snap unset system experimental.parallel-instances

execute: |
  snap install test-snap-with-components+one+two

  for comp in one two; do
      snap run test-snap-with-components ${comp}
  done

  # while this component is defined in the snap, it should not be installed
  not snap run test-snap-with-components three

  snap components test-snap-with-components | MATCH "test-snap-with-components\+one\s+installed\s+test"
  snap components test-snap-with-components | MATCH "test-snap-with-components\+two\s+installed\s+test"
  snap components test-snap-with-components | MATCH "test-snap-with-components\+three\s+available\s+test"

  # test installing a component for a snap that is already installed
  snap install test-snap-with-components+three

  for comp in one two three; do
      snap run test-snap-with-components ${comp}
  done

  snap install test-snap-with-components_key+one+two
  snap components test-snap-with-components_key | MATCH "test-snap-with-components_key\+one\s+installed\s+test"
  snap components test-snap-with-components_key | MATCH "test-snap-with-components_key\+two\s+installed\s+test"
  snap components test-snap-with-components_key | MATCH "test-snap-with-components_key\+three\s+available\s+test"
  snap components test-snap-with-components_key | NOMATCH "test-snap-with-components\+one\s+installed\s+test"
