summary: Check that the refresh command works through epoch bumps.

details: |
    This test installs a snap and then refreshes it to a channel
    that's on an incompatible epoch. The store and snapd should figure
    this out and go through a revision that can read the current epoch
    before re-refreshing to the expected one.

prepare: |
    snap remove --purge test-snapd-epoch
    snap install test-snapd-epoch

debug: |
    snap info test-snapd-epoch
    snap list test-snapd-epoch || true
    snap tasks --last=install
    snap tasks --last=refresh

execute: |
    SNAP_MOUNT_DIR="$(os.paths snap-mount-dir)"
    p="$SNAP_MOUNT_DIR/test-snapd-epoch/current"
    # currently on epoch 1, revision 1
    MATCH '^epoch: 1$' "$p/meta/snap.yaml"
    test "$(readlink "$p")" = 1
    snap refresh --beta test-snapd-epoch
    # after the refresh, on epoch 2 (which can't read 1!), revision 3
    MATCH '^epoch: 2$' "$p/meta/snap.yaml"
    test "$(readlink "$p")" = 3
    # this was done by going through revision 2
    snap tasks --last=refresh | MATCH 'Download snap "test-snapd-epoch" \(2\)'
    snap tasks --last=refresh | MATCH 'Download snap "test-snapd-epoch" \(3\)'
