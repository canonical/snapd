summary: Ensure that the gpg-public-keys interface works.

details: |
    The gpg-public-keys interface allows to access gpg binary and public keys.

# no gpg on core18
systems: [-ubuntu-core-18-*]

environment:
    KEYSDIR: "$HOME/.gnupg"
    TRUSTDB: "$HOME/.gnupg/trustdb.gpg"
    TRUSTEDKEYS: "$HOME/.gnupg/trustedkeys.gpg"
    CONFIG: "$HOME/.gnupg/gpg.conf"

prepare: |
    "$TESTSTOOLS"/snaps-state install-local test-snapd-sh

    "$TESTSTOOLS"/fs-state mock-dir "$KEYSDIR"
    "$TESTSTOOLS"/fs-state mock-file "$TRUSTEDKEYS"
    "$TESTSTOOLS"/fs-state mock-file "$TRUSTDB"
    "$TESTSTOOLS"/fs-state mock-file "$CONFIG"

restore: |
    "$TESTSTOOLS"/fs-state restore-dir "$KEYSDIR"

execute: |
    echo "The interface is not connected by default"
    snap interfaces -i gpg-public-keys | MATCH '^- +test-snapd-sh:gpg-public-keys'

    echo "When the interface is connected"
    snap connect test-snapd-sh:gpg-public-keys

    echo "Then the snap is able to run gpg"
    test-snapd-sh.with-gpg-public-keys-plug -c "gpg --list-keys"

    echo "And the snap is able to access to config files and keys"
    test-snapd-sh.with-gpg-public-keys-plug -c "cat /usr/share/gnupg/options.skel"
    test-snapd-sh.with-gpg-public-keys-plug -c "cat $CONFIG"
    test-snapd-sh.with-gpg-public-keys-plug -c "cat $TRUSTEDKEYS"

    if [ "$(snap debug confinement)" = partial ] ; then
        exit 0
    fi

    echo "And then the snap is not able to write the trust.db file"
    if test-snapd-sh.with-gpg-public-keys-plug -c "sed -i 's/ / /g' $TRUSTDB" 2> call.error; then
        echo "Expected permission error accessing to trust db"
        exit 1
    fi
    MATCH "Permission denied" < call.error

    echo "When the plug is disconnected"
    snap disconnect test-snapd-sh:gpg-public-keys

    echo "Then the snap is not able to read gpg keys"
    if test-snapd-sh.with-gpg-public-keys-plug -c "cat $TRUSTEDKEYS" 2> call.error; then
        echo "Expected permission error accessing to gpg keys"
        exit 1
    fi
    MATCH "Permission denied" < call.error
