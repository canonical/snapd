summary: Run snap sign to sign a model assertion

systems: [-ubuntu-core-16-64]

prepare: |
    echo "setup fake gpg pinentry environment"
    cat > /tmp/pinentry-fake <<'EOF'
    #!/bin/sh
    set -e
    echo "OK Pleased to meet you"
    while true; do
      read line
      case $line in
      GETPIN)
        echo "D pass"
        echo "OK"
        ;;
      BYE)
        exit 0
      ;;
      *)
        echo "OK I'm not very smart"
        ;;
    esac
    done
    EOF
    chmod +x /tmp/pinentry-fake
    mkdir -p /root/.snap/gnupg/
    chmod 0700 /root/.snap/gnupg/
    echo pinentry-program /tmp/pinentry-fake > /root/.snap/gnupg/gpg-agent.conf

execute: |
    echo "Creating a new key without a password"
    expect -f create-key.exp

    echo "Ensure we have the new key"
    snap keys|grep default
    key=$(snap keys|grep default|tr -s ' ' |cut -f2 -d' ')

    echo "Create an example model assertion"
    cat <<EOF >pi3-model.json
    {
      "type": "model",
      "authority-id": "test",
      "brand-id": "test",
      "series": "16",
      "model": "pi3",
      "architecture": "armhf",
      "gadget": "pi3",
      "kernel": "pi2-kernel",
      "timestamp": "$(date -Iseconds --utc)"
    }
    EOF
    echo "Sign the model assertion with our key"
    expect -d -f sign-model.exp

    echo "Verify that the resulting model assertion is signed"
    grep "sign-key-sha3-384: $key" pi3.model
