summary: Check that snap restarts affects only running services

environment:
    EXTRA_FLAGS/restart: ""
    EXTRA_FLAGS/reload: "--reload"

execute: |
    echo "Installing the service snap"

    # we are using systemd-notify indicate the service is active, this is
    # currently not allowed by daemon-notify interface, so we may as well just
    # install in devmode
    "$TESTSTOOLS"/snaps-state install-local test-snapd-service-restart --devmode

    echo "We can see all services running"
    for id in 1 2 3 4; do
        systemctl status snap.test-snapd-service-restart.svc${id}.service | MATCH "running"
    done

    echo "Stopping services 3 and 4"
    snap stop test-snapd-service-restart.svc3
    snap stop test-snapd-service-restart.svc4

    echo "Disabling services 1 and 3"
    systemctl disable snap.test-snapd-service-restart.svc1.service
    systemctl disable snap.test-snapd-service-restart.svc3.service

    # At this point, we have:
    # svc1 as disabled service that is running
    # svc2 as enabled service that is running
    # svc3 as disabled service that is stopped
    # svc4 as enabled service that is stopped

    echo "Fetching execution timestamps before restart"
    function service_start_time {
        systemctl show --property=ExecMainStartTimestampMonotonic "$1" | cut -d= -f2
    }
    for id in 1 2 3 4; do
        TIMESTAMP=$(service_start_time snap.test-snapd-service-restart.svc${id}.service)
        eval TIMESTAMP${id}_BEFORE="$TIMESTAMP"
    done

    echo "Restarting services via restart"
    snap restart $EXTRA_FLAGS test-snapd-service-restart

    echo "Check that services 1 and 2 are running"
    for id in 1 2; do
        systemctl status snap.test-snapd-service-restart.svc${id}.service | MATCH "running"
    done

    echo "Check that services 3 and 4 are not running"
    for id in 3 4; do
        systemctl status snap.test-snapd-service-restart.svc${id}.service | MATCH "inactive"
    done

    echo "Fetching execution timestamps after restart"
    for id in 1 2 3 4; do
        TIMESTAMP=$(service_start_time snap.test-snapd-service-restart.svc${id}.service)
        eval TIMESTAMP${id}_AFTER="$TIMESTAMP"
    done

    echo "Verify expectations in execution timestamps"
    test "$TIMESTAMP1_AFTER" -gt "$TIMESTAMP1_BEFORE"
    test "$TIMESTAMP2_AFTER" -gt "$TIMESTAMP2_BEFORE"
    test "$TIMESTAMP3_AFTER" -eq "$TIMESTAMP3_BEFORE"
    test "$TIMESTAMP4_AFTER" -eq "$TIMESTAMP4_BEFORE"

    # Now verify that services explicitly mentioned on the command line always
    # get restarted, regardless of their current state
    for id in 3 4; do
        snap restart $EXTRA_FLAGS test-snapd-service-restart.svc${id}
        systemctl status snap.test-snapd-service-restart.svc${id}.service | MATCH "running"
    done
