summary: Check that undo works even with broken services

systems: [-ubuntu-14.04-*]

environment:
    SNAP_NAME: test-snapd-service
    SNAP_NAME_GOOD: ${SNAP_NAME}-v1-good
    SNAP_NAME_BAD: ${SNAP_NAME}-v3-very-bad
    SNAP_FILE_GOOD: ${SNAP_NAME}_1.0_all.snap
    SNAP_FILE_BAD: ${SNAP_NAME}_3.0_all.snap

prepare: |
    echo "Given a good (v1) and a bad (v2) snap"
    snap pack "$TESTSLIB/snaps/$SNAP_NAME_GOOD"
    snap pack "$TESTSLIB/snaps/$SNAP_NAME_BAD"

debug: |
    # shellcheck source=tests/lib/journalctl.sh
    . "$TESTSLIB"/journalctl.sh
    get_journalctl_log -u snap.test-snapd-service.service.service

execute: |
    #shellcheck source=tests/lib/systemd.sh
    . "$TESTSLIB"/systemd.sh

    echo "When we install v1"
    snap install --dangerous "${SNAP_FILE_GOOD}"
    echo "The v1 service started correctly"
    wait_for_service snap.test-snapd-service.service.service

    echo "When we refresh to v3 it has a broken service and it breaks the previous service as well"
    if snap install --dangerous "${SNAP_FILE_BAD}"; then
       echo "The ${SNAP_FILE_BAD} snap should not install cleanly, test broken"
       exit 1
    fi
    echo "and we are back to v1 (even though it is broken"
    snap list $SNAP_NAME | grep 1.0
