summary: Integration tests for the snap-bootstrap binary

# one system is enough, its a very specialized test for now
systems: [ubuntu-19.10-64]

debug: |
    cat /proc/partitions

restore: |
    if [ -f loop.txt ]; then
        LOOP="$(cat loop.txt)"
        losetup -d "$LOOP"
        umount "${LOOP}p3"
        umount "${LOOP}p4"
    fi

prepare: |
    echo "Create a fake block device image that looks like an image from u-i"
    truncate --size=20GB fake.img

    echo "Setup the image as a block device"
    losetup -fP fake.img
    losetup -a |grep fake.img|cut -f1 -d: > loop.txt
    LOOP="$(cat loop.txt)"

    echo "Create a partition that looks like a uc20 image"
    cat <<EOF | sfdisk "$LOOP"
    label: gpt

    start=2048, size=2048, type=21686148-6449-6E6F-744E-656564454649, name="BIOS Boot"
    start=4096, size=2457600, type=C12A7328-F81F-11D2-BA4B-00A0C93EC93B, name="ubuntu-seed"
    EOF
    udevadm trigger --settle "${LOOP}p2"
    mkfs.vfat "${LOOP}p2"
    udevadm trigger --settle "${LOOP}p2"
    echo "Double check that we got the expected partitions"
    sfdisk -l "$LOOP" | MATCH 'BIOS boot'
    sfdisk -l "$LOOP" | MATCH 'EFI System'

    echo "Get the UC20 gadget"
    snap download --channel=20/edge pc
    unsquashfs -d gadget-dir pc_*.snap

execute: |
    LOOP="$(cat loop.txt)"

    echo "Run the snap-bootstrap tool"
    /usr/lib/snapd/snap-bootstrap create-partitions ./gadget-dir "$LOOP"

    echo "And check that the partitions are created"
    sfdisk -l "$LOOP" | MATCH '750M Linux filesystem'
    sfdisk -l "$LOOP" | MATCH '3G Linux filesystem'
    file -s "${LOOP}p3" | MATCH 'ext4 filesystem data,.* volume name "ubuntu-boot"'
    file -s "${LOOP}p4" | MATCH 'ext4 filesystem data,.* volume name "ubuntu-data"'

    echo "Check if attribute bits were set for new partitions"
    sfdisk -d "$LOOP" | not MATCH "${LOOP}p1.*attrs=\"GUID:59\""
    sfdisk -d "$LOOP" | not MATCH "${LOOP}p2.*attrs=\"GUID:59\""
    sfdisk -d "$LOOP" | MATCH "${LOOP}p3.*attrs=\"GUID:59\""
    sfdisk -d "$LOOP" | MATCH "${LOOP}p4.*attrs=\"GUID:59\""

    echo "Check that the filesystems were not auto-mounted"
    mount | not MATCH /run/mnt/ubuntu-seed
    mount | not MATCH /run/mnt/ubuntu-boot
    mount | not MATCH /run/mnt/ubuntu-data

    # we used "lsblk --fs" here but it was unreliable
    mkdir -p ./mnt
    mount "${LOOP}p2" ./mnt
    df -T "${LOOP}p2" | MATCH vfat
    umount ./mnt

    mkdir -p ./mnt
    mount "${LOOP}p3" ./mnt
    df -T "${LOOP}p3" | MATCH ext4
    umount ./mnt
    file -s "${LOOP}p3" | MATCH 'ext4 filesystem data,.* volume name "ubuntu-boot"'

    mkdir -p ./mnt
    mount "${LOOP}p4" ./mnt
    df -T "${LOOP}p4" | MATCH ext4
    umount ./mnt
    file -s "${LOOP}p4" | MATCH 'ext4 filesystem data,.* volume name "ubuntu-data"'

    echo "Check that the filesystem content was deployed"
    mkdir -p ./mnt
    mount "${LOOP}p3" ./mnt
    ls ./mnt/EFI/boot/grubx64.efi
    ls ./mnt/EFI/boot/bootx64.efi
    ls ./mnt/EFI/ubuntu/grub.cfg
    # remove a file
    rm ./mnt/EFI/boot/grubx64.efi
    umount ./mnt

    echo "now add a partition"
    cat >> gadget-dir/meta/gadget.yaml <<EOF
          - name: Other ext4
            type: 83,0FC63DAF-8483-4772-8E79-3D69D8477DE4
            filesystem: ext4
            filesystem-label: other-ext4
            size: 110M
    EOF
    /usr/lib/snapd/snap-bootstrap create-partitions --mount ./gadget-dir "$LOOP"
    sfdisk -l "$LOOP" | MATCH '110M\s* Linux filesystem'

    echo "check that the filesystems are created and mounted"
    mount

    mount | MATCH /run/mnt/ubuntu-boot
    mount | MATCH /run/mnt/ubuntu-data
    mount | MATCH /run/mnt/other-ext4
    df -T "${LOOP}p5" | MATCH ext4
    file -s "${LOOP}p5" | MATCH 'volume name "other-ext4"'
    umount /run/mnt/other-ext4

    echo "Make sure the filesystem was redeployed"
    ls /run/mnt/ubuntu-boot/EFI/boot/grubx64.efi
