summary: smoke tests for user mounts
details: |
    When a confined snap has a user-fstab file, additional bind mounts will
    be performed prior to running the application.  These mounts are private
    to the invocation of the application, so can be used to manipulate how
    per-user data is presented.
prepare: |
    . $TESTSLIB/snaps.sh
    install_local test-snapd-sh
    rm -f /var/lib/snapd/mount/snap.test-snapd-sh.user-fstab
execute: |
    . $TESTSLIB/dirs.sh

    echo "Create XDG_RUNTIME_DIR for test user"
    USER_RUNTIME_DIR=/run/user/12345
    mkdir -p $USER_RUNTIME_DIR || true
    rm -rf $USER_RUNTIME_DIR/*
    chmod u=rwX,go= $USER_RUNTIME_DIR
    chown test:test $USER_RUNTIME_DIR

    cat << \EOF > ./check-user-mount.sh
    # Add some content to the runtime dir
    rm -rf $XDG_RUNTIME_DIR/snap.test-snapd-sh
    mkdir $XDG_RUNTIME_DIR/snap.test-snapd-sh
    mkdir $XDG_RUNTIME_DIR/snap.test-snapd-sh/source
    mkdir $XDG_RUNTIME_DIR/snap.test-snapd-sh/target
    touch $XDG_RUNTIME_DIR/snap.test-snapd-sh/source/in-source
    touch $XDG_RUNTIME_DIR/snap.test-snapd-sh/target/in-target

    # Check target directory from sandbox
    test-snapd-sh -c 'ls $XDG_RUNTIME_DIR/target'
    EOF


    echo "Without user-fstab we see target"
    XDG_RUNTIME_DIR=$USER_RUNTIME_DIR su -p -l -c 'sh ./check-user-mount.sh' test | MATCH in-target

    echo "Configuring user-fstab"
    cat << \EOF > /var/lib/snapd/mount/snap.test-snapd-sh.user-fstab
    $XDG_RUNTIME_DIR/source $XDG_RUNTIME_DIR/target none bind,rw 0 0
    EOF

    $LIBEXECDIR/snapd/snap-discard-ns test-snapd-sh

    echo "With user-fstab we see source"
    XDG_RUNTIME_DIR=$USER_RUNTIME_DIR su -p -l -c 'sh ./check-user-mount.sh' test | MATCH in-source
