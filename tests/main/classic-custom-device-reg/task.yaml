summary: |
    Test gadget customized device initialisation and registration also on classic

# ubuntu-14.04: systemd-run not supported
systems: [-ubuntu-core-*, -ubuntu-14.04*]

kill-timeout: 5m

environment:
    SEED_DIR: /var/lib/snapd/seed

prepare: |
    if [ "$TRUST_TEST_KEYS" = "false" ]; then
        echo "This test needs test keys to be trusted"
        exit
    fi

    snap pack "$TESTSLIB/snaps/classic-gadget"
    snap download "--$CORE_CHANNEL" core

    echo "Create new seed.yaml with the downloaded core and the classic gadget"
    "$TESTSLIB/reset.sh" --keep-stopped
    mkdir -p "$SEED_DIR/snaps"
    mkdir -p "$SEED_DIR/assertions"
    cat > "$SEED_DIR/seed.yaml" <<EOF
    snaps:
      - name: core
        channel: $CORE_CHANNEL
        file: core.snap
      - name: classic-gadget
        unasserted: true
        file: classic-gadget.snap
    EOF

    echo "Copy the needed assertions to /var/lib/snapd/"
    cp core_*.assert "$SEED_DIR/assertions"
    cp "$TESTSLIB/assertions/developer1.account" "$SEED_DIR/assertions"
    cp "$TESTSLIB/assertions/developer1.account-key" "$SEED_DIR/assertions"
    cp "$TESTSLIB/assertions/developer1-my-classic-w-gadget.model" "$SEED_DIR/assertions"
    cp "$TESTSLIB/assertions/testrootorg-store.account-key" "$SEED_DIR/assertions"
    echo "Copy the needed snaps to $SEED_DIR/snaps"
    cp ./core_*.snap "$SEED_DIR/snaps/core.snap"
    cp ./classic-gadget_1.0_all.snap "$SEED_DIR/snaps/classic-gadget.snap"

    # start fake device svc
    #shellcheck disable=SC2148
    systemd-run --unit fakedevicesvc fakedevicesvc localhost:11029

restore: |
    if [ "$TRUST_TEST_KEYS" = "false" ]; then
        echo "This test needs test keys to be trusted"
        exit
    fi
    systemctl stop snapd.service snapd.socket fakedevicesvc

    rm -rf "$SEED_DIR"
    systemctl start snapd.socket snapd.service

execute: |
    if [ "$TRUST_TEST_KEYS" = "false" ]; then
        echo "This test needs test keys to be trusted"
        exit
    fi

    #shellcheck source=tests/lib/core-config.sh
    . "$TESTSLIB"/core-config.sh

    echo "Kick seeding"
    systemctl start snapd.service snapd.socket

    echo "Wait for seeding to be done"
    wait_for_first_boot_change

    echo "We have a model assertion"
    snap model --verbose | MATCH "model:\s* my-classic-w-gadget"

    echo "Wait for device initialisation to be done"
    wait_for_device_initialized_change

    echo "Check we have a serial"
    snap model --serial --assertion | MATCH "authority-id: developer1"
    snap model --serial --assertion | MATCH "brand-id: developer1"
    snap model --serial --assertion | MATCH "model: my-classic-w-gadget"
    snap model --serial --assertion | MATCH "serial: 7777"
