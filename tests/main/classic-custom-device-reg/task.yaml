summary: |
   Test gadget customized device initialisation and registration also on classic
systems:
    - -ubuntu-core-16-*
    # The test fails on Arch right now, disable it temporarily
    - -arch-*
environment:
    SEED_DIR: /var/lib/snapd/seed
prepare: |
    if [ "$TRUST_TEST_KEYS" = "false" ]; then
        echo "This test needs test keys to be trusted"
        exit
    fi
    #shellcheck source=tests/lib/systemd.sh
    . "$TESTSLIB/systemd.sh"

    snap pack "$TESTSLIB/snaps/classic-gadget"
    snap download "--$CORE_CHANNEL" core

    "$TESTSLIB/reset.sh" --keep-stopped
    mkdir -p "$SEED_DIR/snaps"
    mkdir -p "$SEED_DIR/assertions"
    cat > "$SEED_DIR/seed.yaml" <<EOF
    snaps:
      - name: core
        channel: $CORE_CHANNEL
        file: core.snap
      - name: classic-gadget
        unasserted: true
        file: classic-gadget.snap
    EOF

    echo "Copy the needed assertions to /var/lib/snapd/"
    cp core_*.assert "$SEED_DIR/assertions"
    cp "$TESTSLIB/assertions/developer1.account" "$SEED_DIR/assertions"
    cp "$TESTSLIB/assertions/developer1.account-key" "$SEED_DIR/assertions"
    cp "$TESTSLIB/assertions/developer1-my-classic-w-gadget.model" "$SEED_DIR/assertions"
    cp "$TESTSLIB/assertions/testrootorg-store.account-key" "$SEED_DIR/assertions"
    echo "Copy the needed snaps to $SEED_DIR/snaps"
    cp ./core_*.snap "$SEED_DIR/snaps/core.snap"
    cp ./classic-gadget_1.0_all.snap "$SEED_DIR/snaps/classic-gadget.snap"
    # start fake device svc
    systemd_create_and_start_unit fakedevicesvc "$(which fakedevicesvc) localhost:11029"
restore: |
    if [ "$TRUST_TEST_KEYS" = "false" ]; then
        echo "This test needs test keys to be trusted"
        exit
    fi
    #shellcheck source=tests/lib/systemd.sh
    . "$TESTSLIB/systemd.sh"
    systemctl stop snapd.service snapd.socket
    systemd_stop_and_destroy_unit fakedevicesvc

    rm -rf "$SEED_DIR"
    rm -f -- *.snap
    rm -f -- *.assert
    systemctl start snapd.socket snapd.service
kill-timeout: 3m
execute: |
    if [ "$TRUST_TEST_KEYS" = "false" ]; then
        echo "This test needs test keys to be trusted"
        exit
    fi

    # kick seeding
    systemctl start snapd.service snapd.socket

    echo "Wait for seeding to be done"
    while ! snap changes | grep -q "Done.*Initialize system state"; do sleep 1; done
    echo "We have a model assertion"
    snap known model|MATCH "model: my-classic-w-gadget"

    echo "Wait for device initialisation to be done"
    while ! snap changes | grep -q "Done.*Initialize device"; do sleep 1; done

    echo "Check we have a serial"
    snap known serial|MATCH "authority-id: developer1"
    snap known serial|MATCH "brand-id: developer1"
    snap known serial|MATCH "model: my-classic-w-gadget"
    snap known serial|MATCH "serial: 7777"
