summary: verify that the /systems/<label> api works

details: |
  Verify the basic functionality for the /systems/<label> API

systems:
  # TODO: also test classic/core hybrid systems once they are ready
  - ubuntu-core-2*

execute: |
  snap install --edge jq
  # devmode as the snap does not have snapd-control
  snap install test-snapd-curl --devmode --edge

  echo "Find what systems are available"
  test-snapd-curl.curl -s --unix-socket /run/snapd.socket http://localhost/v2/systems > systems
  current_label=$(jq -r '.result.systems[0]["label"]' < systems)

  echo "Get details for a specific system"
  test-snapd-curl.curl -s --unix-socket /run/snapd.socket http://localhost/v2/systems/"$current_label" > current-system
  echo "Ensure the result contains a model assertion"
  jq -r '.result.model.type' < current-system | MATCH model
  jq -r '.result.model.series' < current-system | MATCH 16
  jq -r '.result.model.base' < current-system | MATCH "core[0-9][0-9]"
  echo "Ensure the result looks like a systems reply"
  jq -r '.result.brand.id' < current-system | MATCH "$(snap model --verbose|awk '/brand-id:/ {print $2}')"
  jq -r '.result.brand.validation' < current-system | MATCH '(verified|unproven|starred)'
  jq -r '.result.label' < current-system | MATCH "$current_label"
  jq -r '.result.current' < current-system | MATCH '(true|false)'
  # we expect at least one current action to be available and
  # each action always has a mode
  jq -r '.result.actions[0]' < current-system | MATCH 'mode'
  echo "Ensure the result contains the gadget volumes"
  jq -r '.result.volumes' < current-system | MATCH bootloader
  # internal fields are not exported
  jq -r '.result.volumes' < current-system | NOMATCH VolumeName
