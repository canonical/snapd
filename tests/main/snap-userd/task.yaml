summary: Ensure snap userd allows opening a URL via xdg-open

systems:
    # Not supposed to work on Ubuntu Core systems as we don't have
    # a user session environment there
    - -ubuntu-core-*

environment:
    DISPLAY: :0

restore: |
    . "$TESTSLIB/pkgdb.sh"
    rm -f dbus.env
    if [[ "$SPREAD_SYSTEM" == ubuntu-14.04-* ]]; then
        stop test-snap-userd || true
        rm -f /etc/init/test-snap-userd.conf
    else
        systemctl stop --signal=KILL test-snap-userd.scope || true
    fi
    umount -f /usr/bin/xdg-open || true
    umount -f /snap/core/current/usr/bin/xdg-open || true
    distro_purge_package dbus-x11 xdg-utils

execute: |
    . "$TESTSLIB/pkgdb.sh"
    . "$TESTSLIB/dirs.sh"

    # Install necessary pacakges to get dbus-launch helper
    distro_install_package dbus-x11 xdg-utils

    dbus-launch > dbus.env
    export $(cat dbus.env | xargs)

    # helper that returns true when io.snapcraft.Launcher.OpenURL
    # responds
    ping_launcher() {
        dbus-send --session                                        \
            --dest=io.snapcraft.Launcher                           \
            --type=method_call                                     \
            --print-reply                                          \
            /                                                      \
            org.freedesktop.DBus.Peer.Ping
    }

    if [[ "$SPREAD_SYSTEM" == ubuntu-14.04-* ]]; then
        cat << EOF > /etc/init/test-snap-userd.conf
    env DISPLAY="$DISPLAY"
    env DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS"
    env DBUS_SESSION_BUS_PID="$DBUS_SESSION_BUS_PID"
    kill timeout 5
    exec /usr/bin/snap userd
    EOF
        initctl reload-configuration
        start test-snap-userd
        while ! ping_launcher ; do
            sleep .1
        done
    else
        systemd-run \
            --scope \
            --unit=test-snap-userd \
            --no-block \
            --setenv=DISPLAY="$DISPLAY" \
            --setenv=DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS" \
            --setenv=DBUS_SESSION_BUS_PID="$DBUS_SESSION_BUS_PID" \
            /bin/sh -c '/usr/bin/snap userd &'
        while ! ping_launcher ; do
            sleep .1
        done
    fi

    # Create a small helper which will tell us if snap passes
    # the URL correctly to the right handler
    cat << 'EOF' > /tmp/xdg-open
    #!/bin/sh
    echo "$@" > /tmp/xdg-open-output
    EOF
    chmod +x /tmp/xdg-open
    mount --bind /tmp/xdg-open /usr/bin/xdg-open

    # Until necessary changes landed in the core snap we need
    # to create a custom one which points to the new service
    # name io.snapcraft.Launcher where the current core
    # snap still uses com.canonical.Launcher.
    cat << 'EOF' > /tmp/xdg-open-core
    #!/bin/sh
    dbus-send --print-reply --session --dest=io.snapcraft.Launcher /io/snapcraft/Launcher io.snapcraft.Launcher.OpenURL string:"$1"
    EOF
    chmod +x /tmp/xdg-open-core
    mount --bind /tmp/xdg-open-core /snap/core/current/usr/bin/xdg-open

    ensure_xdg_open_output() {
        rm -f /tmp/xdg-open-output
        export DBUS_SESSION_BUS_ADDRESS=$DBUS_SESSION_BUS_ADDRESS
        /snap/core/current/usr/bin/xdg-open $1
        test -e /tmp/xdg-open-output
        test "$(cat /tmp/xdg-open-output)" = $1
    }

    # Ensure http, https and mailto work
    ensure_xdg_open_output "https://snapcraft.io"
    ensure_xdg_open_output "http://snapcraft.io"
    ensure_xdg_open_output "mailto:talk@snapcraft.io"

    # Ensure other schemes are not passed through
    rm /tmp/xdg-open-output
    ! $SNAP_MOUNT_DIR/core/current/usr/bin/xdg-open ftp://snapcraft.io
    test ! -e /tmp/xdg-open-output
    ! $SNAP_MOUNT_DIR/core/current/usr/bin/xdg-open aabbcc
    test ! -e /tmp/xdg-open-output

    if [[ "$SPREAD_SYSTEM" == ubuntu-14.04-* ]]; then
        stop test-snap-userd
    else
        systemctl list-units --type=scope  # debug
        systemctl stop --signal=KILL test-snap-userd.scope || true
    fi
