summary: Ensure that the libvirt interface works.

details: |
    The libvirt interface allows a snap to access the libvirtd socket in order to manage
    libvirt domains and other resources.

    A snap which defines a libvirt plug must be shown in the interfaces list.
    The plug must not be autoconnected on install and, as usual, must be able to be
    reconnected.

    A snap declaring a plug on this interface must be able to create and destroy a domain.
    The test uses a snap that carries a unikernel built to be run on top of qemu, boot and
    respond to ping. Once the domain is created, the test checks connectivity to the unikernel.

systems: [ubuntu-20.04-64]

prepare: |
    # Given test user is added to the libvirt group
    adduser test libvirt

    echo "And libvirt is configured to manage /dev/net/tun"
    systemctl stop libvirtd.service || true
    echo 'cgroup_device_acl = ["/dev/net/tun", "/dev/random", "/dev/urandom"]' | tee -a /etc/libvirt/qemu.conf

    echo "And the required services up"
    systemctl start libvirtd.service
    systemctl start virtlogd.socket

    echo "And a snap declaring a plug on the libvirt interface is installed"
    snap install --edge test-snapd-libvirt-consumer

    echo "And the required tap interface is in place"
    ip tuntap add tap100 mode tap
    ip addr add 10.0.0.1/24 dev tap100
    ip link set dev tap100 up

restore: |
    ip link delete tap100

    # remove test user from the libvirt group
    deluser test libvirt

execute: |
    echo "The interface is not connected by default"
    snap interfaces -i libvirt | MATCH '^- +test-snapd-libvirt-consumer:libvirt'

    echo "When the plug is connected"
    snap connect test-snapd-libvirt-consumer:libvirt

    echo "Then the snap is able to create the unikernel domain"
    su -l -c "test-snapd-libvirt-consumer.machine-up" test
    virsh list | MATCH ping-unikernel

    echo "And the unikernel is accesible"
    ping -c 1 -q -W 1 10.0.0.2

    echo "And the snap is able to destroy the unikernel domain"
    su -l -c "test-snapd-libvirt-consumer.machine-down" test
    virsh list | NOMATCH ping-unikernel

    echo "When the plug is disconnected"
    snap disconnect test-snapd-libvirt-consumer:libvirt

    echo "Then the snap is not able to create a domain"
    if su -l -c "test-snapd-libvirt-consumer.machine-up" test 2> creation.error; then
        echo "Expected permission error accessing libvirtd socket with disconnected plug"
        exit 1
    fi
    MATCH "Failed to connect socket to '/var/run/libvirt/libvirt-sock': Permission denied" < creation.error
