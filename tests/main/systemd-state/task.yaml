summary: smoke test for the systemd-state tool

execute: |

    # Check help
    "$TESTSTOOLS"/systemd-state | MATCH "usage: systemd-state create-and-start-unit"
    "$TESTSTOOLS"/systemd-state -h | MATCH "usage: systemd-state create-and-start-unit"
    "$TESTSTOOLS"/systemd-state --help | MATCH "usage: systemd-state create-and-start-unit"

    CMD_SLEEP="$(command -v sleep)"

    # Create a service unit
    "$TESTSTOOLS"/systemd-state create-and-start-unit testunit "$CMD_SLEEP 5"
    systemctl is-active testunit
    test -f /etc/systemd/system/testunit.service
    test ! -f /run/systemd/system/testunit.service
    sleep 5
    not systemctl is-active testunit
    systemctl is-enabled testunit
    "$TESTSTOOLS"/systemd-state stop-and-remove-unit testunit

    # Delete the created service unit
    "$TESTSTOOLS"/systemd-state stop-and-remove-unit testunit
    not systemctl is-enabled testunit
    test ! -f /run/systemd/system/testunit.service

    # Create a service unit with overrides
    "$TESTSTOOLS"/systemd-state create-and-start-unit testunit "$CMD_SLEEP 10" --overrides "[Unit]\nTESTVAR=TESTVAL"
    if ! os.query is-trusty; then
        systemctl cat testunit | MATCH "TESTVAR=TESTVAL"
    fi
    MATCH "TESTVAR=TESTVAL" < /etc/systemd/system/testunit.service.d/override.conf
    test -f /etc/systemd/system/testunit.service.d/override.conf
    "$TESTSTOOLS"/systemd-state stop-and-remove-unit testunit
    test ! -d /etc/systemd/system/testunit.service.d

    # Delete the created service unit
    "$TESTSTOOLS"/systemd-state stop-and-remove-unit testunit
    not systemctl is-enabled testunit
    test ! -f /etc/systemd/system/testunit.service

    # Check the snapd service is listed
    "$TESTSTOOLS"/systemd-state active-snapd-units | MATCH 'snapd.service'

    # Check the services can be stopped
    "$TESTSTOOLS"/systemd-state create-and-start-unit testunit1 "$CMD_SLEEP 100"
    "$TESTSTOOLS"/systemd-state create-and-start-unit testunit2 "$CMD_SLEEP 100"
    "$TESTSTOOLS"/systemd-state create-and-start-unit testunit3 "$CMD_SLEEP 100"
    systemctl is-active testunit1
    systemctl is-active testunit2
    systemctl is-active testunit3
    "$TESTSTOOLS"/systemd-state stop-units testunit1 testunit2
    not systemctl is-active testunit1
    not systemctl is-active testunit2
    systemctl is-active testunit3
    "$TESTSTOOLS"/systemd-state stop-units testunit3
    not systemctl is-active testunit3

    # Check that can be call to stop unexistent units
    "$TESTSTOOLS"/systemd-state stop-units noexist1 noexist2

    # Clean the created service units
    "$TESTSTOOLS"/systemd-state stop-and-remove-unit testunit1
    "$TESTSTOOLS"/systemd-state stop-and-remove-unit testunit2
    "$TESTSTOOLS"/systemd-state stop-and-remove-unit testunit3

    # wait for unit until it is active
    "$TESTSTOOLS"/systemd-state create-and-start-unit testunit "$CMD_SLEEP 10"
    "$TESTSTOOLS"/systemd-state wait-for-unit testunit
    "$TESTSTOOLS"/systemd-state stop-and-remove-unit testunit

    # Check generic errors
    "$TESTSTOOLS"/systemd-state noexist 2>&1 | MATCH "systemd-state: unsupported parameter noexist"

    # Check errors for create-and-start-unit
    "$TESTSTOOLS"/systemd-state create-and-start-unit 2>&1 | MATCH "systemd-state: unit name and args are required to create the service unit"
    "$TESTSTOOLS"/systemd-state create-and-start-unit testunit 2>&1 | MATCH "systemd-state: unit name and args are required to create the service unit"
    "$TESTSTOOLS"/systemd-state create-and-start-unit testunit "$CMD_SLEEP 10" --noexist 2>&1 | MATCH "systemd-state: parameter used to create and start service unit not supported --noexist"
    "$TESTSTOOLS"/systemd-state create-and-start-unit testunit "$CMD_SLEEP 10" --overrides 2>&1 | MATCH "systemd-state: overrrides configuration missing to create service unit"

    # Check errors for stop-and-remove-unit
    "$TESTSTOOLS"/systemd-state stop-and-remove-unit 2>&1 | MATCH "systemd-state: unit name required to stop and remove service unit"
