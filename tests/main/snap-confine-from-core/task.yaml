summary: Test that snap-confine is run from core on re-exec

details: |
    This test verifies that snap-confine is executed from core snap on re-exec.
    First, it is checked we re-exec by default, then that the profiles in
    /var/lib/snapd/apparmor/profiles/snap-confine.* are regenerated when the snapd
    system-key is updated and snapd is restarted.

# Disable for Fedora, openSUSE, Arch and Amazon Linux 2 as re-exec is not support there yet
systems: [-ubuntu-core-*, -fedora-*, -opensuse-*, -arch-*, -amazon-*, -centos-*]

prepare: |
    echo "Installing test-snapd-sh"
    snap install test-snapd-sh
    echo "Breaking host snap-confine"
    chmod 0755 /usr/lib/snapd/snap-confine

restore: |
    echo "Restoring host snap-confine"
    chmod 4755 /usr/lib/snapd/snap-confine

execute: |
    if [ "${SNAP_REEXEC:-}" = "0" ]; then
        echo "skipping test when SNAP_REEXEC is disabled"
        exit 0
    fi

    echo "Ensure we re-exec by default"
    # It is not possible to check by using journal-state tools because the
    # reexec "DEBUG: restarting into" line appears before the snapd state is
    # saved, which is outside the scope of this test
    /usr/bin/env SNAPD_DEBUG=1 snap list 2>&1 | MATCH "DEBUG: restarting into"

    echo "Ensure snap-confine from the core snap is run"
    test-snapd-sh.sh -c 'echo hello'

    echo "Check if snap-confine profile generation test is applicable"
    if [ "$(aa-enabled)" != "Yes" ]; then
        if [ "$SPREAD_SYSTEM" = "ubuntu-16.04-64" ]; then
            echo "No apparmor on ubuntu-16.04-64 is impossible"
            echo "Test broken"
            exit 1
        fi
        echo "SKIP: apparmor not enabled"
        exit 0
    fi

    echo "Ensure snapd generates the right apparmor profile on restart"
    PROFILES="$(find /var/lib/snapd/apparmor/profiles/ -maxdepth 1 -name "snap-confine.*")"
    if [ -z "$PROFILES" ]; then
        echo "cannot find apparmor profiles for snap-confine from core"
        echo "test broken"
        ls -al /var/lib/snapd/apparmor/profiles
        exit 1
    fi

    echo "Force system-key change"
    tests.systemd stop-unit snapd.service snapd.socket
    printf '{"version":1}' > /var/lib/snapd/system-key
    rm -f /var/lib/snapd/apparmor/profiles/snap-confine.*
    systemctl start snapd.service snapd.socket
    tests.systemd wait-for-service -n 30 --state active snapd.service

    echo "Ensure this also re-generates the snap-confine from core profile"
    PROFILES="$(find /var/lib/snapd/apparmor/profiles/ -maxdepth 1 -name "snap-confine.*")"
    if [ -z "$PROFILES" ]; then
        echo "apparmor profiles for snap-confine from core were not re-generated"
        echo "test broken"
        exit 1
    fi
