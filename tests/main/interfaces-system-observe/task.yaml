summary: Ensures that the system-observe interface works.

# on s390x we do not have a serial port to observe
systems: [-ubuntu-*-s390x]

details: |
    A snap declaring the system-observe plug is defined, its command
    just calls ps -ax.

    The test itself checks for the lack of autoconnect and then tries
    to execute the snap command with the plug connected (it must succeed)
    and disconnected (it must fail).

prepare: |
    echo "Given a snap declaring a plug on the system-observe interface is installed"
    snap install --edge test-snapd-system-observe-consumer

    if [[ "$SPREAD_SYSTEM" != ubuntu-14.04-* ]]; then
        echo "And hostnamed is started"
        systemctl start systemd-hostnamed
    fi

restore: |
    if [[ "$SPREAD_SYSTEM" != ubuntu-14.04-* ]]; then
        systemctl stop systemd-hostnamed
    fi

execute: |
    echo "The interface is disconnected by default"
    snap interfaces -i system-observe | MATCH -- '^- +test-snapd-system-observe-consumer:system-observe'

    echo "When the interface is connected"
    snap connect test-snapd-system-observe-consumer:system-observe

    echo "Then the snap is able to get system information"
    expected="/dev/tty.*?serial"
    su -l -c "test-snapd-system-observe-consumer.consumer" test | MATCH "$expected"

    if [[ "$SPREAD_SYSTEM" != ubuntu-14.04-* ]]; then
        echo "And the snap is able to introspect hostname1"
        expected="<property name=\"Hostname\" type=\"s\" access=\"read\">"
        su -l -c "test-snapd-system-observe-consumer.dbus-introspect" test | MATCH "$expected"
    fi

    if [ "$(snap debug confinement)" = strict ] ; then
        echo "And the policy has the ptrace suppression rule"
        MATCH '^deny ptrace \(trace\),' < /var/lib/snapd/apparmor/profiles/snap.test-snapd-system-observe-consumer.consumer

        echo "When the plug is disconnected"
        snap disconnect test-snapd-system-observe-consumer:system-observe

        echo "Then the snap is not able to get system information"
        if su -l -c "test-snapd-system-observe-consumer.consumer" test 2>"${PWD}/consumer.error"; then
            echo "Expected error with plug disconnected"
            exit 1
        fi
        MATCH "Permission denied" < consumer.error

        if [[ "$SPREAD_SYSTEM" != ubuntu-14.04-* ]]; then
            echo "And the snap is not able to introspect hostname1"
            if su -l -c "test-snapd-system-observe-consumer.dbus-introspect" test 2>"${PWD}/introspect.error"; then
                echo "Expected error with plug disconnected"
                exit 1
            fi
            MATCH "Permission denied" < introspect.error
        fi
    fi
