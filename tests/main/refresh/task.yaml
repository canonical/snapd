summary: Check that the refresh command works.

details: |
  These tests exercise the refresh command using different store backends.
  The concrete store to be used is controlled with the STORE_TYPE environment
  vairiable, if it is empty, a fake local store is used, if it has a value of
  staginig or production the corresponding remote store is used.
  When executing against the remote stores the tests rely in the existence of
  a given snap with an updatable version (version string like 2.0+fake1) in the
  edge channel.

environment:
  SNAP_NAME: test-snapd-tools
  SNAP_VERSION_PATTERN: \d+\.\d+\+fake1
  CONFIG_DIR: /etc/systemd/system/snapd.service.d
  STORE_CONFIG: $[CONFIG_DIR]/fakestore.conf
  BLOB_DIR: $(mktemp -d)
  STORE_ADDR: localhost:11028
  STORE_TYPE/fake: fakestore
  STORE_TYPE/staging: staging
  STORE_TYPE/production: production

prepare: |
  configure_store_backend(){
    local store_url=$1
    systemctl stop snapd.service snapd.socket
    mkdir -p $CONFIG_DIR
    cat > $STORE_CONFIG <<EOF
  [Service]
  Environment="SNAPPY_FORCE_CPI_URL=http://$store_url"
  EOF
    systemctl daemon-reload
    systemctl start snapd.socket
  }

  setup_fake_store(){
    echo "Given a controlled store service is up"
    systemd-run --unit fakestore $(which fakestore) -start -blobdir $BLOB_DIR -addr $STORE_ADDR

    echo "And a snap is installed"
    snap install $SNAP_NAME

    echo "And snapd is configured to use the controlled store"
    configure_store_backend $STORE_ADDR

    echo "And a new version of that snap put in the controlled store"
    fakestore -blobdir $BLOB_DIR -make-refreshable $SNAP_NAME
  }

  setup_staging_store(){
    echo "And ubuntu-core snap is available before switching to staging"
    snap install hello-world

    echo "And snapd is configured to use the staging store"
    configure_store_backend search.apps.staging.ubuntu.com/api/v1/
  }

  if [ "$STORE_TYPE" = "fake" ]; then
    setup_fake_store
  elif [ "$STORE_TYPE" = "staging" ]; then
    setup_staging_store
  else
    echo "Given a refreshable snap is installed"
    snap install $SNAP_NAME
  fi

restore: |
  if [ "$STORE_TYPE" = "fake" ]; then
    systemctl stop fakestore
  fi

  systemctl stop snapd.socket
  rm -rf $STORE_CONFIG $BLOB_DIR
  systemctl daemon-reload
  systemctl start snapd.socket

execute: |
  # FIXME: currently the --list from channel doesn't work
  # echo "Then the new version is available for the snap to be refreshed"
  # expected="$SNAP_NAME +$SNAP_VERSION_PATTERN"
  # snap refresh --list | grep -Pzq "$expected"
  #
  # echo "================================="

  echo "When the snap is refreshed"
  snap refresh --channel=edge $SNAP_NAME

  echo "Then the new version is listed"
  expected="$SNAP_NAME +$SNAP_VERSION_PATTERN"
  snap list | grep -Pzq "$expected"

  echo "================================="
