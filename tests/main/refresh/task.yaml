summary: Check that the refresh command works.

details: |
  In order to control the state of the available snaps a fake store
  is used in these tests. The store service is controlled by systemd
  and the snap versions are made directly available on its blob
  directory

environment:
  SNAP_NAME: hello-world
  CONFIG_DIR: /etc/systemd/system/snapd.service.d
  STORE_CONFIG: $[CONFIG_DIR]/fakestore.conf
  BLOB_DIR: $(mktemp -d)
  STORE_ADDR: localhost:11028

prepare: |
  echo "Given a controlled store service is up"
  systemd-run --unit fakestore $(which fakestore) -start -blobdir $BLOB_DIR -addr $STORE_ADDR

  echo "And a snap is installed"
  snap install $SNAP_NAME

  echo "And snapd is configured to use the controlled store"
  systemctl stop snapd.service snapd.socket
  mkdir -p $CONFIG_DIR
  cat > $STORE_CONFIG <<EOF
  [Service]
  Environment="SNAPPY_FORCE_CPI_URL=http://$STORE_ADDR"
  EOF
  systemctl daemon-reload
  systemctl start snapd.service

restore: |
  systemctl stop fakestore
  systemctl stop snapd.socket
  rm -rf $STORE_CONFIG $BLOB_DIR
  systemctl daemon-reload
  systemctl start snapd.socket

execute: |
  echo "When a new version of that snap put in the controlled store"
  fakestore -blobdir $BLOB_DIR -make-refreshable $SNAP_NAME

  echo "Then the new version is available for the snap to be refreshed"
  expected="$SNAP_NAME +\d+\.\d+\+fake1 +\d+ +canonical"
  snap refresh --list | grep -Pzq "$expected"

  echo "================================="

  echo "When the snap is refreshed"
  snap refresh $SNAP_NAME

  echo "Then the new version is listed"
  expected="$SNAP_NAME +\d+\.\d+\+fake1 +\d+ +canonical"
  snap list | grep -Pzq "$expected"

  echo "================================="
