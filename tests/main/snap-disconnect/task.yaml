summary: Check that snap disconnect works

environment:
    SNAP_FILE: "home-consumer_1.0_all.snap"

prepare: |
    echo "Install a test snap"
    snap pack "$TESTSLIB"/snaps/home-consumer
    snap install --dangerous "$SNAP_FILE"
    snap install --edge jq

execute: |
    inspect_connection() {
      CONN="$1"
      # shellcheck disable=SC2002
      cat /var/lib/snapd/state.json | jq --arg CONN "$CONN" -r '.data["conns"] | has($CONN)'
    }

    DISCONNECTED_PATTERN='-\s+home-consumer:home'

    echo "Disconnect everything from given slot"
    snap connect home-consumer:home core:home
    snap disconnect core:home
    snap interfaces | grep -Pzqe "$DISCONNECTED_PATTERN"

    echo "Disconnect everything from given slot (abbreviated)"
    snap connect home-consumer:home core:home
    snap disconnect :home
    snap interfaces | grep -Pzqe "$DISCONNECTED_PATTERN"

    echo "Disconnect everything from given slot (abbreviated) with --forget"
    snap connect home-consumer:home core:home
    snap disconnect --forget :home
    snap interfaces | grep -Pzqe "$DISCONNECTED_PATTERN"
    inspect_connection "home-consumer:home core:home" | MATCH "false"

    echo "Disconnect everything from given plug"
    snap connect home-consumer:home core:home
    snap disconnect home-consumer:home
    snap interfaces | grep -Pzqe "$DISCONNECTED_PATTERN"

    echo "Disconnect specific plug and slot"
    snap connect home-consumer:home core:home
    snap disconnect home-consumer:home core:home
    snap interfaces | grep -Pzqe "$DISCONNECTED_PATTERN"

    echo "Disconnect specific plug and slot (abbreviated)"
    snap connect home-consumer:home core:home
    snap disconnect home-consumer:home :home
    snap interfaces | grep -Pzqe "$DISCONNECTED_PATTERN"

    echo "Disconnecting again using abbreviated form is handled"
    snap disconnect home-consumer:home | MATCH "No connections to disconnect"

    echo "Disconnecting without specifying the slot/plug fails"
    snap disconnect home-consumer: 2>&1 | MATCH '.*invalid value: "home-consumer:" \(want snap:name or :name\)'
    snap disconnect home-consumer 2>&1 | MATCH '.*invalid value: "home-consumer" \(want snap:name or :name\)'
    snap disconnect home-consumer:home core 2>&1 | MATCH '.*invalid value: "core" \(want snap:name or :name\)'

    # these checks rely on automatic connection of home on non-core systems
    if ! os.query is-core; then
      echo "Checking that --forget forgets connection when auto-connected"
      snap remove --purge "$SNAP_FILE"
      snap install --dangerous "$SNAP_FILE"
      snap connections home-consumer | MATCH "home-consumer:home *:home"
      snap disconnect --forget home-consumer:home :home
      snap interfaces | grep -Pzqe "$DISCONNECTED_PATTERN"
      inspect_connection "home-consumer:home core:home"| MATCH "false"

      echo "Checking that --forget forgets the connection when already disconnected"
      snap remove --purge "$SNAP_FILE"
      snap install --dangerous "$SNAP_FILE"
      # home got auto-connected
      snap connections home-consumer | MATCH "home-consumer:home *:home"
      snap disconnect home-consumer:home :home
      # still remembered as automatic connection is now undesired
      inspect_connection "home-consumer:home core:home" | MATCH "true"
      snap interfaces | grep -Pzqe "$DISCONNECTED_PATTERN"
      snap disconnect --forget home-consumer:home :home
      inspect_connection "home-consumer:home core:home" | MATCH "false"
    fi

    echo "Checking that a connection for missing plug can be forgotten"
    "$TESTSTOOLS"/snaps-state install-local test-snap-producer
    "$TESTSTOOLS"/snaps-state install-local test-snap-consumer.v1
    snap connect test-snap-consumer:shared-content-plug test-snap-producer:shared-content-slot
    snap connections test-snap-consumer | MATCH "content\[mylib\] *test-snap-consumer:shared-content-plug *test-snap-producer:shared-content-slot"
    # refresh to a newer version without content plug
    "$TESTSTOOLS"/snaps-state install-local test-snap-consumer.v2
    snap connections test-snap-consumer | NOMATCH "content\[mylib\] *test-snap-consumer:shared-content-plug *test-snap-producer:shared-content-slot"
    inspect_connection "test-snap-consumer:shared-content-plug test-snap-producer:shared-content-slot" | MATCH "true"
    snap disconnect --forget test-snap-consumer:shared-content-plug test-snap-producer:shared-content-slot
    snap connections test-snap-consumer | NOMATCH "content\[mylib\] *test-snap-consumer:shared-content-plug *test-snap-producer:shared-content-slot"
    inspect_connection "test-snap-consumer:shared-content-plug test-snap-producer:shared-content-slot" | MATCH "false"
