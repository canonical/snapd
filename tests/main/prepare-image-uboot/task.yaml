summary: Check that prepare-image works for uboot-systems
systems: [-ubuntu-core-16-64]
environment:
    ROOT: /tmp/root
    IMAGE: /tmp/root/image
    GADGET: /tmp/root/gadget
restore:
    rm -rf $ROOT
execute: |
    # TODO: switch to a prebuilt properly signed model assertion once we can do that consistently
    echo Creating model assertion
    cat > model.assertion <<EOF
    type: model
    series: 16
    authority-id: my-brand
    brand-id: my-brand
    model: my-model
    architecture: armhf
    gadget: pi2
    kernel: pi2-kernel
    timestamp: 2016-01-02T10:00:00-05:00
    sign-key-sha3-384: Jv8_JiHiIzJVcO9M55pPdqSDWUvuhfDIBJUS-3VW7F_idjix7Ffn5qMxB21ZQuij

    AXNpZw==
    EOF

    echo The unverified model assertion will not be copied into the image
    export UBUNTU_IMAGE_SKIP_COPY_UNVERIFIED_MODEL=1

    echo Running prepare-image
    snap prepare-image --channel edge --extra-snaps snapweb model.assertion $ROOT

    echo Verifying the result
    ls -lR $IMAGE
    for f in pi2 pi2-kernel ubuntu-core snapweb; do
        ls $IMAGE/var/lib/snapd/seed/snaps/${f}*.snap
    done
    grep snap_core=ubuntu-core $IMAGE/boot/uboot/uboot.env
    grep snap_kernel=pi2-kernel $IMAGE/boot/uboot/uboot.env

    echo Verify that the kernel is available unpacked
    ls $IMAGE/boot/uboot/pi2-kernel_*.snap/kernel.img
    ls $IMAGE/boot/uboot/pi2-kernel_*.snap/initrd.img
    ls $IMAGE/boot/uboot/pi2-kernel_*.snap/dtbs/

    echo Verify the unpacked gadget
    ls -lR $GADGET
    ls $GADGET/meta/snap.yaml

    echo Verify that we have valid looking seed.yaml
    cat $IMAGE/var/lib/snapd/seed/seed.yaml
    # snap-id of ubuntu-core
    grep -q "snap-id: b8X2psL1ryVrPt5WEmpYiqfr5emixTd7" $IMAGE/var/lib/snapd/seed/seed.yaml
    for snap in pi2 pi2-kernel ubuntu-core; do
      grep -q "name: $snap" $IMAGE/var/lib/snapd/seed/seed.yaml
    done

    echo "Verify that we got some snap assertions"
    for name in ubuntu-core pi2 pi2-kernel; do
        grep "snap-name: $name" $IMAGE/var/lib/snapd/seed/assertions/*
    done
