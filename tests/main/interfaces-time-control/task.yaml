summary: Check that RTC device nodes are accessible through an interface

details: |
    This test makes sure that a snap using the time-control interface
    can access the /dev/rtc device node exposed by a slot on the OS
    snap properly.

prepare: |
    # Install a snap declaring a plug on time-control
    cp $TESTSLIB/snaps/test-snapd-timedate-control-consumer/meta/snap.yaml $TESTSLIB/snaps/test-snapd-timedate-control-consumer/meta/snap.yaml.orig
    sed 's/\[\]/\[time-control\]/g' -i $TESTSLIB/snaps/test-snapd-timedate-control-consumer/meta/snap.yaml
    snap try $TESTSLIB/snaps/test-snapd-timedate-control-consumer

    echo $(timedatectl status | grep 'RTC in local TZ:' | sed 's/.*RTC in local TZ: \(.*\)$/\1/') > rtc.txt

restore: |
    # Restore the timedate-control-consumer snap.yaml
    cp $TESTSLIB/snaps/test-snapd-timedate-control-consumer/meta/snap.yaml.orig $TESTSLIB/snaps/test-snapd-timedate-control-consumer/meta/snap.yaml

    # Restore the initial rtc configuration
    timedatectl set-local-rtc "$(cat rtc.txt)"
    rm -f rtc.txt

execute: |
    CONNECTED_PATTERN=":time-control +test-snapd-timedate-control-consumer"
    DISCONNECTED_PATTERN="\- +test-snapd-timedate-control-consumer:time-control"

    . $TESTSLIB/dirs.sh

    # Check the interface is disconnected by detault
    snap interfaces | MATCH "$DISCONNECTED_PATTERN"

    # Connect the interface and check it is connected
    snap connect test-snapd-timedate-control-consumer:time-control
    snap interfaces | MATCH "$CONNECTED_PATTERN"
    
    # Read/write to hwclock access should be possible
    test-snapd-timedate-control-consumer.hwclock -r -f /dev/rtc
    test-snapd-timedate-control-consumer.hwclock --systohc -f /dev/rtc

    # Read access should be possible
    test-snapd-timedate-control-consumer.timedatectl status | MATCH "RTC in local TZ:"

    # Set the local rtc and check the status
    test-snapd-timedate-control-consumer.timedatectl set-local-rtc yes
    [ "$(timedatectl status | grep 'RTC in local TZ:' | sed 's/.*RTC in local TZ: \(.*\)$/\1/')" = "yes" ]

    # Re-set the local rtc and check the status
    test-snapd-timedate-control-consumer.timedatectl set-local-rtc no
    [ "$(timedatectl status | grep 'RTC in local TZ:' | sed 's/.*RTC in local TZ: \(.*\)$/\1/')" = "no" ]
    [ "$(test-snapd-timedate-control-consumer.timedatectl status | grep 'RTC in local TZ:' | sed 's/.*RTC in local TZ: \(.*\)$/\1/')" = "no" ]

    if [ "$(snap debug confinement)" = partial ] ; then
        exit 0
    fi

    # Disconnect the interface and check access to timedatectl status
    snap disconnect test-snapd-timedate-control-consumer:time-control
    if test-snapd-timedate-control-consumer.timedatectl status 2>${PWD}/call.error; then
        echo "Expected permission error calling timedatectl status with disconnected plug"
        exit 1
    fi
    MATCH "Permission denied" < call.error
