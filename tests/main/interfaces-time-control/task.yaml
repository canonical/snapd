summary: Check that RTC device nodes are accessible through an interface

details: |
    This test makes sure that a snap using the time-control interface
    can access the /dev/rtc device node exposed by a slot on the OS
    snap properly.

# s390x virtualization does not support hwclock
systems: [-opensuse-*,-fedora-*,-ubuntu-core-*,-ubuntu-14.04-*,-*-s390x,-arch-*]

prepare: |
    #shellcheck source=tests/lib/snaps.sh
    . "$TESTSLIB"/snaps.sh

    # Install a snap declaring a plug on time-control
    install_local test-snapd-timedate-control-consumer

restore: |
    # Restore the initial rtc configuration
    if [ -f rtc.txt ]; then
        timedatectl set-local-rtc "$(cat rtc.txt)"
    fi

execute: |
    # hwclock with libaudit (ie, core 16) also needs netlink-audit connected.
    # This interface is tested elsewhere, so simply connect it here so we can
    # test the time-control interface in isolation.
    snap connect test-snapd-timedate-control-consumer:netlink-audit

    echo "The interface is disconnected by default"
    snap interfaces -i time-control | MATCH -- '^- +test-snapd-timedate-control-consumer:time-control'

    echo "When the interface is connected"
    snap connect test-snapd-timedate-control-consumer:time-control

    echo "Then read/write to hwclock access should be possible"
    test-snapd-timedate-control-consumer.hwclock-time -r -f /dev/rtc
    test-snapd-timedate-control-consumer.hwclock-time --systohc -f /dev/rtc

    echo "And read access should be possible"
    test-snapd-timedate-control-consumer.timedatectl-time status | MATCH "RTC in local TZ:"

    echo "And save the RTC initial value should be possible"
    test-snapd-timedate-control-consumer.timedatectl-time status | grep -oP 'RTC in local TZ: \K(.*)' > rtc.txt

    echo "And set the local rtc and check the status should be possible"
    test-snapd-timedate-control-consumer.timedatectl-time set-local-rtc yes
    [ "$(test-snapd-timedate-control-consumer.timedatectl-time status | grep -oP 'RTC in local TZ: \K(.*)')" = "yes" ]

    echo "And re-set the local rtc and check the status should be possible"
    test-snapd-timedate-control-consumer.timedatectl-time set-local-rtc no
    [ "$(test-snapd-timedate-control-consumer.timedatectl-time status | grep -oP 'RTC in local TZ: \K(.*)')" = "no" ]

    if [ "$(snap debug confinement)" = partial ] ; then
        exit 0
    fi

    echo "When the plug is disconnected"
    snap disconnect test-snapd-timedate-control-consumer:time-control

    echo "The timedatectl status cannot be retrieved"
    if test-snapd-timedate-control-consumer.timedatectl-time status 2> call.error; then
        echo "Expected permission error calling timedatectl status with disconnected plug"
        exit 1
    fi
    MATCH "Permission denied" < call.error
