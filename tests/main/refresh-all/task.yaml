summary: Check that more than one snap is refreshed.

systems: [-ubuntu-core-*]

details: |
    We use only the fake store for this test because we currently
    have only one controlled snap in the remote stores, when we will
    have more we can update the test to use them

environment:
    BLOB_DIR: $(pwd)/fake-store-blobdir

prepare: |
    if [ "$TRUST_TEST_KEYS" = "false" ]; then
        echo "This test needs test keys to be trusted"
        exit
    fi

    #shellcheck source=tests/lib/store.sh
    . "$TESTSLIB"/store.sh

    echo "Given two snaps are installed"
    for snap in test-snapd-tools test-snapd-python-webserver; do
        snap install $snap
    done

    echo "And the daemon is configured to point to the fake store"
    setup_fake_store "$BLOB_DIR"

restore: |
    if [ "$TRUST_TEST_KEYS" = "false" ]; then
        echo "This test needs test keys to be trusted"
        exit
    fi

    #shellcheck source=tests/lib/store.sh
    . "$TESTSLIB"/store.sh
    teardown_fake_store "$BLOB_DIR"
    rm -rf "$BLOB_DIR"

execute: |
    if [ "$TRUST_TEST_KEYS" = "false" ]; then
        echo "This test needs test keys to be trusted"
        exit
    fi

    echo "Sanity check for the fake store"
    snap refresh 2>&1 | MATCH "All snaps up to date."

    echo "When the store is configured to make them refreshable"
    #shellcheck source=tests/lib/files.sh
    . "$TESTSLIB"/files.sh
    #shellcheck source=tests/lib/store.sh
    . "$TESTSLIB"/store.sh
    init_fake_refreshes "$BLOB_DIR" test-snapd-tools
    wait_for_file "$BLOB_DIR"/test-snapd-tools*fake1*.snap 4 .5
    init_fake_refreshes  "$BLOB_DIR" test-snapd-python-webserver
    wait_for_file "$BLOB_DIR"/test-snapd-python-webserver*fake1*.snap 4 .5

    echo "And a refresh is performed"
    snap refresh

    echo "Then the new versions are installed"
    for snap in test-snapd-tools test-snapd-python-webserver; do
        snap list | MATCH "$snap.*fake1"
    done
