summary: Ensure that mounts persist during a refresh of a content snap

details: |
  A bug in snap-update-ns due to the experimental robust-mount-namespaces option
  being enabled resulted in all files being shared by content interfaces disappearing
  during a refresh, either of snapd or of the snap sharing files via a content. The
  most visible example of this was the firefox snap, which would crash when the files
  disappeared like this (other snaps would misbehave but would not crash as fatally as
  the firefox snap). See launchpad bug https://bugs.launchpad.net/snapd/+bug/1945697 for
  full details.

systems:
  - -ubuntu-14.04-* # no support for tests.session
  - -ubuntu-core-* # can't modify rootfs to add a fonts dir

kill-timeout: 10m

prepare: |
  # make a font directory and restart snapd so it will see it when it goes to
  # connect the desktop interface for the snap
  mkdir -p /usr/share/fonts/foo-font
  tests.cleanup defer rmdir /usr/share/fonts/foo-font
  systemctl restart snapd

  # install a snap which exposes some files via a content slot
  "$TESTSTOOLS"/snaps-state install-local test-snapd-content-slot

  # install a snap which consumes said files via content plug
  "$TESTSTOOLS"/snaps-state install-local test-snapd-desktop-layout-with-content

  # connect
  snap connect test-snapd-desktop-layout-with-content:shared-content-plug test-snapd-content-slot:shared-content-slot

  # prepare a user session
  tests.session -u test prepare
  tests.cleanup defer tests.session -u test restore

execute: |
  # Construct the mount namespace once so that we are not racing construction
  # from background job of snap run with update with snap install of the
  # test-snapd-content-slot below.
  test-snapd-desktop-layout-with-content.sh -c 'true'
  # Read a file continuously in the background until it fails. Note that we are
  # not using a service but a regular app running in the background since the
  # process must persist during the refresh.
  tests.session -u test exec test-snapd-desktop-layout-with-content.crash-foo-font &
  pid=$!

  # Wait for the script to start.
  retry grep -xF 'started' ~test/snap/test-snapd-desktop-layout-with-content/common/status

  # Refresh the content slot snap.
  # TODO: when refresh app awareness is enabled, this will need to ignore running processes to
  # check the behavior
  "$TESTSTOOLS"/snaps-state install-local test-snapd-content-slot

  # Signal to kill the loop
  rm ~test/snap/test-snapd-desktop-layout-with-content/common/keep-running
  wait "$pid"

  # Ensure that /usr/share/fonts/foo-font was never missing.
  MATCH 'exited' ~test/snap/test-snapd-desktop-layout-with-content/common/status
  NOMATCH 'foo-font missing' ~test/snap/test-snapd-desktop-layout-with-content/common/status
