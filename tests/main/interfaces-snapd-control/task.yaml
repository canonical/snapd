summary: Ensure that the snapd-control interface works.

details: |
    The snapd-control interface allows a snap to access the locale configuration.

    A snap which defines the snapd-control plug must be shown in the interfaces list.
    The plug must not be autoconnected on install and, as usual, must be able to be
    reconnected.

    A snap declaring a plug on this interface must be able to control the snapd daemon
    through the socket, the test snap used has a command to install a snap (exercising
    the write capability on the socket) and a command to list the installed snaps (which
    checks the read capability). A network plug must be defined and connected for the
    snap to be able to talk to the socket, the snapd-control is not enough by itself.


prepare: |
    echo "Given a snap declaring a plug on the snapd-control interface is installed"
    snap install --edge test-snapd-control-consumer

restore: |
    rm -f snapd.error

execute: |
    echo "The interface is connected by default"
    snap interfaces | MATCH ":snapd-control .*test-snapd-control-consumer"

    if [ "$(snap debug confinement)" = strict ] ; then
        echo "When the plug is disconnected"
        snap disconnect test-snapd-control-consumer:snapd-control

        echo "Then the snap command is not able to control snapd"
        if test-snapd-control-consumer.list 2>snapd.error; then
            echo "Expected error with plug disconnected"
            exit 1
        fi
        grep -q "Permission denied" snapd.error
    fi

    echo "When the plug is connected"
    snap connect test-snapd-control-consumer:snapd-control

    echo "Then the snap command is able to control snapd"
    ! test-snapd-control-consumer.list | grep -q test-snapd-tools
    test-snapd-control-consumer.install test-snapd-tools
    while ! test-snapd-control-consumer.list | grep -q test-snapd-tools; do sleep 1; done
