summary: ensure only approved snaps can use the microk8s system user

environment:
  BLOB_DIR: $(pwd)/fake-store-blobdir

prepare: |
    if [ "$TRUST_TEST_KEYS" = "false" ]; then
        echo "This test needs test keys to be trusted"
        exit
    fi

    echo "Ensure jq is installed"
    if ! command -v jq; then
        snap install --devmode jq
    fi

    echo "Ensure yaml2json is installed"
    if ! command -v yaml2json; then
        snap install --devmode remarshal
    fi

    snap debug can-manage-refreshes | MATCH false

    snap ack "$TESTSLIB/assertions/testrootorg-store.account-key"

    #shellcheck source=tests/lib/store.sh
    . "$TESTSLIB"/store.sh
    setup_fake_store "$BLOB_DIR"

    # Create a snap which is not entitled to use the microk8s user

    snap_path=$("$TESTSTOOLS"/snaps-state pack-local test-microk8s-username)
    make_snap_installable "$BLOB_DIR" "${snap_path}"

    # Then create a snap which is entitled to use the microk8s user

    snap_path=$("$TESTSTOOLS"/snaps-state pack-local microk8s)
    MICROK8S_SNAP_ID="EaXqgt1lyCaxKaQCU349mlodBkDCXRcg"
    make_snap_installable_with_id "$BLOB_DIR" "${snap_path}" "$MICROK8S_SNAP_ID"

    snap ack "$TESTSLIB/assertions/developer1.account"
    snap ack "$TESTSLIB/assertions/developer1.account-key"

restore: |
    if [ "$TRUST_TEST_KEYS" = "false" ]; then
        echo "This test needs test keys to be trusted"
        exit
    fi
    #shellcheck source=tests/lib/store.sh
    . "$TESTSLIB"/store.sh
    teardown_fake_store "$BLOB_DIR"

execute: |
    echo "Try to install a snap which is not entitled to use the microk8s user"
    OUT=$(snap install "test-microk8s-username" 2>&1 || true)
    echo "$OUT" | MATCH 'snap "test-microk8s-username" is not allowed to use the system user "snap_microk8s"'

    # Make sure neither snap_microk8s user nor group are created
    not getent passwd snap_microk8s
    not getent group snap_microk8s

    echo "Now install the microk8s snap"
    snap install "microk8s" 2>&1 | MATCH 'microk8s 1.0 installed'

    # Make sure both snap_microk8s user and group are created
    getent passwd snap_microk8s
    getent group snap_microk8s
