summary: Snap user services are restarted when snaps are upgraded

systems:
    # Ubuntu 14.04's systemd doesn't have user@.service
    - -ubuntu-14.04-*
    # Amazon Linux 2 gives error "Unit user@12345.service not loaded."
    - -amazon-linux-2-*
    # Centos 7 gives error "Unit user@12345.service not loaded."
    - -centos-7-*

kill-timeout: 10m

prepare: |
    # Ensure that snapd.session-agent.socket is enabled.  This may not
    # be the case on distributions where presets have been used to
    # disable it.
    if [ ! -L /usr/lib/systemd/user/sockets.target.wants/snapd.session-agent.socket ] &&
            ! systemctl --user --global is-enabled snapd.session-agent.socket; then
        systemctl --user --global enable snapd.session-agent.socket
        touch agent-was-enabled
    fi
    snap set system experimental.user-daemons=true
    tests.session kill-leaked
    tests.session -u test prepare

restore: |
    tests.session -u test restore
    snap unset system experimental.user-daemons

    if [ -f agent-was-enabled ]; then
        systemctl --user --global disable snapd.session-agent.socket
    fi


debug: |
    tests.session dump
    tests.session -u test exec systemctl --user status snapd.session-agent.service || true
    tests.session -u test exec journalctl --user || true

execute: |
    function systemctl_user() {
      tests.session -u test exec systemctl --user "$@"
    }

    echo "Install the a snap with user services while a user session is active"
    "$TESTSTOOLS"/snaps-state install-local test-snapd-user-service

    echo "We can see the service running"
    systemctl_user is-active snap.test-snapd-user-service.test-snapd-user-service
    systemctl_user show -p MainPID snap.test-snapd-user-service.test-snapd-user-service > old-main.pid

    echo "When it is re-installed"
    "$TESTSTOOLS"/snaps-state install-local test-snapd-user-service

    echo "We can see the service running with a new PID"
    systemctl_user is-active snap.test-snapd-user-service.test-snapd-user-service
    systemctl_user show -p MainPID snap.test-snapd-user-service.test-snapd-user-service > new-main.pid
    test "$(cat new-main.pid)" != "$(cat old-main.pid)"
