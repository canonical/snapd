summary: Ensure that the ssh-public-keys interface works.

details: |
    The ssh-public-keys interface allows to access public keys and
    make ssh connections.

environment:
    KEYSDIR: "/$HOME/.ssh"
    TESTKEY: "/$HOME/.ssh/testkey"

prepare: |
    "$TESTSTOOLS"/snaps-state install-local test-snapd-sh

    "$TESTSTOOLS"/fs-state mock-dir "$KEYSDIR"
    "$TESTSTOOLS"/fs-state mock-file "$TESTKEY"
    "$TESTSTOOLS"/fs-state mock-file "$TESTKEY".pub

restore: |
    "$TESTSTOOLS"/fs-state restore-dir "$KEYSDIR"

execute: |
    echo "The interface is not connected by default"
    snap interfaces -i ssh-public-keys | MATCH -- '^- +test-snapd-sh:ssh-public-keys'

    echo "When the interface is connected"
    snap connect test-snapd-sh:ssh-public-keys
    
    echo "Then the snap is able to see ssh version"
    test-snapd-sh.with-ssh-public-keys-plug -c "ssh -V"

    echo "And the snap is able to read a public key"
    test-snapd-sh.with-ssh-public-keys-plug -c "cat $TESTKEY.pub"

    if [ "$(snap debug confinement)" = partial ]; then
        exit 0
    fi

    echo "And then the snap is not able to access to private keys"
    if test-snapd-sh.with-ssh-public-keys-plug -c "cat $TESTKEY" 2> call.error; then
        echo "Expected permission error accessing to ssh"
        exit 1
    fi
    MATCH "Permission denied" < call.error

    echo "When the plug is disconnected"
    snap disconnect test-snapd-sh:ssh-public-keys
    
    echo "Then the snap is not able to access the ssh public keys"
    if test-snapd-sh.with-ssh-public-keys-plug -c "cat $TESTKEY.pub" 2> call.error; then
        echo "Expected permission error accessing to ssh"
        exit 1
    fi
    MATCH "Permission denied" < call.error
