summary: Ensure that the ssh-public-keys interface works.

details: |
    The ssh-public-keys interface allows to access public keys and
    make ssh connections.

    The test-snapd-ssh-public-keys snap checks the connection can be
    stablished.

environment:
    KEYSDIR: "/$HOME/.ssh"
    TESTKEY: "/$HOME/.ssh/testkey"
    CONNECTED_PATTERN: ':ssh-public-keys +test-snapd-ssh-public-keys'
    DISCONNECTED_PATTERN: '\- +test-snapd-ssh-public-keys:ssh-public-keys'


prepare: |
    . "$TESTSLIB/snaps.sh"

    install_local test-snapd-ssh-public-keys

    if [ -d "$KEYSDIR" ]; then
        cp -rf "$KEYSDIR" "$KEYSDIR".old
    else
        mkdir "$KEYSDIR"
    fi
    echo "testkey" > "$TESTKEY"
    echo "testkey.pub" > "$TESTKEY".pub

restore: |
    rm -f call.error
    rm -rf "$KEYSDIR"
    if [ -d "$KEYSDIR".old ]; then
        mv "$KEYSDIR".old "$KEYSDIR"
    fi

execute: |
    echo "The interface is not connected by default"
    snap interfaces | MATCH "$DISCONNECTED_PATTERN"
    
    echo "When the interface is connected"
    snap connect test-snapd-ssh-public-keys:ssh-public-keys
    snap interfaces | MATCH "$CONNECTED_PATTERN"
    
    echo "Then the snap is able to see ssh version"
    test-snapd-ssh-public-keys.cmd ssh -V

    echo "And the snap is able to read a public key"
    test-snapd-ssh-public-keys.cmd cat "$TESTKEY".pub

    if [ "$(snap debug confinement)" = partial ]; then
        exit 0
    fi

    echo "And then the snap is not able to access to private keys"
    if test-snapd-ssh-public-keys.cmd cat "$TESTKEY" 2>${PWD}/call.error; then
        echo "Expected permission error accessing to ssh"
        exit 1
    fi
    MATCH "Permission denied" < call.error

    echo "When the plug is disconnected"
    snap disconnect test-snapd-ssh-public-keys:ssh-public-keys
    snap interfaces | MATCH "$DISCONNECTED_PATTERN"
    
    echo "Then the snap is not able to access the ssh public keys"
    if test-snapd-ssh-public-keys.cmd cat "$TESTKEY".pub 2>${PWD}/call.error; then
        echo "Expected permission error accessing to ssh"
        exit 1
    fi
    MATCH "Permission denied" < call.error
