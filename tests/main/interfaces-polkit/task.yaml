summary: Ensure that the polkit interface works.

systems: [-ubuntu-core-*]

prepare: |
    if ! tests.session has-session-systemd-and-dbus; then
        exit 0
    fi
    tests.session -u test prepare

restore: |
    if ! tests.session has-session-systemd-and-dbus; then
        exit 0
    fi
    rm -f /home/test/sleep.stamp
    tests.session -u test restore

execute: |
    # We don't actually need a D-Bus session bus, but this is a good
    # guard for support for a user session.
    if ! tests.session has-session-systemd-and-dbus; then
        exit 0
    fi

    echo "Install the test snap"
    "$TESTSTOOLS"/snaps-state install-local test-snapd-pk-service

    echo "The polkit interface is disconnected by default"
    snap connections test-snapd-pk-service | MATCH "polkit +test-snapd-pk-service:polkit +- +-"

    echo "The polkit policy file is not installed"
    test ! -f /usr/share/polkit-1/actions/snap.test-snapd-pk-service.interface.polkit.foo.policy

    echo "The interface can be connected"
    snap connect test-snapd-pk-service:polkit
    snap connections test-snapd-pk-service | MATCH "polkit +test-snapd-pk-service:polkit +:polkit +manual"

    echo "Snapd has installed the policy file for the service"
    test -f /usr/share/polkit-1/actions/snap.test-snapd-pk-service.interface.polkit.foo.policy
    echo "The contents match the file provided by the snap"
    cmp /usr/share/polkit-1/actions/snap.test-snapd-pk-service.interface.polkit.foo.policy ./test-snapd-pk-service/meta/polkit/polkit.foo.policy

    echo "Create a non-privileged process, and get its pid"
    tests.session -u test exec systemd-run --user --unit test-snapd-sleep.service sh -c 'touch /home/test/sleep.stamp && exec sleep 1h'
    retry -n 30 --wait 0.1 test -e /home/test/sleep.stamp
    user_pid=$(tests.session -u test exec systemctl --user show --property=MainPID test-snapd-sleep.service | cut -d = -f 2)

    echo "The snap can talk to polkitd"
    test-snapd-pk-service.check-pid "$user_pid" org.example.foo.AlwaysAllow \
      | MATCH '^\(bba\{ss\}\) true false '
    test-snapd-pk-service.check-pid "$user_pid" org.example.foo.AlwaysDeny \
      | MATCH '^\(bba\{ss\}\) false false '
