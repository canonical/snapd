summary: Integration tests for the snap-bootstrap binary autodetect

# one system is enough, its a very specialized test for now
systems: [ubuntu-19.10-64]

debug: |
    cat /proc/partitions

restore: |
    if [ -f loop.txt ]; then
        losetup -d "$(cat loop.txt)"
    fi

prepare: |
    echo "Create a fake block device image that looks like an image from u-i"
    truncate --size=20GB fake.img

    echo "Setup the image as a block device"
    losetup -fP fake.img
    losetup -a |grep fake.img|cut -f1 -d: > loop.txt
    LOOP="$(cat loop.txt)"

    echo "Create a partition that looks like a uc20 image"
    cat <<EOF | sfdisk "$LOOP"
    label: gpt

    start=2048, size=2048, type=21686148-6449-6E6F-744E-656564454649, name="BIOS Boot"
    start=4096, size=2457600, type=C12A7328-F81F-11D2-BA4B-00A0C93EC93B, name="ubuntu-seed"
    EOF
    udevadm trigger --settle "${LOOP}p2"
    mkfs.vfat "${LOOP}p2"
    udevadm trigger --settle "${LOOP}p2"
    echo "Double check that we got the expected partitions"
    sfdisk -l "$LOOP" | MATCH 'BIOS boot'
    sfdisk -l "$LOOP" | MATCH 'EFI System'

    echo "Get the UC20 gadget"
    snap download --channel=20/edge pc
    unsquashfs -d gadget-dir pc_*.snap

execute: |
    LOOP="$(cat loop.txt)"

    # debug message to see if the udev database is correctly updated
    udevadm info --query=property "${LOOP}p2" | grep ID_FS_TYPE ||:

    echo "Run the snap-bootstrap tool in auto-detect mode"
    /usr/lib/snapd/snap-bootstrap create-partitions ./gadget-dir

    echo "And check that the partitions are created"
    sfdisk -l "$LOOP" | MATCH '750M Linux filesystem'
    sfdisk -l "$LOOP" | MATCH '3G Linux filesystem'
    file -s "${LOOP}p3" | MATCH 'ext4 filesystem data,.* volume name "ubuntu-boot"'
    file -s "${LOOP}p4" | MATCH 'ext4 filesystem data,.* volume name "ubuntu-data"'

    echo "Check if attribute bits were set for new partitions"
    sfdisk -d "$LOOP" | not MATCH "${LOOP}p1.*attrs=\"GUID:59\""
    sfdisk -d "$LOOP" | not MATCH "${LOOP}p2.*attrs=\"GUID:59\""
    sfdisk -d "$LOOP" | MATCH "${LOOP}p3.*attrs=\"GUID:59\""
    sfdisk -d "$LOOP" | MATCH "${LOOP}p4.*attrs=\"GUID:59\""

    # re-create partitions on a new install attempt
    echo "Run the snap-bootstrap again"
    /usr/lib/snapd/snap-bootstrap create-partitions ./gadget-dir

    echo "And check that the partitions are there"
    sfdisk -l "$LOOP" | MATCH '750M Linux filesystem'
    sfdisk -l "$LOOP" | MATCH '3G Linux filesystem'
    sfdisk -l "$LOOP" | not MATCH "${LOOP}p[56789]"
    file -s "${LOOP}p3" | MATCH 'ext4 filesystem data,.* volume name "ubuntu-boot"'
    file -s "${LOOP}p4" | MATCH 'ext4 filesystem data,.* volume name "ubuntu-data"'
