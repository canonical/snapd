summary: Check that default tracks work

environment:
    A_SNAP: test-snapd-default-track
    A_TRACK: default

prepare: |
    snap install jq
    snap install test-snapd-curl --edge

execute: |
    # first, sanity check that the snap has a default track
    snap run test-snapd-curl.curl -H "Snap-Device-Series: 16" "https://api.snapcraft.io/v2/snaps/info/$A_SNAP" > info
    test "$( snap run  jq -r '."default-track"' < info )" == "$A_TRACK"

    # TODO: check the output of 'snap info' for the default-track-having snap
    # once that works as expected (order of tracks is wrong right now)

    # TODO: check error output when trying to install from [default]/stable

    # now install a snap that has a default track
    # (and you got candidate from the default track)
    snap install --candidate "$A_SNAP" | MATCH "$A_TRACK/candidate"
    "$TESTSTOOLS"/snapd-state check-state ".data.snaps.\"$A_SNAP\".channel" = "$A_TRACK/candidate"

    snap remove --purge "$A_SNAP"
    snap remove --purge test-snapd-curl
    snap remove --purge jq

    # now try a multi-install
    snap install "$A_SNAP" "jq"
    # you get stable from the default track
    "$TESTSTOOLS"/snapd-state check-state ".data.snaps.\"$A_SNAP\".channel" = "$A_TRACK/stable"

    # now another
    snap set core experimental.parallel-instances=true
    snap install "${A_SNAP}_a" "${A_SNAP}_b"
    "$TESTSTOOLS"/snapd-state check-state ".data.snaps.\"${A_SNAP}_a\".channel" = "$A_TRACK/stable"
    "$TESTSTOOLS"/snapd-state check-state ".data.snaps.\"${A_SNAP}_b\".channel" = "$A_TRACK/stable"
