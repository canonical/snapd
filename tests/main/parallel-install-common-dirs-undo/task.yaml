summary: Checks handling of common snap directories of parallel installed snaps

prepare: |
    snap set system experimental.parallel-instances=true

execute: |
    #shellcheck source=tests/lib/snaps.sh
    . "$TESTSLIB"/snaps.sh
    #shellcheck source=tests/lib/dirs.sh
    . "$TESTSLIB"/dirs.sh

    # the snap is named 'test-snapd-service'
    path="$(make_snap test-snapd-service-v2-bad)"
    test -n "$path"

    echo "Given a snap that fails to install"
    ! snap install --dangerous "$path"
    snap change --last=install | MATCH 'Error.*Start snap "test-snapd-service" \(unset\) services'

    echo "Shared snap directories are cleaned up in undo"
    ! test -d "$SNAP_MOUNT_DIR/test-snapd-service"
    ! test -d "/var/snap/test-snapd-service"

    echo "Given a snap with instance key foo that fails to install"
    ! snap install --dangerous --name test-snapd-service_foo "$path"
    snap change --last=install | MATCH 'Error.*Start snap "test-snapd-service_foo" \(unset\) services'

    echo "Instance foo directories are cleaned up"
    ! test -d "$SNAP_MOUNT_DIR/test-snapd-service_foo"
    ! test -d "/var/snap/test-snapd-service_foo"

    echo "Shared snap directories are cleaned up as well"
    ! test -d "$SNAP_MOUNT_DIR/test-snapd-service"
    ! test -d "/var/snap/test-snapd-service"

restore:
    snap set system experimental.parallel-instances=null
