summary: Check that prepare-image works for grub-systems

backends: [-autopkgtest]

systems: [-ubuntu-core-16-*, -fedora-*, -opensuse-*, -arch-*]

environment:
    ROOT: "$PWD/root"
    IMAGE: "$PWD/root/image"
    GADGET: "$PWD/root/gadget"

execute: |
    echo Running prepare-image
    su -c "SNAPPY_USE_STAGING_STORE=$SNAPPY_USE_STAGING_STORE snap prepare-image --channel edge --snap test-snapd-tools-core18 $TESTSLIB/assertions/ubuntu-core-18-amd64.model $ROOT" test

    echo Verifying the result
    ls -lR "$IMAGE"
    for f in pc pc-kernel core18 snapd test-snapd-tools-core18; do
        ls "$IMAGE"/var/lib/snapd/seed/snaps/"${f}"*.snap
    done
    MATCH snap_core=core18 < "$IMAGE"/boot/grub/grubenv
    MATCH snap_kernel=pc-kernel < "$IMAGE"/boot/grub/grubenv

    # snap-id of core18
    if [ "$REMOTE_STORE" = production ]; then
        core18_snap_id="CSO04Jhav2yK0uz97cr0ipQRyqg0qQL6"
    else
        core18_snap_id="FIXME"
    fi
    MATCH "snap-id: ${core18_snap_id}" < "$IMAGE"/var/lib/snapd/seed/seed.yaml

    for snap in pc pc-kernel core18 snapd; do
        MATCH "name: $snap" < "$IMAGE"/var/lib/snapd/seed/seed.yaml
    done

    echo "Verify that we got some snap assertions"
    for name in pc pc-kernel core18 snapd; do
        cat "$IMAGE"/var/lib/snapd/seed/assertions/* | MATCH "snap-name: $name"
    done

    echo "Ensure the core snap is absent"
    if ls "$IMAGE"/var/lib/snapd/seed/snaps/core_*.snap; then
        echo "Unexpected core snap found in the seed directory. Test broken."
        echo "Seed directory content:"
        ls "$IMAGE"/var/lib/snapd/seed/snaps/
        exit 1
    fi
