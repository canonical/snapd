summary: Check that prepare-image works for grub-systems

systems: [-ubuntu-core-16-*, -fedora-*, -opensuse-*, -arch-*]

backends: [-autopkgtest]

# TODO: use the real stores with proper assertions fully as well once possible
environment:
    ROOT: /tmp/root
    IMAGE: /tmp/root/image
    GADGET: /tmp/root/gadget
    STORE_DIR: $(pwd)/fake-store-blobdir
    STORE_ADDR: localhost:11028

prepare: |
    if [ "$TRUST_TEST_KEYS" = "false" ]; then
        echo "This test needs test keys to be trusted"
        exit
    fi

    #shellcheck source=tests/lib/store.sh
    . "$TESTSLIB/store.sh"
    setup_fake_store "$STORE_DIR"

restore: |
    if [ "$TRUST_TEST_KEYS" = "false" ]; then
        echo "This test needs test keys to be trusted"
        exit
    fi
    
    #shellcheck source=tests/lib/store.sh
    . "$TESTSLIB/store.sh"
    teardown_fake_store "$STORE_DIR"
    rm -rf "$ROOT"

execute: |
    if [ "$TRUST_TEST_KEYS" = "false" ]; then
        echo "This test needs test keys to be trusted"
        exit
    fi

    echo Expose the needed assertions through the fakestore
    cp "$TESTSLIB"/assertions/developer1.account "$STORE_DIR"/asserts
    cp "$TESTSLIB"/assertions/developer1.account-key "$STORE_DIR"/asserts
    # have snap use the fakestore for assertions (but nothing else)
    export SNAPPY_FORCE_SAS_URL="http://$STORE_ADDR"

    echo Running prepare-image
    su -c "SNAPPY_USE_STAGING_STORE=$SNAPPY_USE_STAGING_STORE snap prepare-image --channel edge --extra-snaps snapweb $TESTSLIB/assertions/developer1-pc-w-base.model $ROOT" test

    echo Verifying the result
    ls -lR "$IMAGE"
    for f in pc pc-kernel core18 snapd snapweb; do
        ls "$IMAGE"/var/lib/snapd/seed/snaps/"${f}"*.snap
    done
    MATCH snap_core=core18 < "$IMAGE"/boot/grub/grubenv
    MATCH snap_kernel=pc-kernel < "$IMAGE"/boot/grub/grubenv

    # snap-id of core18
    if [ "$REMOTE_STORE" = production ]; then
        core18_snap_id="CSO04Jhav2yK0uz97cr0ipQRyqg0qQL6"
    else
        core18_snap_id="FIXME"
    fi
    MATCH "snap-id: ${core18_snap_id}" < "$IMAGE"/var/lib/snapd/seed/seed.yaml

    for snap in pc pc-kernel core18 snapd; do
        MATCH "name: $snap" < "$IMAGE"/var/lib/snapd/seed/seed.yaml
    done

    echo "Verify that we got some snap assertions"
    for name in pc pc-kernel core18 snapd; do
        cat "$IMAGE"/var/lib/snapd/seed/assertions/* | MATCH "snap-name: $name"
    done

    echo "Ensure the core snap is absent"
    if ls "$IMAGE"/var/lib/snapd/seed/snaps/core_*.snap; then
        echo "Unexpected core snap found in the seed directory. Test broken."
        echo "Seed directory content:"
        ls "$IMAGE"/var/lib/snapd/seed/snaps/
        exit 1
    fi
