summary: Check that users with homes in /var/lib can run *classic* snaps

systems: [ubuntu-20.04-64]

environment:
    SPECIAL_USER_NAME/jenkins: jenkins
    SPECIAL_USER_NAME/postgres: postgres

prepare: |
    echo "Having the test-snapd-classic-confinement snap installed"
    "$TESTSTOOLS"/snaps-state install-local test-snapd-classic-confinement --classic

    echo "Install the corresponding package that brings the special user account."
    # Specialize the code as required for a particular user.
    case "$SPECIAL_USER_NAME" in
        jenkins)
            # Jenkins depends on java but not in the Debian sense.
            apt-get install -y default-jre-headless
            wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | apt-key add -
            echo 'deb http://pkg.jenkins.io/debian-stable binary/' > /etc/apt/sources.list.d/jenkins.list
            apt update
            apt install -y jenkins
            ;;
        postgres)
            apt install -y postgresql
            ;;
    esac

restore: |
    snap remove --purge test-snapd-sh
    
    # Remove the package we installed above.
    case "$SPECIAL_USER_NAME" in
        jenkins)
            apt autoremove --purge -y jenkins default-jre-headless
            rm -f /etc/apt/sources.list.d/jenkins.list
            apt-get update
            # TODO: remove the apt key added above, but how?
            ;;
        postgres)
            apt autoremove --purge -y postgresql
            ;;
    esac

execute: |
    echo "Check the home for the user $SPECIAL_USER_NAME is correct"
    #shellcheck disable=SC2016
    su -c sh -c 'echo $HOME' "$SPECIAL_USER_NAME" | MATCH "/var/lib/$SPECIAL_USER_NAME"

    echo "Check the user $SPECIAL_USER_NAME is able to run a classic snap"
    su -c 'snap run test-snapd-classic-confinement.sh -c /bin/true' "$SPECIAL_USER_NAME"
