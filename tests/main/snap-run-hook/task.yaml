summary: Check that `snap run` can actually run hooks

environment:
    # Ensure that running purely from the deb (without re-exec) works
    # correctly
    SNAP_REEXEC/reexec0: 0
    SNAP_REEXEC/reexec1: 1

prepare: |
    echo "Build test hooks package"
    snapbuild $TESTSLIB/snaps/basic-hooks .
    snap install --dangerous basic-hooks_1.0_all.snap

restore: |
    rm basic-hooks_1.0_all.snap

restore: |
    rm basic-hooks_1.0_all.snap

execute: |
    # Note that `snap run` doesn't exit non-zero if the hook is missing, so we
    # check the output instead.

    echo "Test that snap run can call valid hooks"

    if ! output="$(snap run --hook=configure basic-hooks)"; then
        echo "Failed to run configure hook"
        exit 1
    fi

    expected_output="configure hook"
    if [ "$output" != "$expected_output" ]; then
        echo "Expected configure output to be '$expected_output', but it was '$output'"
        exit 1
    fi

    echo "Test that snap run cannot call invalid hooks"

    if output="$(snap run --hook=invalid-hook basic-hooks)"; then
        echo "Expected snap run to fail upon missing hook, but it was '$output'"
        exit 1
    fi

    expected_output=""
    if [ "$output" != "$expected_output" ]; then
        echo "Expected invalid-hook output to be '$expected_output', but it was '$output'"
        exit 1
    fi
