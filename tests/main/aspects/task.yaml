summary: Check the aspects API

# ubuntu-14.04-64's curl doesn't support --unix-socket
systems: [-ubuntu-14.04-*]

prepare: |
  snap install test-snapd-curl --edge --devmode
  snap alias test-snapd-curl.curl curl
  snap install --edge jq

execute: |
  calc_expected_change() {
    local LAST_CHG
    LAST_CHG=$(snap changes | tail -n 2 | awk '{print $1}')
    EXPECTED_CHG="$((LAST_CHG + 1))"
  }

  # write a value
  calc_expected_change
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects/system/network/wifi-setup -X PUT -d '{"ssid": "canonical"}' > response.txt
  jq -r '."status-code"' < response.txt | MATCH 202
  jq -r '."change"' < response.txt | MATCH "$EXPECTED_CHG"

  # read the same value
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects/system/network/wifi-setup?fields=ssid -X GET > response.txt
  jq -r '."status-code"' < response.txt | MATCH 200
  jq -r '.result' < response.txt | MATCH "canonical"

  # delete it
  calc_expected_change
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects/system/network/wifi-setup -X PUT -d '{"ssid": null}' > response.txt
  jq -r '."status-code"' < response.txt | MATCH 202
  jq -r '."change"' < response.txt | MATCH "$EXPECTED_CHG"

  # check it was deleted
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects/system/network/wifi-setup?fields=ssid -X GET > response.txt
  jq -r '."status-code"' < response.txt | MATCH 404
  jq -r '.result.message' < response.txt | MATCH 'no fields were found'

  # write values using a placeholder access
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects/system/network/wifi-setup -X PUT -d '{"private.my-company": "my-config"}' > response.txt
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects/system/network/wifi-setup -X PUT -d '{"private.your-company": "your-config"}' > response.txt

  # check first value
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects/system/network/wifi-setup?fields=private.my-company -X GET > response.txt
  jq -r '."status-code"' < response.txt | MATCH 200
  jq -r '.result' < response.txt | MATCH "my-config"

  # delete it
  calc_expected_change
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects/system/network/wifi-setup -X PUT -d '{"private.my-company": null}' > response.txt
  jq -r '."status-code"' < response.txt | MATCH 202
  jq -r '."change"' < response.txt | MATCH "$EXPECTED_CHG"

  # check it was deleted
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects/system/network/wifi-setup?fields=private.my-company -X GET > response.txt
  jq -r '."status-code"' < response.txt | MATCH 404
  jq -r '.result.message' < response.txt | MATCH 'no fields were found'

  # check second value remains
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects/system/network/wifi-setup?fields=private.your-company -X GET > response.txt
  jq -r '."status-code"' < response.txt | MATCH 200
  jq -r '.result' < response.txt | MATCH "your-config"
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects/system/network/wifi-setup -X PUT -d '{"private.your-company": null}' > response.txt

  # write a list
  calc_expected_change
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects/system/network/wifi-setup -X PUT -d '{"ssids": ["one", 2]}' > response.txt
  jq -r '."status-code"' < response.txt | MATCH 202
  jq -r '."change"' < response.txt | MATCH "$EXPECTED_CHG"

  # read the same value
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects/system/network/wifi-setup?fields=ssids -X GET > response.txt
  jq -r '."status-code"' < response.txt | MATCH 200
  jq -r '.result' < response.txt | MATCH '["one", 2]'

  # check read-only access control works
  calc_expected_change
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects/system/network/wifi-setup -X PUT -d '{"status": "foo"}' > response.txt
  jq -r '."status-code"' < response.txt | MATCH 403
  jq -r '.result.message' < response.txt | MATCH 'cannot write field "status": only supports read access'

  # check write-only access control works
  calc_expected_change
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects/system/network/wifi-setup -X PUT -d '{"password": "foo"}' > response.txt
  jq -r '."status-code"' < response.txt | MATCH 202
  jq -r '."change"' < response.txt | MATCH "$EXPECTED_CHG"

  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects/system/network/wifi-setup?fields=password -X GET > response.txt
  jq -r '."status-code"' < response.txt | MATCH 403
  jq -r '.result.message' < response.txt | MATCH 'cannot read field "password": only supports write access'
