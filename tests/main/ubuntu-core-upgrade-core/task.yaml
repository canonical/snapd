summary: Ensure that a ubuntu-core refresh works

systems: [ubuntu-core-16-64]

execute: |
    if [ "$SPREAD_REBOOT" = 0 ]; then
        snap list|grep ubuntu-core|tr -s " "|cut -f3 -d' ' > firstBoot 
        echo "Ensure we are with the right sideloaded core"
        snap list |grep "ubuntu-core.*$(cat firstBoot)"
        grep "snap_core=ubuntu-core_$(cat firstBoot).snap" /proc/cmdline

        echo "Install a new ubuntu-core"
        snap install --dangerous /var/lib/snapd/snaps/ubuntu-core_$(cat firstBoot).snap
        snap list|grep ubuntu-core|tr -s " "|cut -f3 -d' ' > nextBoot 
        echo "Ensure we have next installed now"
        snap list |grep "ubuntu-core.*$(nextBoot)"
        if cmp firstBoot nextBoot; then
            echo "Current and next boot version are identical"
            cat firstBoot
            cat nextBoot
            exit 1
        fi

        echo "Ensure the bootloader is correct before reboot"
        grub-editenv list | grep "snap_core=ubuntu-core_$(cat firstBoot).snap"
        grub-editenv list | grep "snap_try_core=ubuntu-core_$(cat nextBoot).snap"
        grub-editenv list | grep 'snap_mode=try'

        echo "Ensure the device is scheduled for auto-reboot"
        output=$(dbus-send --print-reply \
            --type=method_call \
            --system \
            --dest=org.freedesktop.login1 \
            /org/freedesktop/login1 \
            org.freedesktop.DBus.Properties.Get \
            string:org.freedesktop.login1.Manager string:ScheduledShutdown)
        if ! echo $output|grep 'string "reboot"'; then
            echo "Failed to detect scheduled reboot in logind output:"
            echo "$output"
            exit 1
        fi
        REBOOT
    fi

    if [ "$SPREAD_REBOOT" = 1 ]; then
        echo "Waiting for boot-ok to finish"
        while ! systemctl status snapd.boot-ok|grep SUCCESS; do
            echo "Show debug info"
            systemctl status snapd.boot-ok || true
            sleep 1
        done

        echo "Useful debug info"
        grub-editenv list
        cat /proc/cmdline

        echo "Ensure we booted from the newly installed core snap"
        grep "snap_core=ubuntu-core_$(cat nextBoot).snap" /proc/cmdline
        echo "Ensure the bootloader is correct after reboot"
        grub-editenv list | grep "snap_core=ubuntu-core_$(cat nextBoot).snap"
        grub-editenv list | grep '^snap_try_core=$'
        grub-editenv list | grep '^snap_mode=$'

        echo "Ensure the snap list contains our new ubuntu-core snap"
        snap list |grep "ubuntu-core.*$(cat nextBoot)"
    fi
