summary: Ensure that the security rules related to device cgroups work.

# We don't run the native kernel on these distributions yet so we can't
# load kernel modules coming from distribution packages yet.
systems: [-fedora-*, -opensuse-*]

environment:
    DEVICE_NAME/kmsg: kmsg
    UDEVADM_PATH/kmsg: /sys/devices/virtual/mem/kmsg
    DEVICE_ID/kmsg: "c 1:11 rwm"
    OTHER_DEVICE_NAME/kmsg: uinput
    OTHER_UDEVADM_PATH/kmsg: /sys/devices/virtual/misc/uinput
    OTHER_DEVICE_ID/kmsg: "c 10:223 rwm"

    DEVICE_NAME/uinput: uinput
    UDEVADM_PATH/uinput: /sys/devices/virtual/misc/uinput
    DEVICE_ID/uinput: "c 10:223 rwm"
    OTHER_DEVICE_NAME/uinput: kmsg
    OTHER_UDEVADM_PATH/uinput: /sys/devices/virtual/mem/kmsg
    OTHER_DEVICE_ID/uinput: "c 1:11 rwm"

prepare: |
    if [ ! -e /sys/devices/virtual/misc/uinput ]; then
        if ! modprobe uinput; then
            echo "no uinput support, cannot run test"
            exit 0
        fi
    fi
    # create nvidia devices if they don't exist
    if [ ! -e /dev/nvidia0 ]; then
        mknod /dev/nvidia0 c 195 0
        touch /dev/nvidia0.spread
    fi
    if [ ! -e /dev/nvidiactl ]; then
        mknod /dev/nvidiactl c 195 255
        touch /dev/nvidiactl.spread
    fi
    if [ ! -e /dev/nvidia-uvm ]; then
        mknod /dev/nvidia-uvm c 247 0
        touch /dev/nvidia-uvm.spread
    fi
    # move aside an existing nvidia device
    if [ -e /dev/nvidia254 ]; then
        mv /dev/nvidia254 /dev/nvidia254.spread
    fi
    # create uhid device if it doesn't exist
    if [ ! -e /dev/uhid ]; then
        mknod /dev/uhid c 10 239
        touch /dev/uhid.spread
    fi

restore: |
    if [ -e /dev/nvidia0.spread ]; then
        rm -f /dev/nvidia0 /dev/nvidia0.spread
    fi
    if [ -e /dev/nvidiactl.spread ]; then
        rm -f /dev/nvidiactl /dev/nvidiactl.spread
    fi
    if [ -e /dev/nvidia-uvm.spread ]; then
        rm -f /dev/nvidia-uvm /dev/nvidia-uvm.spread
    fi
    if [ -e /dev/nvidia254.spread ]; then
        mv /dev/nvidia254.spread /dev/nvidia254
    fi
    if [ -e /dev/uhid.spread ]; then
        rm -f /dev/uhid /dev/uhid.spread
    fi
    rm -f /etc/udev/rules.d/70-snap.test-snapd-sh.rules
    udevadm control --reload-rules
    udevadm trigger

execute: |
    # some systems (like s390x) do not have support for this
    if [ ! -e /sys/devices/virtual/misc/uinput ]; then
        echo "no uinput support, cannot run test"
        exit 0
    fi

    echo "Given a snap is installed"
    "$TESTSTOOLS"/snaps-state install-local test-snapd-sh

    echo "Then the device is not assigned to that snap"
    udevadm info "$UDEVADM_PATH" | not MATCH "E: TAGS=.*snap_test-snapd-sh_sh"

    echo "And the device is not shown in the snap device list"
    # FIXME: this is, apparently, a layered can of worms. Zyga says he needs to fix it.
    if [ -e /sys/fs/cgroup/devices/snap.test-snapd-sh.sh/devices.list ]; then
        not MATCH "$DEVICE_ID" < /sys/fs/cgroup/devices/snap.test-snapd-sh.sh/devices.list
    fi

    echo "When a udev rule assigning the device to the snap is added"
    content="KERNEL==\"$DEVICE_NAME\", TAG+=\"snap_test-snapd-sh_sh\""
    echo "$content" > /etc/udev/rules.d/70-snap.test-snapd-sh.rules
    udevadm control --reload-rules
    udevadm settle
    udevadm trigger
    udevadm settle

    echo "Then the device is shown as assigned to the snap"
    udevadm info "$UDEVADM_PATH" | MATCH "E: TAGS=.*snap_test-snapd-sh_sh"

    echo "And other devices are not shown as assigned to the snap"
    udevadm info "$OTHER_UDEVADM_PATH" | not MATCH "E: TAGS=.*snap_test-snapd-sh_sh"

    echo "When a snap command is called"
    test-snapd-sh.sh -c 'true'

    echo "Then the device is shown in the snap device list"
    MATCH "$DEVICE_ID" < /sys/fs/cgroup/devices/snap.test-snapd-sh.sh/devices.list

    echo "And other devices are not shown in the snap device list"
    not MATCH "$OTHER_DEVICE_ID" < /sys/fs/cgroup/devices/snap.test-snapd-sh.sh/devices.list

    echo "But existing nvidia devices are in the snap's device cgroup"
    MATCH "c 195:0 rwm" < /sys/fs/cgroup/devices/snap.test-snapd-sh.sh/devices.list
    MATCH "c 195:255 rwm" < /sys/fs/cgroup/devices/snap.test-snapd-sh.sh/devices.list
    MATCH "c 247:0 rwm" < /sys/fs/cgroup/devices/snap.test-snapd-sh.sh/devices.list

    echo "But nonexisting nvidia devices are not"
    not MATCH "c 195:254 rwm" < /sys/fs/cgroup/devices/snap.test-snapd-sh.sh/devices.list

    echo "But the existing uhid device is in the snap's device cgroup"
    MATCH "c 10:239 rwm" < /sys/fs/cgroup/devices/snap.test-snapd-sh.sh/devices.list

    # TODO: check device unassociated after removing the udev file and rebooting
