summary: Test the mkimage-uc22 tool

details: |
  This test creates a classic image that looks like what the installer
  would create and we boot into it.

systems: [ubuntu-22.04-64]

kill-timeout: 15m

environment:
    USE_SNAPD_DEB/with_snapddeb: yes
    USE_SNAPD_DEB/without_snapddeb: no

prepare: |
  # FIXME: The gadget snap for classic is not yet available. So for
  #        the moment, the test modifies the gadget for Ubuntu Core.
  #        This should be removed when the classic snap is available.
  VERSION="$(tests.nested show version)"
  snap download --basename=pc --channel="$VERSION/edge" pc
  unsquashfs -d pc-gadget pc.snap
  # gadget.yaml needs a different structure than for Ubuntu Core
  python3 "$TESTSLIB"/tweak-gadget.py pc-gadget/meta/gadget.yaml
  snap pack --filename=pc_x1.snap pc-gadget

  # create an image that looks like a classic image
  # Note that "mk-image" is left as a script so that it can also be
  # run outside of spread easily for quick interactive testing
  SNAP_DEB_PARAM=""
  if [ "$USE_SNAPD_DEB" = yes ]; then
      SNAPD_DEB="$(find "$PROJECT_PATH"/.. -maxdepth 1 -name "snapd_*.deb" -printf "%f\n")"
      SNAP_DEB_PARAM="--snapd-deb $PROJECT_PATH/../$SNAPD_DEB"
  fi
  # shellcheck disable=SC2086
  "$TESTSTOOLS"/mkimage-uc22 --base-dir "$PWD" --snap pc_x1.snap $SNAP_DEB_PARAM "$TESTSLIB"/assertions/classic-model-22.assert

  tests.pkgs install qemu qemu-utils genisoimage sshpass qemu-kvm cloud-image-utils ovmf kpartx cpu-checker

  MACHINE_PARAM="-machine ubuntu"
  if kvm-ok; then
    MACHINE_PARAM="-machine ubuntu,accel=kvm"
  fi

  tests.systemd create-and-start-unit "nested-vm" "qemu-system-x86_64 -m 1500 -nographic $MACHINE_PARAM -snapshot -netdev user,id=net.0,hostfwd=tcp::10022-:22 -device rtl8139,netdev=net.0 -bios /usr/share/OVMF/OVMF_CODE.fd -drive file=$PWD/boot.img,if=virtio -serial file:$PWD/serial.log"

  # run built image
  remote.setup config --host localhost --port 10022 --user user1 --pass ubuntu
  remote.wait-for ssh

  # wait until the image boots and seeds  
  remote.exec "sudo snap wait system seed.loaded"

restore: |
  tests.systemd stop-unit --remove "nested-vm"

execute: |
  # Check the system loaded properly
  remote.exec 'cat /etc/os-release | grep -Eq VERSION_ID=\"22.04\"'
  remote.exec "snap list pc-kernel"
  remote.exec "snap list pc"
  remote.exec "snap list core22"
  remote.exec "snap list snapd"

  # no reboot required
  not remote.exec test -f /run/reboot-required
