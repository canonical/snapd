summary: Check that revert of a snap in devmode restores devmode

# slow in autopkgtest (>1m)
backends: [-autopkgtest]

# ubuntu-14.04: systemd-run not supported
systems: [-ubuntu-14.04*]

environment:
    STORE_TYPE/fake: fake
    STORE_TYPE/remote: ${REMOTE_STORE}
    BLOB_DIR: $(pwd)/fake-store-blobdir

prepare: |
    if [ "$STORE_TYPE" = "fake" ]; then
        if os.query is-core; then
            exit
        fi
        if [ "$TRUST_TEST_KEYS" = "false" ]; then
            echo "This test needs test keys to be trusted"
            exit
        fi
    fi

    echo "Given a snap is installed"
    snap install --devmode test-snapd-tools

    if [ "$STORE_TYPE" = "fake" ]; then
        #shellcheck source=tests/lib/store.sh
        . "$TESTSLIB"/store.sh
        setup_fake_store "$BLOB_DIR"

        echo "And a new version of that snap put in the controlled store"
        #shellcheck source=tests/lib/store.sh
        . "$TESTSLIB"/store.sh
        init_fake_refreshes "$BLOB_DIR" test-snapd-tools
    fi

restore: |
    if [ "$STORE_TYPE" = "fake" ]; then
        if os.query is-core; then
            exit
        fi
        if [ "$TRUST_TEST_KEYS" = "false" ]; then
            echo "This test needs test keys to be trusted"
            exit
        fi
        #shellcheck source=tests/lib/store.sh
        . "$TESTSLIB"/store.sh
        teardown_fake_store "$BLOB_DIR"
    fi

execute: |
    if [ "$STORE_TYPE" = "fake" ]; then
        if os.query is-core; then
            exit
        fi
        if [ "$TRUST_TEST_KEYS" = "false" ]; then
            echo "This test needs test keys to be trusted"
            exit
        fi
    fi

    echo "When a refresh is made"
    snap refresh --devmode --edge test-snapd-tools

    echo "Then the new version is installed"
    snap list | MATCH 'test-snapd-tools +[0-9]+\.[0-9]+\+fake1'
    SNAP_MOUNT_DIR="$(os.paths snap-mount-dir)"
    LATEST=$(readlink "$SNAP_MOUNT_DIR"/test-snapd-tools/current)

    echo "When a revert is made without --devmode flag"
    snap revert test-snapd-tools

    echo "Then the old version is active"
    snap list | MATCH 'test-snapd-tools +[0-9]+\.[0-9]+ '

    echo "And the snap runs in devmode"
    snap list|MATCH 'test-snapd-tools .* devmode'

    echo "When the latest revision is installed again"
    snap remove --revision="$LATEST" test-snapd-tools
    snap refresh --edge test-snapd-tools

    if [ "$(snap debug confinement)" = strict ] ; then
        echo "And revert is made with --jailmode flag"
        snap revert --jailmode test-snapd-tools

        echo "Then snap now runs confined (in jailmode, bah)"
        snap list|MATCH 'test-snapd-tools .* jailmode'
    fi
