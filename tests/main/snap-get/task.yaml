summary: Check that `snap get` works as expected

prepare: |
    echo "Build basic test package (without hooks)"
    snapbuild $TESTSLIB/snaps/basic .
    snap install --dangerous basic_1.0_all.snap

    echo "Build package with hook to run snapctl set"
    snapbuild $TESTSLIB/snaps/snapctl-hooks .
    snap install --dangerous snapctl-hooks_1.0_all.snap

restore: |
    rm basic_1.0_all.snap
    rm snapctl-hooks_1.0_all.snap

execute: |
    echo "Test that snap get fails on a snap without any hooks"
    if output=$(snap get basic foo); then
        echo "snap get unexpectedly worked with output '$output'"
        exit 1
    fi

    echo "Test that values set via snapctl can be obtained via snap get"
    if ! snap set snapctl-hooks command=test-snapctl-set-foo; then
        echo "snap set unexpectedly failed"
        exit 1
    fi
    if ! output=$(snap get snapctl-hooks command); then
        echo "snap get unexpectedly failed"
        exit 1
    fi
    expected="test-snapctl-set-foo"
    if [ "$output" != "$expected" ]; then
        echo "Expected 'command' to be '$expected', but it was '$output'"
        exit 1
    fi
    if ! output=$(snap get snapctl-hooks foo); then
        echo "snap get unexpectedly failed"
        exit 1
    fi
    expected="bar"
    if [ "$output" != "$expected" ]; then
        echo "Expected 'foo' to be '$expected', but it was '$output'"
        exit 1
    fi

    echo "Test that keys of json documents can be obtained via snap get"
    if ! snap set snapctl-hooks command=test-snapctl-set-bar-doc; then
        echo "snap set unexpectedly failed"
        exit 1
    fi
    snap get snapctl-hooks bar 2>&1 | MATCH -z "WARNING"
    snap get snapctl-hooks -l bar 2>&1 | MATCH -z "^Key.*Value.*bar.a.*{\.\.\.}.*bar.b.*3"
    snap get snapctl-hooks -d bar | MATCH -z "^{.*\"bar\": {.*\"a\": {.*\"aa\": 1,.*\"ab\": 2.*},.*\"b\": 3.*}.*}"

    snap get snapctl-hooks bar.a.aa | MATCH "^1$"
    snap get snapctl-hooks bar.a.ab | MATCH "^2$"

    echo "Test that root document can be obtained via snap get"
    snap get snapctl-hooks -l 2>&1 | MATCH -z "^Key.*Value.*bar.*{\.\.\.}.*command.*test-snapctl-set-bar-doc.*foo.*bar"
    snap get snapctl-hooks -d | MATCH -z "^{.*\"bar\": {.*\"a\": {.*\"aa\": 1,.*\"ab\": 2.*},.*\"b\": 3.*}.*,.*\"command\": \"test-snapctl-set-bar-doc\",.*\"foo\": \"bar\".*}"

    echo "Test that config values are not available once snap is removed"
    snap remove snapctl-hooks
    if output=$(snap get snapctl-hooks foo); then
        echo "Expected snap get to fail, but got '$output'"
        exit 1
    fi
