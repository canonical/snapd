summary: Check that base snaps work
systems: [-opensuse-*]

execute: |
    . $TESTSLIB/snaps.sh

    echo "Ensure a snap that requires an unavailable base snap can not be installed"
    cp -a $TESTSLIB/snaps/test-snapd-requires-base .
    sed -i 's/^base: test-snapd-base/base: no-such-base/' test-snapd-requires-base/meta/snap.yaml
    snap pack test-snapd-requires-base
    if snap install --dangerous ./test-snapd-requires-base_1.0_all.snap; then
        echo "ERROR: test-snapd-requires-base should not be installable without test-snapd-base"
        exit 1
    fi
    rm -rf test-snapd-requires-base test-snapd-requires-base_1.0_all.snap

    echo "Ensure a base snap can be installed"
    install_local test-snapd-base
    snap list | MATCH test-snapd-base
    snap remove test-snapd-base

    echo "Ensure new installs of a snap pulls the required base in"
    install_local test-snapd-requires-base
    snap list | MATCH test-snapd-base

    echo "------------------------------------------------------------------"

    echo "Cleanup for the next test"
    snap remove test-snapd-requires-base test-snapd-base

    echo "First install snap without base"
    cp -a $TESTSLIB/snaps/test-snapd-requires-base .
    sed -i '/^base: test-snapd-base/d' test-snapd-requires-base/meta/snap.yaml
    snap pack test-snapd-requires-base
    snap install --dangerous ./test-snapd-requires-base_1.0_all.snap
    if snap list|grep test-snapd-base; then
        echo "broken test: test-snapd-base should not be pulled in here"
        exit 1
    fi
    echo "Then refresh to the snap in the store which requires a base"
    snap refresh --edge --amend test-snapd-requires-base
    echo "And ensure the base got pulled in"
    snap list | grep test-snapd-base

    echo "------------------------------------------------------------------"
    echo "Ensure the bare base works"
    if [ "$(uname -m)" != "x86_64" ]; then
        echo "This test can only run on amd64 right now because snapcraft "
        echo "cannot current generate binaries without wrapper scripts."
        echo "Check: https://github.com/snapcore/snapcraft/pull/1420"
        echo "and: https://code.launchpad.net/~snappy-dev/snappy-hub/test-snapd-busybox-static"
        exit 0
    fi

    snap install --edge --devmode test-snapd-busybox-static
    echo "Ensure we can run a statically linked binary from an empty base"
    test-snapd-busybox-static.busybox-static echo hello | MATCH hello

    echo "Ensure the test-snapd-base-bare that test-snapd-busybox-static uses got pulled in"
    snap list | grep test-snapd-base-bare

    if test-snapd-busybox-static.busybox-static ls /bin/dd; then
        echo "bare should be empty but it is not:"
        test-snapd-busybox-static.busybox-static ls /bin
        exit 1
    fi
