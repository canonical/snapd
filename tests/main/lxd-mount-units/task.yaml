summary: Test mount units generated for snaps inside lxd container are correct.

details: |
    Test that mount units generated by snapd-generator inside lxd container
    are correct for snapfuse.

# only 20.04+, we want lxd images that come with snaps preinstalled.
systems: [ubuntu-2*]

restore: |
    lxd.lxc stop ubuntu --force || true
    lxd.lxc delete ubuntu || true
    snap remove --purge lxd

execute: |
    echo "Install lxd"
    "$TESTSTOOLS"/lxd-state prepare-snap

    # Define the core snap for the current system
    core_snap=core20
    if os.query is-ubuntu-gt 22.04; then
        core_snap=core22
    fi

    REMOTE=ubuntu
    # There isn't an official image for noble yet, let's use the daily one
    if os.query is-ubuntu 24.04; then
        REMOTE=ubuntu-daily
    fi
    VERSION_ID="$(. /etc/os-release && echo "$VERSION_ID" )"
    lxd.lxc launch --quiet "$REMOTE:$VERSION_ID" ubuntu

    echo "Setting up proxy *inside* the container"
    if [ -n "${http_proxy:-}" ]; then
        lxd.lxc exec ubuntu -- sh -c "echo http_proxy=$http_proxy >> /etc/environment"
    fi
    if [ -n "${https_proxy:-}" ]; then
        lxd.lxc exec ubuntu -- sh -c "echo https_proxy=$https_proxy >> /etc/environment"
    fi
    # wait for the container to be fully up
    # the retry is needed because of the error "Failed to connect to bus: No such file or directory"
    retry --wait 1 -n 10 sh -c 'lxd.lxc exec ubuntu -- systemctl --wait is-system-running | grep -Eq "(running|degraded)"'

    lxd.lxc file push --quiet "$GOHOME"/snapd_*.deb "ubuntu/root/"
    DEB=$(basename "$GOHOME"/snapd_*.deb)
    
    lxd.lxc exec ubuntu -- apt update
    # As for ubuntu noble it is not using the official image, snapd is not installed by default
    # This should be removed once the official image is released
    if os.query is-ubuntu 24.04; then
        lxd.lxc exec ubuntu -- apt install -y snapd
        lxd.lxc exec ubuntu -- snap install "$core_snap"
    fi

    lxd.lxc exec ubuntu -- apt install -y /root/"$DEB"
    lxd.lxc restart ubuntu

    echo "Precondition check that $core_snap snap is mounted correctly"
    # Make sure $core_snap is mounted and readable for a regular user
    retry -n 5 --wait 2 sh -c "lxd.lxc exec ubuntu -- sudo --user ubuntu --login ls /snap/${core_snap}/current"
    retry -n 5 --wait 2 sh -c "lxd.lxc exec ubuntu -- sudo --user ubuntu --login mount | grep $core_snap | grep allow_other"

    echo "Precondition check that mount overrides were generated inside the container"
    lxd.lxc exec ubuntu -- find /var/run/systemd/generator/ -name container.conf | MATCH "/var/run/systemd/generator/snap-${core_snap}.*mount.d/container.conf"

    # On older LXD, we work around / with private propagation by
    # creating a shared /snap mount point with snapd-generator (LP#1668659).
    # The unit does not exist in newer LXD images where root is shared.
    lxd.lxc exec ubuntu -- findmnt / -o PROPAGATION --noheadings | MATCH shared || lxd.lxc exec ubuntu -- test -f /var/run/systemd/generator/snap.mount

    echo "Check that snapfuse mount options of generated units match those generated by snapd"
    # the only way to get mount options used by snapd is to install a new snap
    retry -n 5 --wait 1 sh -c 'lxd.lxc exec ubuntu snap install hello-world'
    REFERENCE_MOUNT_OPTS=$(lxd.lxc exec ubuntu -- find /etc/systemd/system -maxdepth 1 -name 'snap-hello*' -exec cat {} \; | grep Options)
    MOUNT_OPTS=$(lxd.lxc exec ubuntu -- find /var/run/systemd/generator -name 'container.conf' -exec cat {} \; | grep Options | tail -n1)
    if [ "$REFERENCE_MOUNT_OPTS" != "$MOUNT_OPTS" ]; then
        echo "Mount options for snapfuse written by snapd are different than those written by snapd-generator:"
        echo "Expected: $REFERENCE_MOUNT_OPTS"
        echo "Actual: $MOUNT_OPTS"
        exit 1
    fi
