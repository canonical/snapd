summary: Ensure that we can refresh/remove snaps in LXD
details: >
    There is a bug affecting snapd in environments when the root filesystem is
    not initially "rshared" (in the sense of mount --make-rshared). This test
    reproduces the issue inside LXD (the issue also affects Ubuntu 14.04
    without systemd running as init). The issue only happens after we invoke
    snap-confine at least once, otherwise it is hidden.
systems: [ubuntu-16*, ubuntu-core-*]
kill-timeout: 25m # lxd downloads can be quite slow
restore: |
    if  [ $(ls -1 "$GOHOME"/snapd_*.deb | wc -l || echo 0) -eq 0 ]; then
        exit
    fi
    lxd.lxc stop my-ubuntu
    lxd.lxc delete my-ubuntu
    rm -f mountinfo.*
debug: |
    journalctl -u snap.lxd.daemon.service # debug output from lxd
execute: |
    if  [[ $(ls -1 "$GOHOME"/snapd_*.deb | wc -l || echo 0) -eq 0 ]]; then
        echo "No run lxd test when there are not .deb files built"
        exit
    fi
    wait_for_lxd(){
        while ! printf "GET / HTTP/1.0\n\n" | nc -U /var/snap/lxd/common/lxd/unix.socket | MATCH "200 OK"; do sleep 1; done
    }
    echo "Install lxd"
    snap install lxd
    echo "Create a trivial container using the lxd snap"
    wait_for_lxd
    lxd init --auto
    lxd.lxc launch ubuntu:16.04 my-ubuntu
    echo "Ensure we can run things inside"
    lxd.lxc exec my-ubuntu echo hello | MATCH hello
    echo "Ensure we can get network"
    lxd.lxc network create testbr0
    lxd.lxc network attach testbr0 my-ubuntu eth0
    lxd.lxc exec my-ubuntu dhclient eth0
    echo "Install locally built snapd inside the container"
    lxd.lxc exec my-ubuntu -- apt autoremove --purge -y snapd ubuntu-core-launcher
    lxd.lxc exec my-ubuntu -- cat /proc/self/mountinfo > mountinfo.after-purge
    lxd.lxc exec my-ubuntu -- mkdir -p "$GOHOME"
    lxd.lxc file push "$GOHOME"/snapd_*.deb my-ubuntu/$GOPATH/
    lxd.lxc exec my-ubuntu -- dpkg -i "$GOHOME"/snapd_*.deb
    lxd.lxc exec my-ubuntu -- cat /proc/self/mountinfo > mountinfo.after-install
    # FIXME: workaround for missing squashfuse
    lxd.lxc exec my-ubuntu -- apt update
    lxd.lxc exec my-ubuntu -- apt install -y squashfuse
    echo "Download and side-load a test snap three times"
    # Revision cannot be globbed remotely so download and glob here.
    snap download test-snapd-tools
    lxd.lxc exec my-ubuntu -- snap download test-snapd-tools
    snap_file=$(ls test-snapd-tools_*.snap)
    echo "We can refresh the snap as many times for now..."
    for i in $(seq 5); do
        lxd.lxc exec my-ubuntu -- snap install --dangerous "$snap_file"
    done
    echo "We can also remove it successfully"
    lxd.lxc exec my-ubuntu -- snap remove test-snapd-tools
    echo "Running an installed snap will fix the sharing of the mount point"
    lxd.lxc exec my-ubuntu -- snap install --dangerous "$snap_file"
    lxd.lxc exec my-ubuntu -- snap run test-snapd-tools.success
    echo "But not in a way that breaks removal"
    lxd.lxc exec my-ubuntu -- snap remove test-snapd-tools
