summary: The document portal is mounted by snaps using the desktop interface

details: |
    The document portal is a component of xdg-desktop-portal that
    provides a way to share files with a confined application in a
    controlled fashion.  To provide proper security, a subtree of the
    portal needs to be mounted over $XDG_RUNTIME_DIR/doc inside the
    sandbox.

# Ubuntu 14.04 has special version of systemd which doesn't have StartTransientUnit API.
systems: [-ubuntu-core-*,-ubuntu-14.04*]

prepare: |
    "$TESTSTOOLS"/snaps-state install-local test-snapd-desktop
    snap disconnect test-snapd-desktop:desktop

    tests.session -u test prepare
    tests.cleanup defer tests.session -u test restore

restore: |
    rm -f /tmp/check-doc-portal.sh

execute: |
    cat << EOF > /tmp/check-doc-portal.sh
    set -eu
    mkdir -p /run/user/12345/doc/by-app/snap.test-snapd-desktop
    touch /run/user/12345/doc/is-unconfined
    touch /run/user/12345/doc/by-app/snap.test-snapd-desktop/is-confined
    test-snapd-desktop.check-dirs /run/user/12345/doc
    EOF
    chown test:test /tmp/check-doc-portal.sh

    if [ "$(snap debug confinement)" = strict ]; then
      echo "Without desktop interface connected"
      if tests.session -u test exec sh /tmp/check-doc-portal.sh 2> check.error; then
        cat check.error >&2
        echo "Expected permission error when checking document portal dir"
        exit 1
      fi
      MATCH "Permission denied" < check.error
    fi

    snapd.tool exec snap-discard-ns test-snapd-desktop

    echo "With desktop connected, we see confined version"
    snap connect test-snapd-desktop:desktop
    tests.session -u test exec sh /tmp/check-doc-portal.sh | MATCH is-confined

    snapd.tool exec snap-discard-ns test-snapd-desktop

    echo "It is not an error if the document portal is missing"
    rm -rf /run/user/12345/*
    if tests.session -u test exec test-snapd-desktop.check-dirs /run/user/12345/doc 2> check.error; then
      cat check.error >&2
      echo "Expected not found error when checking document portal dir"
      exit 1
    fi
    MATCH "No such file or directory" < check.error
