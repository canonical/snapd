summary: Check that `snapctl` can be run from the snap

environment:
    SNAP/nobase: snapctl-from-snap
    SNAP/wcore18: snapctl-from-snap-core18

prepare: |
    snap install --devmode jq
    echo "Build basic test package"
    snap pack snapctl-from-snap

execute: |
    check_single_cookie() {
        cnt=$(jq -r '.data["snap-cookies"]' /var/lib/snapd/state.json | grep -c "$1" || true)
        if [ "$cnt" -ne 1 ]; then
            echo "Expected single cookie for snap $1, found $cnt"
            exit 1
        fi
    }

    check_cookie() {
        COOKIE_FILE=/var/lib/snapd/cookie/snap.$1
        if ! test -f "$COOKIE_FILE" ; then
            echo "Cookie file $COOKIE_FILE is missing"
            exit 1
        fi
        if [ "$(stat -c %a "$COOKIE_FILE")" != "600" ]; then
            echo "Incorrect permissions of file $COOKIE_FILE"
            exit 1
        fi
        test "$(stat -c %s "$COOKIE_FILE")" -ge 44

        check_single_cookie "$1"
    }

    # FIXME: remove once core18 stable has /usr/bin/snapctl symlink
    # shellcheck disable=SC2153
    if [ "$SNAP" = "snapctl-from-snap-core18" ]; then
        snap install --edge core18
    fi

    "$TESTSTOOLS"/snaps-state install-local "$SNAP"

    echo "Verify that cookie file exists and has proper permissions and size"
    check_cookie "$SNAP"

    echo "Verify that a single cookie remains on restart"
    systemctl stop snapd.{service,socket}
    check_cookie "$SNAP"
    systemctl start snapd.{service,socket}

    COOKIE_FILE=/var/lib/snapd/cookie/snap."$SNAP"

    echo "Simulate upgrade from old snapd with no cookie support"
    systemctl stop snapd.{service,socket}
    rm -f "$COOKIE_FILE"
    jq -c 'del(.data["snap-cookies"])' /var/lib/snapd/state.json > /var/lib/snapd/state.json.new
    mv /var/lib/snapd/state.json.new /var/lib/snapd/state.json
    systemctl start snapd.{service,socket}

    echo "Verify that cookie file was re-created"
    check_cookie "$SNAP"

    echo "Verify that snapctl get can be executed by the app and shows the value set by configure hook"
    SNAP_MOUNT_DIR="$(os.paths snap-mount-dir)"
    "$SNAP_MOUNT_DIR/bin/$SNAP".snapctl-get foo | MATCH bar

    echo "Verify that snapctl set can modify configuration values"
    "$SNAP_MOUNT_DIR/bin/$SNAP".snapctl-set foo=123
    "$SNAP_MOUNT_DIR/bin/$SNAP".snapctl-get foo | MATCH 123

    echo "Verify configuration value with snap get"
    snap get "$SNAP" foo | MATCH 123

    echo "Given two revisions of a snap have been installed"
    "$TESTSTOOLS"/snaps-state install-local "$SNAP"
    check_cookie "$SNAP"

    echo "And a single revision gets removed"
    snap remove "$SNAP" --revision=x1

    echo "Verify that cookie file is still present"
    check_cookie "$SNAP"

    echo "Verify that cookie is not removed when snap is disabled"
    snap disable "$SNAP"
    check_cookie "$SNAP"
    snap enable "$SNAP"
    check_cookie "$SNAP"

    echo "Verify that snap cookie is removed on snap removal"
    snap remove --purge "$SNAP"
    if test -f "$COOKIE_FILE" ; then
        echo "Cookie file $COOKIE_FILE still exists"
        exit 1
    fi
