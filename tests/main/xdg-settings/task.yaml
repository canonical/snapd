summary: Ensure snap userd allows settings via xdg-settings

# Not supposed to work on Ubuntu Core systems as we don't have
# a user session environment there
systems: [-ubuntu-core-*]

environment:
    DISPLAY: :0

restore: |
    #shellcheck source=tests/lib/dirs.sh
    . "$TESTSLIB/dirs.sh"
    #shellcheck source=tests/lib/pkgdb.sh
    . "$TESTSLIB/pkgdb.sh"
    umount -f /usr/bin/xdg-settings || true
    umount -f /usr/bin/zenity || true
    rm -f stderr.log

execute: |
    #shellcheck source=tests/lib/pkgdb.sh
    . "$TESTSLIB/pkgdb.sh"
    #shellcheck source=tests/lib/dirs.sh
    . "$TESTSLIB/dirs.sh"
    #shellcheck source=tests/lib/snaps.sh
    . "$TESTSLIB/snaps.sh"
    #shellcheck source=tests/lib/systems.sh
    . "$TESTSLIB"/systems.sh

    install_local test-snapd-xdg-settings

    # setup dbus
    dbus-launch > dbus.env
    #shellcheck disable=SC2046
    export $(xargs < dbus.env)

    # wait for session to be ready
    ping_settings() {
        dbus-send --session                                        \
            --dest=io.snapcraft.Settings                           \
            --type=method_call                                     \
            --print-reply                                          \
            /                                                      \
            org.freedesktop.DBus.Peer.Ping
    }
    while ! ping_settings ; do
        sleep .5
    done

    # Create a small helper which will tell us if snap passes
    # the settings to the right handler
    
    cat << 'EOF' > /tmp/xdg-settings
    #!/bin/sh
    echo "$@" > /tmp/xdg-settings-output
    EOF

    chmod +x /tmp/xdg-settings
    touch /usr/bin/xdg-settings
    mount --bind /tmp/xdg-settings /usr/bin/xdg-settings


    ensure_xdg_settings_output() {
        rm -f /tmp/xdg-settings-output
        export DBUS_SESSION_BUS_ADDRESS=$DBUS_SESSION_BUS_ADDRESS

        # run xdg-settings from inside the snap
        test-snapd-xdg-settings.xdg-settings-wrapper "$@"

        if [[ $# -eq 3 ]]
        then
            # the dbus interface rewrites the final param to be <snap name>_<desktop file>
            test_output="$1 $2 test-snapd-xdg-settings_$3"
        elif [[ $# -eq 4 ]]
        then
            # the dbus interface rewrites the final param to be <snap name>_<desktop file>
            test_output="$1 $2 $3 test-snapd-xdg-settings_$4"
        else
            return
        fi

        # verify that the command was transmitted corrected via dbus
        test -e /tmp/xdg-settings-output
        test "$(cat /tmp/xdg-settings-output)" = "$test_output"
    }

    ensure_error_no_xdg_settings_output() {
        rm -f /tmp/xdg-settings-output
        export DBUS_SESSION_BUS_ADDRESS=$DBUS_SESSION_BUS_ADDRESS

        # run xdg-settings from inside the snap
        not test-snapd-xdg-settings.xdg-settings-wrapper "$@"

        # verify that the output file doesn't exist
        test ! -e /tmp/xdg-settings-output
    }


    # we are expecting the test to fail on a cgroup v2 system
    if is_cgroupv2 ; then
        ensure_error_no_xdg_settings_output "set" "default-web-browser" "smoke-test-cgroupv2.desktop" 2> stderr.log
        MATCH 'WARNING: cgroup v2 is not fully supported yet, proceeding with partial confinement' < stderr.log
        MATCH 'cannot find snap for connection: not supported' < stderr.log
        # don't run further tests
        exit 0
    fi


    # ensure zenity answers "yes"
    touch /usr/bin/zenity
    mount --bind /bin/true /usr/bin/zenity


    # Test valid actions
    ensure_xdg_settings_output "set" "default-web-browser" "browser.desktop"

    ensure_xdg_settings_output "set" "default-url-scheme-handler" "irc" "browser.desktop"


    # Test unknown action
    ensure_error_no_xdg_settings_output "unknown" 2> stderr.log
    MATCH 'unknown action unknown' < stderr.log


    # Ensure settings whitelist works
    ensure_error_no_xdg_settings_output "set" "random-settting" "something" 2> stderr.log
    MATCH 'cannot use setting "random-settting": not allowed' < stderr.log


    # Ensure settings value validation works
    ensure_error_no_xdg_settings_output "set" "default-web-browser" "in채lid" 2> stderr.log
    MATCH 'cannot set setting "default-web-browser" to value "in채lid": value not allowed' < stderr.log

    ensure_error_no_xdg_settings_output "set" "default-url-scheme-handler" "irc" "in채lid" 2> stderr.log
    MATCH 'cannot set setting "default-url-scheme-handler" subproperty "irc" to value "in채lid": value not allowed' < stderr.log


    # ensure zenity answers "no"
    umount /usr/bin/zenity
    mount --bind /bin/false /usr/bin/zenity

    ensure_error_no_xdg_settings_output "set" "default-web-browser" "browser.desktop"
