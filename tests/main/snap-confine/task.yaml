summary: Test that snap-confine errors in the right way

# the error message can only happen on classic systems
# our debian image does not have fully working apprmor
systems: [-ubuntu-core-*, -debian-*]

prepare: |
    echo "Install test snap"
    snap install test-snapd-tools

restore: |
    #shellcheck source=tests/lib/dirs.sh
    . "$TESTSLIB"/dirs.sh

    echo "Restore current symlink"
    mv $SNAP_MOUNT_DIR/core/current.renamed $SNAP_MOUNT_DIR/core/current ||  true

execute: |
    #shellcheck source=tests/lib/dirs.sh
    . "$TESTSLIB"/dirs.sh

    echo "Simulating broken current symlink for core"
    mv $SNAP_MOUNT_DIR/core/current $SNAP_MOUNT_DIR/core/current.renamed
    if test-snapd-tools.echo hello 2>snap-confine.stderr; then
        echo "test-snapd-tools.echo should fail to run, test broken"
    fi
    MATCH 'cannot locate the core or legacy core snap \(current symlink missing\?\):' < snap-confine.stderr
    mv $SNAP_MOUNT_DIR/core/current.renamed $SNAP_MOUNT_DIR/core/current

    echo "Test nvidia device fix"
    # For https://github.com/snapcore/snapd/pull/4042
    echo "Simulate nvidia device tags"
    mkdir -p /run/udev/tags/snap_test-snapd-tools_echo
    for f in c226:0 +module:nvidia +module:nvidia_modeset; do
        touch /run/udev/tags/snap_test-snapd-tools_echo/$f
    done
    test-snapd-tools.echo hello | MATCH hello
    echo "Non nvidia files are still there"
    test -f /run/udev/tags/snap_test-snapd-tools_echo/c226:0
    echo "But nvidia files are gone"
    ! test -f /run/udev/tags/snap_test-snapd-tools_echo/+module:nvidia
    ! test -f /run/udev/tags/snap_test-snapd-tools_echo/+module:nvidia_modeset

    echo "Ensure apparmor profile for snap-confine is parsable"
    for f in /etc/apparmor.d/usr.lib.snapd.snap-confine*; do
        if command -v apparmor_parser 2>/dev/null; then
            apparmor_parser -QTK "$f"
        fi
        if command -v aa-enforce 2>/dev/null; then
            aa-enforce "$f"
        fi
    done

