summary: Check that the document portal is activated when needed

details: |
    In order for xdg-document-portal to securely share files with a
    confined applications, it must be started prior to setting up the
    user mount namespace.  This is due to the daemon providing a FUSE
    file system that needs to be bind mounted in the sandbox.

    With that in mind, we don't want every snap invocation to try and
    start the document portal.  Only in the following cases:

        - a session bus is running
        - the snap plugs the "desktop" interface

    Furthermore, we don't want to print an error on systems where
    xdg-document-portal is not available.

# Disabled on Ubuntu Core because it doesn't provide the "desktop"
# slot, and Amazon Linux because it doesn't have the required Python 3
# packages to run the test.
systems:
    - -amazon-linux-2-*
    - -centos-*
    - -ubuntu-14.04-*
    - -ubuntu-core-*

prepare: |
    "$TESTSTOOLS"/snaps-state install-local test-snapd-desktop
    "$TESTSTOOLS"/snaps-state install-local test-snapd-sh
    rm -f /usr/share/dbus-1/services/fake-document-portal.service
    tests.session -u test prepare

    # The fake portal writes to current working directory so let's give it permission to.
    touch doc-portal.log
    touch report-error.txt
    chown test doc-portal.log
    chown test report-error.txt

restore: |
    rm -f /usr/share/dbus-1/services/fake-document-portal.service
    tests.session -u test restore

execute: |
    #shellcheck source=tests/lib/systems.sh
    . "$TESTSLIB"/systems.sh

    check_stderr() {
        test -n "$1"
        if [ -s "$1" ]; then
            echo "stderr contains some messages"
            cat "$1"
            exit 1
        fi
    }

    echo "No output on stderr when running with a session bus, when xdg-document-portal is not present."
    tests.session -u test exec test-snapd-desktop.check-dirs /home/test/snap/test-snapd-desktop/current 2>stderr.log
    check_stderr stderr.log

    echo "The absence of the document portal service was recorded"
    test -f /run/user/12345/.portals-unavailable

    echo "Make the fake document portal activatable"
    cat << EOF > /usr/share/dbus-1/services/fake-document-portal.service
    [D-BUS Service]
    Name=org.freedesktop.portal.Documents
    Exec=$(pwd)/fake-document-portal.py $(pwd)/doc-portal.log $(pwd)/report-error.txt
    EOF

    echo "No attempt is made to activate the document portal due to the previous failure"
    tests.session -u test exec test-snapd-desktop.check-dirs /home/test/snap/test-snapd-desktop/current
    NOMATCH "GetMountPoint called" < doc-portal.log

    echo "Remove the .portals-unavailable file to force a recheck"
    rm /run/user/12345/.portals-unavailable

    echo "No output on stderr when running with a session bus and xdg-document-portal is present."
    tests.session -u test exec test-snapd-desktop.check-dirs /home/test/snap/test-snapd-desktop/current 2>stderr.log
    MATCH "GetMountPoint called" < doc-portal.log
    check_stderr stderr.log

    echo "Putting fake document portal into failure mode"
    echo "error" > report-error.txt
    : > doc-portal.log

    echo "Failures from a running xdg-document-portal are reported"
    tests.session -u test exec test-snapd-desktop.check-dirs /home/test/snap/test-snapd-desktop/current 2>stderr.log
    MATCH "GetMountPoint called" < doc-portal.log
    MATCH "WARNING: cannot start document portal: failure" < stderr.log

    echo "Snaps not using the desktop interface will not try to contact the document portal"
    : > doc-portal.log
    tests.session -u test exec test-snapd-sh.sh -c 'true' 2>stderr.log
    check_stderr stderr.log
    test "$(wc -c < doc-portal.log)" -eq 0

    echo "No output on stderr when running without a session bus"
    # NOTE: lack of session bus is emulated by unsetting DBUS_SESSION_BUS address
    # and stopping dbus.socket
    tests.session -u test exec systemctl --user stop dbus.socket
    tests.session -u test exec sh -c "DBUS_SESSION_BUS_ADDRESS= test-snapd-desktop.check-dirs /home/test/snap/test-snapd-desktop/current" 2>stderr.log
    check_stderr stderr.log
