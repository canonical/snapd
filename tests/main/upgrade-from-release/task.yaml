summary: Ensure upgrades from release version of snap works

details: |
    Verifies that when we upgrade snap from a release version to
    the latest version, snapd and the installed snaps still work.

systems: [ubuntu-1*-64, ubuntu-2*-64]

prepare: |
    #shellcheck source=tests/lib/pkgdb.sh
    . "$TESTSLIB/pkgdb.sh"
    distro_purge_package snapd

restore: |
    #shellcheck source=tests/lib/pkgdb.sh
    . "$TESTSLIB/pkgdb.sh"
    distro_install_build_snapd

execute: |
    if os.query is-ubuntu 24.04; then
        echo "Ubuntu noble is skipped until it is released."
        exit
    fi

    if os.query is-arm; then
        echo "there is no content for arm64 in repo http://archive.ubuntu.com/ubuntu (just amd64 and i386)"
        exit
    fi

    . /etc/os-release
    # trusty has no UBUNTU_CODENAME in /etc/os-release and we need to cheat
    # because snapd was not part of the original 14.04 release so we get
    # the latest version in security before it went ESM
    if [ "${VERSION_ID}" = "14.04" ]; then
        UBUNTU_CODENAME=trusty-security
    fi

    if os.query is-ubuntu 16.04; then
        # 16.04 is ESM so get the latest version from the official archive
        # (we can't get the very first version because it's so old it
        # cannot run our test snaps)
        apt install -y snapd=2.48.3
    else
        echo "deb http://archive.ubuntu.com/ubuntu ${UBUNTU_CODENAME} main" > /tmp/no-updates.list
        apt update -o dir::etc::sourcelist=/tmp/no-updates.list -o dir::etc::sourceparts=/tmp/not-exists
        apt install -o dir::etc::sourcelist=/tmp/no-updates.list -o dir::etc::sourceparts=/tmp/not-exists -y snapd
        apt update -qq
    fi

    declare -A EXPECTED_SNAPD_VERSIONS=(
        ["23.10"]='2.60.4\+23.10'
        ["22.04"]='2.55.3\+22.04'
        ["20.04"]='2.44.3\+20.04'
        ["18.04"]='2.32.5\+18.04'
        ["16.04"]='2.48.3'
        ["14.04"]='2.37.4~14.04.1'
    )
    apt list --installed snapd | MATCH "${EXPECTED_SNAPD_VERSIONS[$VERSION_ID]}"

    echo "install a test service and a test command"
    snap install go-example-webserver
    tests.systemd wait-for-service -n 30 --state active snap.go-example-webserver.webserver.service
    snap install test-snapd-tools
    test-snapd-tools.echo hello | MATCH hello

    echo "upgrade to current snapd"
    if [ "${VERSION_ID}" = "14.04" ]; then
        dpkg -i "$GOHOME"/snapd*.deb
    else
        apt install -y "$GOHOME"/snapd_1337*.deb
    fi

    echo "snapd listens to requests"
    snap list
    echo "and ensure the snap service is still active"
    tests.systemd wait-for-service -n 30 --state active snap.go-example-webserver.webserver.service
    echo "and snap apps still work"
    test-snapd-tools.echo hello | MATCH hello
