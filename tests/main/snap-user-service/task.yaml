summary: Check that snap user services are installed and started.

details: |
    Verify that when a new user session is started, if the user-daemons feature
    is enabled, then the snap user services are installed and started.

systems:
    # Ubuntu 14.04's systemd doesn't have user@.service
    - -ubuntu-14.04-*
    # Ubuntu 16 is too old for the user services
    - -ubuntu-16.04-*
    # The following distros do not have the user agent running by default
    - -amazon-linux-2-*
    - -amazon-linux-2023-*
    - -opensuse-*
    - -arch-linux-*
    - -centos-9-*
    - -fedora-*

kill-timeout: 10m

prepare: |
    snap set system experimental.user-daemons=true
    tests.session kill-leaked

restore: |
    tests.session -u test restore
    snap unset system experimental.user-daemons

debug: |
    tests.session dump
    tests.session -u test exec systemctl --user status snapd.session-agent.service || true
    tests.session -u test exec journalctl --user || true

execute: |
    echo "When the service snap is installed"
    "$TESTSTOOLS"/snaps-state install-local test-snapd-user-service

    echo "And the user mode systemd instance is started"
    tests.session -u test prepare

    echo "We can see the service running"
    tests.session -u test exec systemctl --user is-active snap.test-snapd-user-service.test-snapd-user-service

    echo "Test default behaviour for service status for user"
    tests.session -u test exec snap debug api /v2/apps > app.infos
    gojq '.status' app.infos | MATCH '"OK"'
    gojq '.result | map(select(.name == "test-snapd-user-service")) | .[0].active' app.infos | MATCH 'true'
    gojq '.result | map(select(.name == "test-snapd-user-service")) | .[0].enabled' app.infos | MATCH 'true'

    echo "Test default behaviour for service status for user with global"
    tests.session -u test exec snap debug api /v2/apps?global=true > app.infos
    gojq '.status' app.infos | MATCH '"OK"'
    # should not return an active status
    (gojq -e '.result | map(select(.name == "test-snapd-user-service")) | .[0].active' app.infos && exit 1) || true
    gojq '.result | map(select(.name == "test-snapd-user-service")) | .[0].enabled' app.infos | MATCH 'true'

    echo "Test default behaviour for service status for root"
    snap debug api /v2/apps > app.infos
    gojq '.status' app.infos | MATCH '"OK"'
    # should not return an active status
    (gojq -e '.result | map(select(.name == "test-snapd-user-service")) | .[0].active' app.infos && exit 1) || true
    gojq '.result | map(select(.name == "test-snapd-user-service")) | .[0].enabled' app.infos | MATCH 'true'

    # For root user, both global=false and global=true will have the same behaviour
    # as global will be set to true for the root user by default.
    echo "Test default behaviour for service status for root with global"
    snap debug api /v2/apps?global=true > app.infos
    gojq '.status' app.infos | MATCH '"OK"'
    # should not return an active status
    (gojq -e '.result | map(select(.name == "test-snapd-user-service")) | .[0].active' app.infos && exit 1) || true
    gojq '.result | map(select(.name == "test-snapd-user-service")) | .[0].enabled' app.infos | MATCH 'true'
