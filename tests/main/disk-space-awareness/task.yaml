summary: Check that basic snap operation are aware of low disk space.

details: |
  Check that operations such as snap installation or snap removal (with an
  automatic snapshot) error out early if there is not enough disk space.

# this test is remounts /var/lib/snapd which is too intrusive for core.
systems: [-ubuntu-core-*]

environment:
  TMPFSMOUNT: /var/lib/snapd
  # filling tmpfs mounted under /var/lib/snapd triggers OOM
  SNAPD_NO_MEMORY_LIMIT: 1

prepare: |
  systemctl stop snapd.{socket,service}

  # mount /var/lib/snapd on a tmpfs
  mount -t tmpfs tmpfs -o size=150M,mode=0755 "$TMPFSMOUNT"

  systemctl start snapd.{socket,service}

restore: |
  systemctl stop snapd.{socket,service}
  umount -l "$TMPFSMOUNT"
  systemctl start snapd.{socket,service}

execute: |
  resize() {
    # remount can increase/decrease the size as long as it is enough for
    # already stored data.
    mount -o remount,size="$1",mode=0755 "$TMPFSMOUNT"
  }

  # disk usage, in MB
  get_disk_usage() {
    df -B1048576 "$TMPFSMOUNT" | tail -1 | awk '{print $3}'
  }

  echo "Enabling experimental disk space checks"
  snap set system experimental.check-disk-space-install=true
  snap set system experimental.check-disk-space-remove=true
  snap set system experimental.check-disk-space-refresh=true

  echo "Snap download fails with little disk space"
  NEWSIZE=$(($(get_disk_usage) + 1))
  resize "${NEWSIZE}M"
  snap install hello-world 2>&1 | MATCH  "cannot install \"hello-world\" due to low disk space"

  # note, installing hello-world also pulls core snap.
  echo "And succeeds with enough space"
  resize 150M
  snap install hello-world

  # run the snap once to have data dirs created
  hello-world

  # create 4M filler in common directory to inflate backup size
  dd if=/dev/zero of=/var/snap/hello-world/common/filler bs=1024 count=4096

  echo "Resizing the disk down with just 1MB extra"
  NEWSIZE=$(($(get_disk_usage) + 1))
  resize "${NEWSIZE}M"

  if snap remove hello-world > error.txt 2>&1; then
    echo "expected snap remove hello-world to fail"
    exit 1
  fi

  MATCH "error: cannot remove \"hello-world\" due to low disk space" < error.txt
  MATCH "use --purge to avoid creating a snapshot" < error.txt

  echo "Removing the snap with --purge works despite of low disk space"
  snap remove --purge hello-world

  resize 150M
  snap install hello-world test-snapd-sh

  # create 4M filler in common directory to inflate backup size
  dd if=/dev/zero of=/var/snap/hello-world/common/filler bs=1024 count=4096

  echo "Resizing the disk down with just 1MB extra"
  NEWSIZE=$(($(get_disk_usage) + 1))
  resize "${NEWSIZE}M"

  echo "Removing multiple snaps at once fails due to low disk space"
  if snap remove hello-world test-snapd-sh > error.txt 2>&1; then
    echo "expected snap remove hello-world test-snapd-sh to fail"
    exit 1
  fi
  MATCH "error: cannot remove \"hello-world\", \"test-snapd-sh\" due to low disk space" < error.txt

  snap remove --purge hello-world
  snap remove --purge test-snapd-sh

  resize 150M
  snap install test-snapd-tools

  echo "Refresh fails due to low disk space"
  NEWSIZE=$(($(get_disk_usage) + 1))
  resize "${NEWSIZE}M"
  # create 4M filler in common directory
  if snap refresh --edge test-snapd-tools > error.txt 2>&1; then
    echo "expected snap refresh --edge test-snapd-tools to fail"
    exit 1
  fi
  MATCH "error: cannot refresh \"test-snapd-tools\" due to low disk space" < error.txt

  # succeeds with enough space
  resize 150M
  snap refresh --edge test-snapd-tools
