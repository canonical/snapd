summary: Ensure that the dbus interface works on the system bus.

prepare: |
    echo "Install dbus system test snaps"
    snap install --edge test-snapd-dbus-provider
    snap install --edge test-snapd-dbus-consumer
    # we can only talk from an unconfied dbus-send to the service on classic,
    # on ubuntu-core devices *all* dbus calls are mediated.
    echo "Ensure the dbus service is up"
    if os.query is-classic; then
        dbus-send --system --print-reply --dest=com.dbustest.HelloWorld /com/dbustest/HelloWorld com.dbustest.HelloWorld.SayHello | MATCH "hello world"
    fi

execute: |
    echo "The dbus consumer plug is disconnected by default"
    snap interfaces -i dbus | MATCH '^- +test-snapd-dbus-consumer:dbus-system-test'

    echo "When the plug is connected"
    snap connect test-snapd-dbus-consumer:dbus-system-test test-snapd-dbus-provider:dbus-system-test

    echo "Then the consumer is able to call the provided method"
    test-snapd-dbus-consumer.dbus-system-consumer | MATCH "hello world"

    echo "Also check if dbus works if plug/slot come from the same snap"

    echo "When the  plug is connected (same snap)"
    snap connect test-snapd-dbus-provider:dbus-system-test-plug test-snapd-dbus-provider:dbus-system-test
    echo "Then the consumer (same snap) is able to call the provided method"
    test-snapd-dbus-provider.system-consumer | MATCH "hello world"
    echo "And the connection to the other snap still works"
    test-snapd-dbus-consumer.dbus-system-consumer | MATCH "hello world"

    if [ "$(snap debug confinement)" = partial ] ; then
        exit 0
    fi

    echo "When the plugs are disconnected"
    snap disconnect test-snapd-dbus-consumer:dbus-system-test
    snap disconnect test-snapd-dbus-provider:dbus-system-test-plug

    echo "And the consumer is not able to access the provided method"
    not test-snapd-dbus-consumer.dbus-system-consumer 2> call.error
    MATCH "Permission denied" < call.error

    echo "And the consumer is not able to access the provided method (same snap)"
    not test-snapd-dbus-provider.system-consumer 2> call.error
    MATCH "Permission denied" < call.error
