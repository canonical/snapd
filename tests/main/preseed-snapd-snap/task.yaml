summary: |
  Check that preseeding of current ubuntu cloud image works with snapd
  and core18.

description: |
  This test checks that preseeding of Ubuntu cloud images with snap-preseed
  command works, up to the point where the image is ready to be booted.
  The test assumes cloud image with a core and lxd snaps in its seeds/.

systems: [ubuntu-19.10-*, ubuntu-20.04-*]

environment:
  IMAGE_MOUNTPOINT: /mnt/cloudimg

prepare: |
  # the get_image_url_for_nested_vm is a convenient helper that returns
  # a cloud image url matching current $SPREAD_SYSTEM.
  #shellcheck source=tests/lib/nested.sh
  . "$TESTSLIB/nested.sh"
  wget "$(get_image_url_for_nested_vm)" -O cloudimg.img
  mkdir -p "$IMAGE_MOUNTPOINT"

restore: |
  #shellcheck source=tests/lib/preseed.sh
  . "$TESTSLIB/preseed.sh"

  # any of the restore commands can fail depending on where execute part stopped,
  # account for that with ||true.
  umount_ubuntu_image "$IMAGE_MOUNTPOINT" || true

execute: |
  setup_preseeding_core18() {
    local IMAGE_MOUNTPOINT=$1
    local SEEDS_DIR
    SEEDS_DIR="$IMAGE_MOUNTPOINT/var/lib/snapd/seed/"
    rm -f "$SEEDS_DIR"/snaps/*.snap
    rm -f "$SEEDS_DIR"/seed.yaml

    snap download --edge snapd
    snap download --edge core18

    CORE=$(ls core18*.snap)
    SNAPD=$(ls snapd*.snap)
    sed seed.yaml.in  -E -e "s/@CORE@/$CORE/" -e "s/@SNAPD@/$SNAPD/" > "$SEEDS_DIR"/seed.yaml

    cp "$CORE" "$SNAPD" "$SEEDS_DIR"/snaps/
  }

  #shellcheck source=tests/lib/preseed.sh
  . "$TESTSLIB/preseed.sh"
  mount_ubuntu_image cloudimg.img "$IMAGE_MOUNTPOINT"
  setup_preseeding_core18 "$IMAGE_MOUNTPOINT"

  echo "Running pre-seeeding"
  /usr/lib/snapd/snap-preseed "$IMAGE_MOUNTPOINT"

  # sanity, core snap mounted by snap-preseed got unmounted
  mount | not MATCH "snap-preseed"

  snap debug state "$IMAGE_MOUNTPOINT"/var/lib/snapd/state.json --change=1 > tasks.log

  echo "Check that the tasks of preseeded snapd have expected statuses"
  # Note, these checks match statuses, but not the order
  MATCH "Done .+ prerequisites +Ensure prerequisites for \"snapd\" are available" < tasks.log
  MATCH "Done .+ prepare-snap +Prepare snap \"/var/lib/snapd/seed/snaps/snapd_[0-9]+.snap" < tasks.log
  MATCH "Done .+ mount-snap +Mount snap \"snapd\"" < tasks.log
  MATCH "Done .+ copy-snap-data +Copy snap \"snapd\" data" < tasks.log
  MATCH "Done .+ setup-profiles +Setup snap \"snapd\" \(unset\) security profiles" < tasks.log
  MATCH "Done .+ link-snap +Make snap \"snapd\" \(unset\) available to the system" < tasks.log
  MATCH "Done .+ auto-connect +Automatically connect eligible plugs and slots of snap \"snapd\"" < tasks.log
  MATCH "Done .+ set-auto-aliases +Set automatic aliases for snap \"snapd\"" < tasks.log
  MATCH "Done .+ setup-aliases +Setup snap \"snapd\" aliases" < tasks.log
  MATCH "Done .+ prerequisites +Ensure prerequisites for \"core18\" are available" < tasks.log
  MATCH "Done .+ prepare-snap +Prepare snap \"/var/lib/snapd/seed/snaps/core18_[0-9]+.snap\"" < tasks.log
  MATCH "Done .+ mount-snap +Mount snap \"core18\" \(unset\)" < tasks.log
  MATCH "Done .+ copy-snap-data +Copy snap \"core18\" data" < tasks.log
  MATCH "Done .+ setup-profiles +Setup snap \"core18\" \(unset\) security profiles" < tasks.log
  MATCH "Done .+ link-snap +Make snap \"core18\" \(unset\) available to the system" < tasks.log
  MATCH "Done .+ auto-connect +Automatically connect eligible plugs and slots of snap \"core18\"" < tasks.log
  MATCH "Done .+ setup-profiles +Setup snap \"core18\" \(unset\) security profiles" < tasks.log
  MATCH "Done .+ set-auto-aliases +Set automatic aliases for snap \"core18\"" < tasks.log
  MATCH "Done .+ setup-aliases +Setup snap \"core18\" aliases" < tasks.log

  echo "Checking that there were no other 'Done' tasks when preseeding"
  [ "$(grep -c ' Done ' tasks.log)" = "18" ]

  # mark-preseeded task is where snap-preseed stopped, therefore it's in Doing.
  MATCH "Doing .+ mark-preseeded +Mark system pre-seeded" < tasks.log

  # everything below is pending execution on first boot
  MATCH "Do .+ run-hook +Run install hook of \"snapd\" snap if present" < tasks.log
  MATCH "Do .+ start-snap-services  +Start snap \"snapd\" \(unset\) services" < tasks.log
  MATCH "Do .+ run-hook +Run configure hook of \"core\" snap if present" < tasks.log
  MATCH "Do .+ run-hook +Run install hook of \"core18\" snap if present" < tasks.log
  MATCH "Do .+ start-snap-services +Start snap \"core18\" \(unset\) services" < tasks.log
  MATCH "Do .+ run-hook +Run health check of \"core18\" snap" < tasks.log
  MATCH "Do .+ mark-seeded +Mark system seeded" < tasks.log

  echo "Checking that mount units have been created on the target image"
  SYSTEMD_UNITS="$IMAGE_MOUNTPOINT"/etc/systemd
  test -f "$SYSTEMD_UNITS"/system/snap-snapd-*.mount
  test -f "$SYSTEMD_UNITS"/system/snap-core18-*.mount

  echo "Checking enabled systemd mount units"
  test -L "$SYSTEMD_UNITS"/system/multi-user.target.wants/snap-snapd-*.mount
  test -L "$SYSTEMD_UNITS"/system/multi-user.target.wants/snap-core18-*.mount

  #shellcheck source=tests/lib/preseed.sh
  . "$TESTSLIB/preseed.sh"
  umount_ubuntu_image "$IMAGE_MOUNTPOINT"
