summary: Test that snapd reexecs itself into the snapd snap

# Disable for Fedora, openSUSE and Arch as re-exec is not support there yet
systems: [-ubuntu-core-*, -fedora-*, -opensuse-*, -arch-*, -amazon-*, -centos-*]

restore: |
    umount /snap/snapd/current/usr/lib/snapd/info || true

debug: |
    echo 'experimental "snapd-snap" feature is enabled:'
    snap get core experimental.snapd-snap || true

    echo "snap changes"
    snap changes || true

    echo "list of installed snaps"
    snap list || true

execute: |
    if [ "${SNAP_REEXEC:-}" = "0" ]; then
        echo "skipping test when SNAP_REEXEC is disabled"
        exit 0
    fi

    # Make sure that the snapd snap is not installed
    snap info snapd | NOMATCH "^installed:"

    echo "Enable installing the snapd snap, this happens automatically"
    snap set core experimental.snapd-snap=true
    # give the state time to create the change and then start watching
    # it
    retry -n 30 snap watch --last=transition-to-snapd-snap
    snap list snapd

    # installing the snapd snap should result in a daemon restart so that
    # the snapd from the snap can be used. It won't be used in this test
    # because the version of the snapd from the store is lower than the
    # version of the installed snapd.
    "$TESTSTOOLS"/journal-state match-log "Requested daemon restart."

    # We need to pretend the version of snapd in the snapd snap is the same
    # as the installed one so that it re-execs. We use a higher version in
    # the local snap and "tweak" the core snap to get re-exec but this will
    # only work with core re-exec not snapd-reexec.
    mount -o bind /usr/lib/snapd/info /snap/snapd/current/usr/lib/snapd/info

    echo "Ensure we re-exec by default"
    /usr/bin/env SNAPD_DEBUG=1 snap list 2>&1 | MATCH 'DEBUG: restarting into "/snap/snapd/current/usr/bin/snap"'
