summary: |
    Ensure that unregistration API works.

# ubuntu-14.04: curl does not have --unix-socket option
systems: [-ubuntu-core-*, -ubuntu-14.04-*]

environment:
  UNTIL_REBOOT/rereg: false
  UNTIL_REBOOT/until_reboot: true

prepare: |
    systemctl stop snapd.service snapd.socket
    cp /var/lib/snapd/state.json state.json.bak
    mkdir key
    cp /var/lib/snapd/device/private-keys-v1/* key
    systemctl start snapd.service snapd.socket

restore: |
    systemctl stop snapd.service snapd.socket
    rm -f /var/lib/snapd/device/private-keys-v1/*
    cp key/* /var/lib/snapd/device/private-keys-v1/
    cp state.json.bak /var/lib/snapd/state.json
    rm -f /run/snapd/noregister
    systemctl start snapd.service snapd.socket

execute: |
    #shellcheck source=tests/lib/core-config.sh
    . "$TESTSLIB"/core-config.sh

    wait_for_device_initialized_change

    snap model --assertion | MATCH "series: 16"

    if snap model --verbose | NOMATCH "brand-id:\s* generic" ; then
       echo "Not a generic model. Skipping."
       exit 0
    fi

    keyfile=(/var/lib/snapd/device/private-keys-v1/*)
    test -f "${keyfile[0]}"

    curl --data '{"action":"forget","no-registration-until-reboot":'${UNTIL_REBOOT}'}' --unix-socket /run/snapd.socket http://localhost/v2/model/serial

    snap model --serial 2>&1|MATCH "error: device not registered yet"
    not test -e "${keyfile[0]}"

    if [ "${UNTIL_REBOOT}" = "true" ] ; then
       test -f /run/snapd/noregister
       systemctl restart snapd.service
       snap model --serial 2>&1|MATCH "error: device not registered yet"
    else
       not test -e /run/snapd/noregister
       snap debug ensure-state-soon
       retry --wait 2 -n 120 sh -c 'snap model --serial 2>&1|NOMATCH "error: device not registered yet"'
    fi

    snap find pc
    if [ "${UNTIL_REBOOT}" = "true" ] ; then
       NOMATCH '"session-macaroon":"[^"]' < /var/lib/snapd/state.json
    else
       MATCH '"session-macaroon":"[^"]' < /var/lib/snapd/state.json
    fi
