summary: Check that auto-refresh works

environment:
    SNAP_NAME/regular: test-snapd-tools
    SNAP_NAME/parallel: test-snapd-tools_instance

prepare: |
    snap install --devmode jq
    if [[ "$SPREAD_VARIANT" =~ parallel ]]; then
        snap set system experimental.parallel-instances=true
    fi

restore: |
    if [[ "$SPREAD_VARIANT" =~ parallel ]]; then
        snap set system experimental.parallel-instances=null
    fi

execute: |
    #shellcheck source=tests/lib/dirs.sh
    . "$TESTSLIB/dirs.sh"

    echo "Auto refresh information is shown"
    output=$(snap refresh --time)
    for expected in ^schedule: ^last: ^next:; do
        echo "$output" | MATCH "$expected"
    done

    if os.query is-core; then
        # no holding
        echo "$output" | not MATCH "^hold:"
    else
        # holding
        echo "$output" | MATCH "^hold:"
    fi

    echo "Install a snap from stable"
    snap install "$SNAP_NAME"
    snap list | MATCH "$SNAP_NAME +[0-9]+\\.[0-9]+"

    snap set core refresh.schedule="0:00-23:59"
    systemctl stop snapd.{service,socket}

    echo "Modify the snap to track the edge channel"
    jq ".data.snaps[\"$SNAP_NAME\"].channel = \"edge\"" /var/lib/snapd/state.json > /var/lib/snapd/state.json.new
    mv /var/lib/snapd/state.json.new /var/lib/snapd/state.json

    echo "And force auto-refresh to happen"
    jq ".data[\"last-refresh\"] = \"2007-08-22T09:30:44.449455783+01:00\"" /var/lib/snapd/state.json > /var/lib/snapd/state.json.new
    mv /var/lib/snapd/state.json.new /var/lib/snapd/state.json

    systemctl start snapd.{service,socket}

    echo "wait for auto-refresh to happen"
    for _ in $(seq 120); do
        if snap changes|grep -q "Done.*Auto-refresh snap \"$SNAP_NAME\""; then
            break
        fi
        echo "Ensure refresh"
        snap debug ensure-state-soon
        sleep 5
    done

    echo "Ensure our snap got updated"
    snap list|MATCH "$SNAP_NAME +[0-9]+\\.[0-9]+\\+fake1"

    echo "Ensure refresh.last is set"
    jq ".data[\"last-refresh\"]" /var/lib/snapd/state.json | MATCH "$(date +%Y)"

    echo "No refresh hold at this point"
    snap refresh --time | not MATCH "^hold:"
