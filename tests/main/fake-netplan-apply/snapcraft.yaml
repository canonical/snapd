name: test-snapd-netplan-apply
base: core18
adopt-info: netplan
summary: Backend-agnostic network configuration in YAML
description: |
  Netplan is a utility for easily configuring networking on a linux system.
  You simply create a YAML description of the required network interfaces and
  what each should be configured to do. From this description Netplan will
  generate all the necessary configuration for your chosen renderer tool.
grade: devel
confinement: strict

apps:
  netplan:
    command: usr/bin/python3 $SNAP/usr/sbin/netplan
    environment:
      PYTHONPATH: $SNAP/usr/lib/python3/dist-packages:$PYTHONPATH
    adapter: full
    plugs:
      - network
      - network-bind
      - network-setup-control
  info:
    command: netplan-info.sh
    adapter: full
    plugs:
      - network
      - network-bind
      - network-setup-observe
      - network-setup-control

parts:
  info-script:
    plugin: dump
    source: .
    stage: [netplan-info.sh]
  netplan:
    source: https://github.com/CanonicalLtd/netplan.git
    plugin: make
    build-packages:
      - bash-completion
      - libglib2.0-dev
      - libyaml-dev
      - uuid-dev
      - pandoc
      - pkg-config
      - python3
      - python3-coverage
      - python3-yaml
      - python3-netifaces
      - python3-nose
      - pyflakes3
      - pep8
      - systemd
      - libsystemd-dev
    stage-packages:
      - iproute2
      - python3
      - python3-netifaces
      - python3-yaml
      - systemd
      - libatm1
    override-pull: |
      snapcraftctl pull
      last_committed_tag="$(git tag -l | grep -v v | sort -rV | head -n1)"
      last_committed_tag_ver="$(echo ${last_committed_tag} | sed 's/n//')"
      last_released_tag="$(snap info $SNAPCRAFT_PROJECT_NAME | awk '$1 == "beta:" { print $2 }')"
      # If the latest tag from the upstream project has not been released to
      # beta, build that tag instead of master.
      if [ "${last_committed_tag_ver}" != "${last_released_tag}" ]; then
        git fetch
        git checkout "${last_committed_tag}"
      fi
      snapcraftctl set-version "$last_committed_tag_ver"
