summary: Check that prepare-image works for grub-systems
systems: [-ubuntu-core-16-64, -ubuntu-core-16-arm-64, -ubuntu-core-16-arm-32]
backends: [-autopkgtest]
# TODO: use the real stores with proper assertions fully as well once possible
environment:
    ROOT: /tmp/root
    IMAGE: /tmp/root/image
    GADGET: /tmp/root/gadget
    STORE_DIR: $(pwd)/fake-store-blobdir
    STORE_ADDR: localhost:11028
    UBUNTU_IMAGE_SKIP_COPY_UNVERIFIED_SNAPS: 1
prepare: |
    if [ "$TRUST_TEST_KEYS" = "false" ]; then
        echo "This test needs test keys to be trusted"
        exit
    fi

    . $TESTSLIB/store.sh
    setup_fake_store $STORE_DIR
restore: |
    if [ "$TRUST_TEST_KEYS" = "false" ]; then
        echo "This test needs test keys to be trusted"
        exit
    fi

    . $TESTSLIB/store.sh
    teardown_fake_store $STORE_DIR
    rm -rf $ROOT
execute: |
    if [ "$TRUST_TEST_KEYS" = "false" ]; then
        echo "This test needs test keys to be trusted"
        exit
    fi

    echo Expose the needed assertions through the fakestore
    cp $TESTSLIB/assertions/developer1.account $STORE_DIR/asserts
    cp $TESTSLIB/assertions/developer1.account-key $STORE_DIR/asserts
    # have snap use the fakestore for assertions
    export SNAPPY_FORCE_SAS_URL=http://$STORE_ADDR

    echo Running prepare-image
    su -c "SNAPPY_USE_STAGING_STORE=$SNAPPY_USE_STAGING_STORE snap prepare-image --channel edge --extra-snaps snapweb $TESTSLIB/assertions/developer1-pc.model $ROOT" test

    echo Verifying the result
    ls -lR $IMAGE
    for f in pc pc-kernel core snapweb; do
        ls $IMAGE/var/lib/snapd/seed/snaps/${f}*.snap
    done
    grep snap_core=core $IMAGE/boot/grub/grubenv
    grep snap_kernel=pc-kernel $IMAGE/boot/grub/grubenv

    # check copied assertions
    cmp $TESTSLIB/assertions/developer1-pc.model $IMAGE/var/lib/snapd/seed/assertions/model
    cmp $TESTSLIB/assertions/developer1.account $IMAGE/var/lib/snapd/seed/assertions/developer1.account

    echo Verify the unpacked gadget
    ls -lR $GADGET
    ls $GADGET/meta/snap.yaml

    echo "Verify that we have valid looking seed.yaml"
    cat $IMAGE/var/lib/snapd/seed/seed.yaml

    # snap-id of core
    if [ "$REMOTE_STORE" = production ]; then
        core_snap_id="99T7MUlRhtI3U0QFgl5mXXESAiSwt776"
    else
        core_snap_id="xMNMpEm0COPZy7jq9YRwWVLCD9q5peow"
    fi
    grep -q "snap-id: ${core_snap_id}" $IMAGE/var/lib/snapd/seed/seed.yaml

    for snap in pc pc-kernel core; do
        grep -q "name: $snap" $IMAGE/var/lib/snapd/seed/seed.yaml
    done

    echo "Verify that we got some snap assertions"
    for name in pc pc-kernel core; do
        grep "snap-name: $name" $IMAGE/var/lib/snapd/seed/assertions/*
    done
