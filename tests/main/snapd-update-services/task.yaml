summary: systemd units get regenerated when snapd is refreshed

details: |
  Check that updating snapd does not remount already installed
  snaps.

systems:
  # there seems to be some kernel issue with duplicated mounts in
  # /proc/*/mounts on 14.04 so it makes it more difficult to test
  # there.
  - ubuntu-16.04-*
  - ubuntu-18.04-*
  - ubuntu-2*

prepare: |
  # Install a snap with a service running
  service_snap="$("${TESTSTOOLS}/snaps-state" pack-local test-snapd-service)"
  snap install --dangerous "${service_snap}"
  systemctl is-active snap.test-snapd-service.test-snapd-service.service

  # Download current snapd edge
  snap download --edge snapd --basename=snapd_edge

  # Repack it with currently built snapd
  unpackdir=/tmp/snapd-update-services
  unsquashfs -no-progress -d "${unpackdir}" snapd_edge.snap
  dpkg-deb -x "${GOHOME}"/snapd_*.deb "${unpackdir}"
  snap pack "${unpackdir}" --filename snapd_modified.snap
  rm -rf "${unpackdir}"

restore: |
  rm -rf /tmp/snapd-update-services
  rm -f snapd_edge.snap
  rm -f snapd_modified.snap

execute: |
  snap install --dangerous snapd_edge.snap

  # We simulate TimeoutStopSec= being a new feature
  systemctl show -p TimeoutStopUSec snap.test-snapd-service.test-snapd-service.service | MATCH 'TimeoutStopUSec=30s'

  sed -i "/^TimeoutStopSec=/d" /etc/systemd/system/snap.test-snapd-service.*.service

  systemctl daemon-reload

  for f in /etc/systemd/system/snap.test-snapd-service.*.service; do
    unit="$(basename "${f}")"
    systemctl show -p TimeoutStopUSec "${unit}" | NOMATCH 'TimeoutStopUSec=30s'
    systemctl reload-or-restart "${unit}"
  done

  # We simulate Options=dev to Options=nodev update
  mount_units=()
  for f in /etc/systemd/system/snap-*.mount; do
    unit="$(basename "${f}")"
    case "${unit}" in
      snap-snapd-*.mount)
        # This version will get disabled and not updated
        continue
        ;;
    esac
    mount_units+=("${unit}")
    sed -i '/^Options=/s/nodev/dev/g' "${f}"
    systemctl daemon-reload
    systemctl reload "${unit}"
    what="$(systemctl show -p What "${unit}")"
    what="${what#What=}"
    findmnt -o OPTIONS -n "${what}" | NOMATCH nodev
  done

  # Snapd update
  snap install --dangerous snapd_modified.snap

  # Check the service file has been updated
  systemctl is-active snap.test-snapd-service.test-snapd-service.service
  systemctl show -p TimeoutStopUSec snap.test-snapd-service.test-snapd-service.service | MATCH 'TimeoutStopUSec=30s'

  # Check the mounts have been updated and that we have option "nodev"
  # XXX Actually, check that the mounts *have not* been updated
  # because we are not reloading the mount units for installed snaps anymore,
  # as it is not clear we should change things for running processes.
  # But leaving the test around in case we change our mind.
  for unit in "${mount_units[@]}"; do
    what="$(systemctl show -p What "${unit}")"
    what="${what#What=}"
    findmnt -o OPTIONS -n "${what}" | NOMATCH nodev
  done
