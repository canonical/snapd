summary: Ensure that the autopilot-introspection interface works

details: |
    The autopilot-intrspection interface allows an application to be introspected
    and export its ui status over DBus.

    The test uses an snap that declares a plug on autopilot-intrsopection, it
    needs to request a dbus name on start so that its state can be queried.

systems: [-ubuntu-core-16-*]

prepare: |
    . "$TESTSLIB/dirs.sh"

    echo "Given a snap declaring an autopilot-intrspection plug in installed"
    snap install --edge test-snapd-autopilot-consumer

    echo "And the provider dbus loop is started"
    . "$TESTSLIB/dbus.sh"
    start_dbus_unit $SNAP_MOUNT_DIR/bin/test-snapd-autopilot-consumer.provider

restore: |
    rm -f *.error
    . "$TESTSLIB/dbus.sh"
    stop_dbus_unit

execute: |
    . "$TESTSLIB/dirs.sh"

    dbus_send(){
        local method="$1"
        echo $(dbus-send --print-reply --dest=com.canonical.Autopilot.Introspection /com/canonical/Autopilot/Introspection com.canonical.Autopilot.Introspection.${method})
    }

    export $(cat dbus.env)

    echo "Then the plug is disconnected by default"
    snap interfaces | MATCH "^\- +test-snapd-autopilot-consumer:autopilot-introspection"

    echo "When the plug is connected"
    snap connect test-snapd-autopilot-consumer:autopilot-introspection

    echo "Then the dbus name is properly reserved and the snap app version can be introspected"

    for i in $(seq 10); do
        if ! dbus_send GetVersion | MATCH "my-ap-version"; then
            sleep 1
        else
            break
        fi
    done
    $SNAP_MOUNT_DIR/bin/test-snapd-autopilot-consumer.consumer GetVersion | MATCH "my-ap-version"

    echo "And the snap app state can be intrsopected"
    $SNAP_MOUNT_DIR/bin/test-snapd-autopilot-consumer.consumer GetState | MATCH "my-ap-state"

    if [ "$(snap debug confinement)" = none ]; then
        exit 0
    fi

    if [ "$(snap debug confinement)" = strict ] ; then
        echo "When the plug is disconnected"
        snap disconnect test-snapd-autopilot-consumer:autopilot-introspection

        echo "Then the snap version is not introspectable"
        if $SNAP_MOUNT_DIR/bin/test-snapd-autopilot-consumer.consumer GetVersion 2>${PWD}/getversion.error ; then
            echo "Expected permission error trying to introspect version with disconnected plug"
            exit 1
        fi
        MATCH "Permission denied" < getversion.error

        echo "And the snap state is not introspectable"
        if $SNAP_MOUNT_DIR/bin/test-snapd-autopilot-consumer.consumer GetState 2>${PWD}/getstate.error; then
            echo "Expected permission error trying to introspect state with disconnected plug"
            exit 1
        fi
        MATCH "Permission denied" < getstate.error
    fi
