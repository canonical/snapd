summary: Check that snap install respects after/before ordering of services

# slow in autopkgtest (>3m)
backends: [-autopkgtest]

prepare: |
    snap set system experimental.parallel-instances=true

restore: |
    snap set system experimental.parallel-instances=null

debug: |
    for name in $(snap list | grep '^test-snapd-after-before-service' | awk '{print $1}'); do
        for service in before-middle middle after-middle; do
            systemctl status "snap.$name.$service" || true
        done
    done

execute: |
    echo "When the service snap is installed"

    get_prop() {
        prop=$(systemctl show -p "$1" "$2")
        test -n "$prop"
        # the format is:
        # InactiveExitTimestamp=Mon 2018-10-22 10:41:53 CEST
        echo "$prop" | cut -f2 -d=
    }

    # try to rule out any cases when things accidentally work by repeating the
    # test a number of times
    for _ in $(seq 10); do
        # install each snap under separate instance name, this makes debugging
        # easier
        INSTANCE=$RANDOM
        # we are using systemd-notify indicate the service is active, this is
        # currently not allowed by daemon-notify interface, so we may as well
        # just install in devmode
        "$TESTSTOOLS"/snaps-state install-local-as test-snapd-after-before-service "test-snapd-after-before-service_$INSTANCE" --devmode

        service_prefix="snap.test-snapd-after-before-service_$INSTANCE"

        echo "We can see all services running"
        for service in before-middle middle after-middle; do
            systemctl status "$service_prefix.$service" | MATCH "running"
        done

        inactive_leave="$(get_prop "InactiveExitTimestampMonotonic" "$service_prefix.before-middle")"
        active_enter="$(get_prop "ActiveEnterTimestampMonotonic" "$service_prefix.before-middle")"
        test -n "$inactive_leave"
        test -n "$active_enter"

        # sanity check
        test "$active_enter" -gt "$inactive_leave"
        test -n "$inactive_leave"
        test -n "$active_enter"

        inactive_leave="$(get_prop "InactiveExitTimestampMonotonic" "$service_prefix.middle")"
        test -n "$inactive_leave"

        echo "middle service was started after before-middle became active"
        test "$inactive_leave" -ge "$active_enter"

        active_enter="$(get_prop "ActiveEnterTimestampMonotonic" "$service_prefix.middle")"
        test -n "$active_enter"

        inactive_leave="$(get_prop "InactiveExitTimestampMonotonic" "$service_prefix.after-middle")"
        test -n "$inactive_leave"

        echo "after-middle service was started after middle became active"
        test "$inactive_leave" -ge "$active_enter"

        snap remove --purge "test-snapd-after-before_$INSTANCE"
    done
