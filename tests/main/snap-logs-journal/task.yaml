summary: Test to verify that 'snap logs' can get logs from journal namespaces.

details: |
  Functional test for the 'snap logs' command with snaps inside journal quota groups.
# these systems do not support journal quota groups due to their old systemd versions.
# requires systemd v245+
systems:
  - -amazon-linux-2-*
  - -ubuntu-14.04-*
  - -ubuntu-16.04-*
  - -ubuntu-18.04-*
  - -ubuntu-core-16-*
  - -ubuntu-core-18-*

prepare: |
  "$TESTSTOOLS"/snaps-state install-local test-snapd-journal-quota
  tests.cleanup defer snap remove --purge test-snapd-journal-quota
  snap set system experimental.quota-groups=true
  tests.cleanup defer snap unset system experimental.quota-groups

restore: |
  echo "Stopping the service"
  snap stop test-snapd-journal-quota.logger

  echo "Trying to remove the quota group (if created)"
  snap remove-quota group-one || true

execute: |
  echo "Starting service and verifying that log messages are sent to default journal namespace"
  snap start test-snapd-journal-quota.logger
  
  # Now ask for logs and lets see if we can see messages from 'LogDaemon'
  # The format of the log messages are 'LogDaemon: message number: X'
  retry -n 5 sh -c "snap logs test-snapd-journal-quota.logger | MATCH LogDaemon"
   
  echo "Create a group with the logger snap in it"
  snap set-quota group-one --journal-size=16MB --journal-rate-limit=100/10ms test-snapd-journal-quota

  # retry a few times if we check before the service had a chance to restart entirely
  echo "The service should still be active"
  retry -n 3 sh -c "snap services test-snapd-journal-quota.logger | MATCH 'test-snapd-journal-quota.logger\s+enabled\s+active'"
  
  # Now ask for the namespace logs and lets see if we can see messages from 'LogDaemon'
  NEW_MESSAGE_DETECTED=0
  INITIAL_NO=$(snap logs test-snapd-journal-quota.logger | grep "LogDaemon" | tail -n 1 | awk '{print $NF}')
  for i in $(seq 5); do
    sleep 1
      CURRENT_NO=$(snap logs test-snapd-journal-quota.logger | grep "LogDaemon" | tail -n 1 | awk '{print $NF}')
      if [ "$CURRENT_NO" -gt "$INITIAL_NO" ]; then
          echo "LogDaemon messages detected after $i tries"
          NEW_MESSAGE_DETECTED=1
          break
      fi
  done
  if [ "$NEW_MESSAGE_DETECTED" = "0" ]; then
      echo "Failed to see new log messages after 5 seconds"
      exit 1
  fi
