summary: Ensure network interface works.

systems: [-ubuntu-core-16-64]

details: |
    The network interface allows a snap to access the network as a client.

    A snap which defines the network plug must be shown in the interfaces list.
    The plug must be autoconnected on install and, as usual, must be able to be
    reconnected.

    A snap declaring a plug on this interface must be able to access network services.

environment:
    SNAP_NAME: network-consumer
    SNAP_FILE: ${SNAP_NAME}_1.0_all.snap
    PORT: 8081
    SERVICE_FILE: "./service.sh"
    SERVICE_NAME: "test-service"

prepare: |
    . $TESTSLIB/systemd.sh
    echo "Given a snap declaring the network plug is installed"
    snapbuild $TESTSLIB/snaps/$SNAP_NAME .
    snap install --dangerous $SNAP_FILE

    echo "And a service is listening"
    printf "#!/bin/sh -e\nwhile true; do echo \"HTTP/1.1 200 OK\n\nok\n\" |  nc -l -p $PORT -q 1; done" > $SERVICE_FILE
    chmod a+x $SERVICE_FILE
    systemd_create_and_start_unit $SERVICE_NAME "$(readlink -f $SERVICE_FILE)"

    while ! netstat -lnt | grep -Pq "tcp.*?:$PORT +.*?LISTEN\n*"; do sleep 0.5; done

restore: |
    . $TESTSLIB/systemd.sh
    systemd_stop_and_destroy_unit $SERVICE_NAME
    rm -f $SNAP_FILE $SERVICE_FILE

execute: |
    CONNECTED_PATTERN="(?s)Slot +Plug\n\
    .*?\n\
    :network +$SNAP_NAME"
    DISCONNECTED_PATTERN="(?s)Slot +Plug\n\
    .*?\n\
    - +$SNAP_NAME:network"

    echo "Then the snap is listed as connected"
    snap interfaces | grep -Pzq "$CONNECTED_PATTERN"

    echo "============================================"

    echo "When the plug is disconnected"
    snap disconnect $SNAP_NAME:network ubuntu-core:network
    snap interfaces | grep -Pzq "$DISCONNECTED_PATTERN"

    echo "Then the plug can be connected again"
    snap connect $SNAP_NAME:network ubuntu-core:network
    snap interfaces | grep -Pzq "$CONNECTED_PATTERN"

    echo "============================================"

    echo "When the plug is connected"
    snap connect $SNAP_NAME:network ubuntu-core:network
    snap interfaces | grep -Pzq "$CONNECTED_PATTERN"

    echo "Then the snap is able to access a network service"
    network-consumer http://127.0.0.1:$PORT | grep -Pqz "ok\n"

    echo "============================================"

    echo "When the plug is disconnected"
    snap disconnect $SNAP_NAME:network ubuntu-core:network
    snap interfaces | grep -Pzq "$DISCONNECTED_PATTERN"

    echo "Then snap can't access a network service"
    if network-consumer http://127.0.0.1:$PORT; then
        echo "Network shouldn't be accessible"
        exit 1
    fi
