summary: Check refresh with a broken configure hook on core still works

# Disabled for Fedora and openSUSE until test case is properly ported
systems: [-ubuntu-core-*, -fedora-*, -opensuse-*]

environment:
    BROKEN_CORE_SNAP: core_broken.snap

restore:
    rm -rf squashfs-root
    rm -f $BROKEN_CORE_SNAP

kill-timeout: 2m

execute: |
    snap list | awk "/^core / {print(\$3)}" > prevBoot
    
    echo "Breaking the configure hook of the core snap to hang forever"
    unsquashfs /var/lib/snapd/snaps/core_$(cat prevBoot).snap
    printf '#!/bin/sh\necho ithangs\nsleep 9999\n' > squashfs-root/meta/hooks/configure
    chmod 755 squashfs-root/meta/hooks/configure

    . $TESTSLIB/snaps.sh
    mksnap_fast "squashfs-root" "$BROKEN_CORE_SNAP"
    rm -rf squshfs-root

    echo "Installing a new core which will trigger running the configure hook"
    snap install --dangerous $BROKEN_CORE_SNAP

    echo "Checking changes"
    . $TESTSLIB/changes.sh
    snap changes
    chg_id=$(change_id "Install \"core\" snap from file \"$BROKEN_CORE_SNAP\"" Done)

    echo "Verify the snap change"
    snap change $chg_id | MATCH ".*ERROR ignoring failure in hook \"configure\".*"
    snap change $chg_id | MATCH ".*ithangs.*"

    # max-runtime set in prepare.sh via SNAPD_CONFIGURE_HOOK_TIMEOUT=30s
    # in the environment
    snap change $chg_id | MATCH ".*exceeded maximum runtime of 30s.*"

    journalctl -u snapd | MATCH "Reported hook failure from \"configure\" for snap \"core\" as.*"
