summary: Check that bootstrap works for uboot-systems
environment:
  IMAGE: /tmp/diskimage
restore:
 rm -rf $IMAGE
execute: |
 echo Creating mock uboot env
 sudo apt install u-boot-tools
 
 mkdir -p $IMAGE/boot/uboot
 echo "key=value" > uboot.env.in
 mkenvimage -r -s 131072  -o $IMAGE/boot/uboot/uboot.env uboot.env.in 

 echo Preparing bootstrap.yaml 
 cat > bootstrap.yaml <<EOF
 bootstrap:
   rootdir: $IMAGE
   channel: edge
   model-assertion: model.assertion
   extra-snaps:
   - webdm
 EOF

 echo Creating model assertion
 cat > model.assertion <<EOF
 type: model
 series: 16
 authority-id: my-brand
 brand-id: my-brand
 model: my-model
 class: my-class
 allowed-modes:  
 required-snaps:  
 architecture: armhf
 store: canonical
 gadget: canonical-pi2
 kernel: canonical-pi2-linux
 core: ubuntu-core
 timestamp: 2016-01-02T10:00:00-05:00
 body-length: 0

 openpgpg 2cln
 EOF

 echo Running bootstrap
 sudo snap bootstrap bootstrap.yaml

 echo Verifying the result
 ls -lR $IMAGE
 for f in canonical-pi2 canonical-pi2-linux ubuntu-core webdm; do
   ls $IMAGE/var/lib/snapd/snaps/${f}*.snap
   ls $IMAGE/var/lib/snapd/snaps/${f}*.snap.sideinfo
 done
 grep snappy_os=ubuntu-core $IMAGE/boot/uboot/uboot.env
 grep snappy_kernel=canonical-pi2-linux $IMAGE/boot/uboot/uboot.env

 echo Verify that the kernel is available unpacked
 ls $IMAGE/boot/uboot/canonical-pi2-linux_*.snap/kernel.img
 ls $IMAGE/boot/uboot/canonical-pi2-linux_*.snap/initrd.img
 ls $IMAGE/boot/uboot/canonical-pi2-linux_*.snap/dtbs/
