summary: Ensure that commands run when their core provided interfaces are connected

details: |
    Install a test snap that plugs as many core provided interfaces as is 
    possible and verify the command can run (ie, don't test the interface 
    functionality itself). This will help catch things like AppArmor 
    policy syntax errors, seccomp policy parsing, udev querying bugs, etc.

environment:
    CONSUMER_SNAP: test-snapd-policy-app-consumer
    SPREAD_EXTERNAL_ADDRESS: localhost:8022
    CONNECTIONS_PERCENTAGE/100_connected: 100
    DISCONNECT_INTERFACES/100_connected: false
    NESTED_CPUS/100_connected: 1
    NESTED_MEM/100_connected: 512
    CONNECTIONS_PERCENTAGE/100_disconnected: 100
    DISCONNECT_INTERFACES/100_disconnected: true
    NESTED_CPUS/100_disconnected: 1
    NESTED_MEM/100_disconnected: 512

execute: |
    if os.query is-ubuntu 16.04; then
        NESTED_SPREAD_SYSTEM=ubuntu-core-16-64
    elif os.query is-ubuntu 18.04; then
        NESTED_SPREAD_SYSTEM=ubuntu-core-18-64
    elif os.query is-ubuntu 20.04; then
        NESTED_SPREAD_SYSTEM=ubuntu-core-20-64
    elif os.query is-ubuntu 22.04; then
        NESTED_SPREAD_SYSTEM=ubuntu-core-22-64
    else
        echo "unsupported nested system"
        exit 1
    fi

    # Get spread
    SPREAD="$(tests.nested download spread)"

    # Run sprad test
    set +x
    export SPREAD_EXTERNAL_ADDRESS=localhost:8022
    export PERF_CONNECTIONS_PERCENTAGE="$CONNECTIONS_PERCENTAGE"
    export PERF_DISCONNECT_INTERFACES="$DISCONNECT_INTERFACES"    
    "$SPREAD" external:"$NESTED_SPREAD_SYSTEM":tests/perf/interfaces-core-provided
