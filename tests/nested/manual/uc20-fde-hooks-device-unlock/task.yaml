summary: Check that the fde-setup hooks work

# this is a UC20 specific test
systems: [ubuntu-20.04-64]

environment:
    NESTED_IMAGE_ID: core20-fde-setup
    NESTED_ENABLE_TPM: false
    NESTED_ENABLE_SECURE_BOOT: false
    NESTED_BUILD_SNAPD_FROM_CURRENT: true
    NESTED_ENABLE_OVMF: true

prepare: |
  echo "Build a kernel snap with the fde-setup hook with device-setup support"
  # shellcheck source=tests/lib/prepare.sh
  . "$TESTSLIB/prepare.sh"
  # build fde-reveal-key hook into the "extra-initrd" dir so that the
  # build fde-deviceunlock too
  # nested_create_core_vm picks this up
  mkdir -p ./extra-initrd/usr/bin/
  go build -o ./extra-initrd/usr/bin/fde-reveal-key "$TESTSLIB"/fde-setup-hook/fde-setup.go
  (cd ./extra-initrd/usr/bin/ ; ln -s fde-reveal-key fde-device-unlock)
  # create fde-setup hook inside the kernel
  mkdir -p ./extra-kernel-snap/meta/hooks
  go build -o ./extra-kernel-snap/meta/hooks/fde-setup "$TESTSLIB"/fde-setup-hook/fde-setup.go
  (cd ./extra-kernel-snap/meta/hooks ; touch enable-device-setup-hook-support; chmod +x enable-device-setup-hook-support)
  tests.nested build-image core
  tests.nested create-vm core
execute: |
  echo "Check that we have an encrypted system"
  tests.nested exec "find /dev/mapper" | MATCH ubuntu-data
  tests.nested exec "test -e /run/mnt/ubuntu-boot/device/fde/ubuntu-data.sealed-key"
