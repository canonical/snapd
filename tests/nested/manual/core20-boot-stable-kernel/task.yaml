summary: Check snapd built from current branch boots with the fundamental snaps

systems: [ubuntu-20.04-*]

environment:
    NESTED_BUILD_SNAPD_FROM_CURRENT: true
    NESTED_USE_CLOUD_INIT: true
    NESTED_ENABLE_SECURE_BOOT: true
    NESTED_ENABLE_TPM: true

    NESTED_IMG_CHANNEL: edge
    NESTED_KERNEL_CHANNEL: stable
    NESTED_GADGET_CHANNEL: stable
    NESTED_BASE_CHANNEL: stable
    NESTED_SNAPD_CHANNEL: edge
    NESTED_IMAGE_ID: boot-stable-kernel

    # TODO: include the following scenarios
    # edge + build_from_branch snapd + stable everything else (this test)
    # edge + build_from_branch snapd + beta kernel + stable everything else
    # edge + build_from_branch snapd + beta gadget + stable everything else
    # edge + build_from_branch snapd + beta base (core20) + stable everything else

    NESTED_REPACK_KERNEL_SNAP: false
    NESTED_REPACK_GADGET_SNAP: false
    NESTED_REPACK_BASE_SNAP: false

prepare: |
    # In this test it is needed to download the snapd for the image because by default
    # the channel used for each snap is the one defined in the model.
    EXTRA_SNAPS_PATH="$(tests.nested get extra-snaps-path)"
    snap download --basename=pc-kernel --channel="20/$NESTED_KERNEL_CHANNEL" pc-kernel
    snap download --basename=pc --channel="20/$NESTED_GADGET_CHANNEL" pc
    snap download --basename=core20 --channel="$NESTED_BASE_CHANNEL" core20
    mv pc-kernel.snap "$EXTRA_SNAPS_PATH"
    mv pc.snap "$EXTRA_SNAPS_PATH"
    mv core20.snap "$EXTRA_SNAPS_PATH"

    tests.nested build-image core
    tests.nested create-vm core

debug: |
    tests.nested exec "snap changes" || true

execute: |
    # Check the version for the pc-kernel is the defined for the test
    kernel_installed_version=$(tests.nested exec "snap info pc-kernel | grep installed: | awk '{ print $2 }'")
    kernel_expected_version=$(tests.nested exec "snap info pc-kernel | grep 20/$NESTED_KERNEL_CHANNEL | awk '{ print $2 }'")
    test "$kernel_installed_version" = "$kernel_expected_version"
