summary: Test that time moves forward when the RTC is broken/unavailable in UC20

systems: [ubuntu-20.04-64]

environment:
  NESTED_IMAGE_ID: core20-initramfs-time-moves-forward
  NESTED_BUILD_SNAPD_FROM_CURRENT: true
  NESTED_USE_CLOUD_INIT: true

  # disable the real time clock and effectively break it so it returns unix
  # epoch to simulate devices like the rpi which do not have RTC
  NESTED_PARAM_RTC: "-rtc base=1970-01-01,clock=vm"

  # this is the unix time timestamp we want the initramfs to use, 1 here is just
  # 1 second after the unix epoch
  NESTED_CORE20_INITRAMFS_EPOCH_TIMESTAMP: 1

  # this is one second before the model assertion timestamp, this should be
  # bumped if the model assertion is ever resigned with a newer timestamp in it,
  # but doesn't strictly need to be updated every time as long as the timestamp
  # increases monotonically the test is still valid
  MODEL_ASSERTION_SIGN_TIME: 1606490999

prepare: |
  tests.nested build-image core
  tests.nested create-vm core

execute: |
  echo "Verify that the current time in the VM is newer than the model assertion sign time"
  test "$(tests.nested exec date --utc '+%s')" -ge "$MODEL_ASSERTION_SIGN_TIME"

  echo "Verify that the timestamp from after snap-bootstrap ran is greater than the time from the model assertion"
  test "$(tests.nested exec "cat /run/mnt/ubuntu-seed/test/install-after-snap-bootstrap-date")" -ge "$MODEL_ASSERTION_SIGN_TIME"
