summary: Test that gadget config defaults are applied early on core20.

systems: [ubuntu-20.04-64]

environment:
    NESTED_IMAGE_ID: core20-early-config
    NESTED_ENABLE_TPM: true
    NESTED_ENABLE_SECURE_BOOT: true
    NESTED_BUILD_SNAPD_FROM_CURRENT: true

prepare: |
    # Get the snakeoil key and cert
    KEY_NAME=$(tests.nested download snakeoil-key)
    SNAKEOIL_KEY="$PWD/$KEY_NAME.key"
    SNAKEOIL_CERT="$PWD/$KEY_NAME.pem"

    # modify and repack gadget snap (add defaults section and install hook)
    snap download --basename=pc --channel="20/edge" pc
    unsquashfs -d pc-gadget pc.snap

    cat defaults.yaml >> pc-gadget/meta/gadget.yaml
    mkdir -p pc-gadget/meta/hooks
    cp install pc-gadget/meta/hooks/

    tests.nested secboot-sign gadget pc-gadget "$SNAKEOIL_KEY" "$SNAKEOIL_CERT"
    snap pack pc-gadget/ "$(tests.nested get extra-snaps-path)"

    rm -f "$SNAKEOIL_KEY" "$SNAKEOIL_CERT"

    tests.nested build-image core
    tests.nested create-vm core

execute: |
    check_core20_early_config(){
        # sanity - check that defaults were applied; note this doesn't guarantee
        # that defaults were applied early - that is checked further down.
        echo "Sanity check of the gadget defaults"
        tests.nested exec "sudo snap get system service.rsyslog.disable" | MATCH "true"
        tests.nested exec "sudo snap get system watchdog.runtime-timeout" | MATCH "13m"
        tests.nested exec "sudo snap get system system.power-key-action" | MATCH "ignore"
        tests.nested exec "sudo snap get system system.disable-backlight-service" | MATCH "true"

        tests.nested exec "test -L /etc/systemd/system/rsyslog.service"
        tests.nested exec "cat /etc/systemd/logind.conf.d/00-snap-core.conf" | MATCH "HandlePowerKey=ignore"
        tests.nested exec "cat /etc/systemd/system.conf.d/10-snapd-watchdog.conf" | MATCH "RuntimeWatchdogSec=780"
        tests.nested exec "test -L /etc/systemd/system/systemd-backlight@.service"

        echo "Test that defaults were applied early."
        # early config is witnessed by install hook of the pc gadget. Note we can
        # only check rsyslog/backlight symlinks as other core settings cannot be
        # inspected from install hook of the gadget.
        tests.nested exec "cat /var/snap/pc/common/debug.txt" | MATCH "rsyslog symlink: /dev/null"
        tests.nested exec "cat /var/snap/pc/common/debug.txt" | MATCH "backlight symlink: /dev/null"

        # timezone is set
        tests.nested exec "cat /etc/timezone" | MATCH "Europe/Malta"
        tests.nested exec "readlink -f /etc/localtime" | MATCH "Europe/Malta"
        tests.nested exec "cat /var/snap/pc/common/debug.txt" | MATCH "localtime symlink: /usr/share/zoneinfo/Europe/Malta"

        # check console-conf disabled
        tests.nested exec "cat /var/lib/console-conf/complete" | MATCH "console-conf has been disabled by the snapd system configuration"

        # hostname is set
        tests.nested exec "cat /var/snap/pc/common/debug.txt" | MATCH "hostname: foo"
        tests.nested exec "cat /etc/hostname" | MATCH "foo"
        tests.nested exec "hostname" | MATCH "foo"
    }

    check_core20_early_config

    echo "Transition to recover mode and check it again"
    recoverySystem=$(tests.nested exec "sudo snap recovery | grep -v Notes | grep -Po '^[0-9]+'")
    tests.nested transition "$recoverySystem" recover

    echo "Wait for the snap command to be available since recover mode needs to seed itself"
    tests.nested wait-for snap-command

    echo "Wait for snap seeding to be done"
    tests.nested exec "sudo snap wait system seed.loaded"

    check_core20_early_config
