summary: Refresh and revert the gadget and kernel snap

description: |
    This test validates the kernel and gadget snaps can be refreshed
    and reverted to the new snaps published to edge channel.

systems: [ubuntu-20.04-*]

environment:
    CORE_CHANNEL: beta
    CORE_REFRESH_CHANNEL: edge
    BUILD_SNAPD_FROM_CURRENT: false
    USE_CLOUD_INIT: true
    ENABLE_SECURE_BOOT: true
    ENABLE_TPM: true
    SNAP/kernel: pc-kernel
    SNAP/gadget: pc

prepare: |
    #shellcheck source=tests/lib/nested.sh
    . "$TESTSLIB/nested.sh"

    FROM_REV="$(get_snap_rev_for_channel "$SNAP" 20/$CORE_CHANNEL)"
    TO_REV="$(get_snap_rev_for_channel "$SNAP" 20/$CORE_REFRESH_CHANNEL)"

    if [ "$FROM_REV" = "$TO_REV" ]; then
        echo "Initial and target revisions are the same, skipping..."
        touch skip.test
        exit
    fi

    mkdir -p "$WORK_DIR/image"
    rm -f "$WORK_DIR/image/ubuntu-core.img"

    URL="$(get_cdimage_current_image_url 20 dangerous-$CORE_CHANNEL amd64)"
    wget -O "$WORK_DIR/image/ubuntu-core.img.xz" "$URL"
    unxz "$WORK_DIR/image/ubuntu-core.img.xz"

    configure_cloud_init_nested_core_vm_uc20
    start_nested_core_vm

restore: |
    #shellcheck source=tests/lib/nested.sh
    . "$TESTSLIB/nested.sh"

    if [ -f skip.test ]; then
        rm -f skip.test
        exit
    fi

    destroy_nested_vm
    cleanup_nested_env

    rm -f "$WORK_DIR/image/ubuntu-core.img"

execute: |
    #shellcheck source=tests/lib/nested.sh
    . "$TESTSLIB/nested.sh"

    if [ -f skip.test ]; then
        exit
    fi

    execute_remote "snap list $SNAP" | MATCH "^$SNAP .* 20/$CORE_CHANNEL .*"
    # The snap is refreshed
    execute_remote "sudo snap refresh --channel $CORE_REFRESH_CHANNEL $SNAP" || true

    # Wait for system reboot
    wait_for_no_ssh
    wait_for_ssh

    # Check the new version of the snaps is correct after the system reboot
    execute_remote "snap list $SNAP" | MATCH "^$SNAP .* 20/$CORE_REFRESH_CHANNEL .*"

    # The snap is reverted
    execute_remote "sudo snap revert $SNAP" || true

    # Wait for system reboot
    wait_for_no_ssh
    wait_for_ssh

    # Check the version of the snaps after the revert is correct
    execute_remote "snap list $SNAP" | MATCH "^$SNAP .* 20/$CORE_CHANNEL .*"
