summary: verify a simple UC2* scenario with 4k sector size

details: |
    Check the basic snap commands when the Ubuntu Core image has been
    created with 4k sector size

systems: [ubuntu-2*]

environment:
  NESTED_ENABLE_TPM: true
  NESTED_ENABLE_SECURE_BOOT: true
  NESTED_BUILD_SNAPD_FROM_CURRENT: true
  NESTED_DISK_PHYSICAL_BLOCK_SIZE: 4096
  NESTED_DISK_LOGICAL_BLOCK_SIZE/logical: 4096
  NESTED_DISK_LOGICAL_BLOCK_SIZE/physical_only: 512

prepare: |
    tests.nested build-image core
    tests.nested create-vm core

debug: |
    uname -a || true
    losetup -O +LOG-SEC || true
    lsblk -o +LOG-SEC,PHY-SEC || true

execute: |
    echo "Wait for the system to be seeded first"
    remote.exec "sudo snap wait system seed.loaded"

    echo "Ensure 'snap install' works"
    remote.exec "sudo snap install test-snapd-sh"

    echo "Ensure 'snap list' works and test-snapd-sh snap is installed"
    remote.exec "snap list" | MATCH test-snapd-sh

    echo "Ensure 'snap find' works"
    remote.exec "snap find test-snapd-sh" | MATCH ^test-snapd-sh

    echo "Ensure 'snap info' works"
    remote.exec "snap info test-snapd-sh" | MATCH '^name:\ +test-snapd-sh'

    echo "Ensure 'snap remove' works"
    remote.exec "sudo snap remove test-snapd-sh"

    echo "Ensure 'snap list' works and test-snapd-sh snap is removed"
    remote.exec "! snap list test-snapd-sh"

    echo "Verifying tpm working on the nested vm"
    remote.exec "sudo dmesg | grep -i tpm" | MATCH "efi: +SMBIOS=.* +TPMFinalLog=.*"
    remote.exec "test -e /sys/kernel/security/tpm0/binary_bios_measurements"

    echo "and secure boot is enabled on the nested vm"
    remote.exec "xxd /sys/firmware/efi/efivars/SecureBoot-8be4df61-93ca-11d2-aa0d-00e098032b8c" | MATCH "00000000: 0600 0000 01\s+....."

    echo "Ensure 'snap recovery show-keys' works as root"
    remote.exec "sudo snap recovery --show-keys" | MATCH 'recovery:\s+[0-9]{5}-[0-9]{5}-[0-9]{5}-[0-9]{5}-[0-9]{5}-[0-9]{5}-[0-9]{5}-[0-9]{5}'
    echo "But not as user (normal file permissions prevent this)"
    if remote.exec "snap recovery --show-keys"; then
        echo "snap recovery --show-key should not work as a user"
        exit 1
    fi
