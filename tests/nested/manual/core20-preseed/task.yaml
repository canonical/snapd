summary: Check that preseeding of core20 works and the image boots.

details: |
  This test checks that preseeding of UC20 image with ubuntu-image works
  and that the resulting image boots.

systems: [ubuntu-20.04-64]

environment:
  NESTED_UBUNTU_IMAGE_PRESEED_KEY: "\" (test)\""
  NESTED_ENABLE_TPM: false
  NESTED_ENABLE_SECURE_BOOT: true
  NESTED_BUILD_SNAPD_FROM_CURRENT: true
  NESTED_CUSTOM_MODEL: $TESTSLIB/assertions/developer1-20-dangerous.model
  # for the fake store
  STORE_ADDR: localhost:11028
  NESTED_FAKESTORE_BLOB_DIR: $(pwd)/fake-store-blobdir
  NESTED_UBUNTU_IMAGE_SNAPPY_FORCE_SAS_URL: http://localhost:11028

prepare: |
  "$TESTSTOOLS"/store-state setup-fake-store "$NESTED_FAKESTORE_BLOB_DIR"

  echo "Expose the needed assertions through the fakestore"
  cp "$TESTSLIB"/assertions/developer1.account "$NESTED_FAKESTORE_BLOB_DIR"/asserts
  cp "$TESTSLIB"/assertions/developer1.account-key "$NESTED_FAKESTORE_BLOB_DIR"/asserts
  cp "$TESTSLIB"/assertions/testrootorg-store.account-key "$NESTED_FAKESTORE_BLOB_DIR"/asserts

  "$TESTSTOOLS"/store-state teardown-staging-store

  echo "Creating a new key without a password"
  mkdir -p ~/.snap/gnupg
  gendeveloper1 show-key | gpg --homedir=~/.snap/gnupg --import

restore: |
  #shellcheck source=tests/lib/preseed.sh
  . "$TESTSLIB/preseed.sh"

  rm -rf ~/.snap/gnupg

  "$TESTSTOOLS"/store-state teardown-fake-store "$NESTED_FAKESTORE_BLOB_DIR"

debug: |
  # show if anything went wrong during seeding
  remote.exec "snap change 1" || true
  echo "gpg key id:$NESTED_UBUNTU_IMAGE_PRESEED_KEY"

execute: |
  # have snap use the fakestore for assertions (but nothing else)
  export SNAPPY_FORCE_SAS_URL=http://$STORE_ADDR

  echo "Running pre-seeding"
  tests.nested build-image core
  tests.nested create-vm core

  echo "Wait for snap seeding to be done"
  remote.exec "sudo snap wait system seed.loaded"

  echo "Verify that the image was preseeded"
  remote.exec "snap debug seeding" | MATCH "^preseeded: +true"

  echo "Check that no snaps are broken"
  remote.exec "snap list" | NOMATCH "broken"
  remote.exec "snap list" | MATCH "core20"
  remote.exec "snap list" | MATCH "snapd"
