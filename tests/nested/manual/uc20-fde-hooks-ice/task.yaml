summary: Check that fde-setup with feature "inline-cryto-engine" works

details: |
  Check that Ubuntu Core image boots properly and the system is encrypted
  when using fde-setup with feature "inline-cryto-engine"

systems: [ubuntu-22.04-64, ubuntu-24.04-64]

environment:
    NESTED_ENABLE_TPM: false
    NESTED_ENABLE_SECURE_BOOT: false
    NESTED_BUILD_SNAPD_FROM_CURRENT: true
    NESTED_ENABLE_OVMF: true

prepare: |
  echo "Build a kernel snap with the fde-setup hook with ICE support"
  # shellcheck source=tests/lib/prepare.sh
  . "$TESTSLIB/prepare.sh"

  # add wrapper around cryptsetup that filters "--inline-crypto-engine"
  # as qemu has no ICE driver
  snap download --basename=core22 core22
  unsquashfs -d core22 core22.snap
  mv core22/sbin/cryptsetup core22/sbin/cryptsetup.real
  cat >core22/sbin/cryptsetup <<'EOF'
  #!/usr/bin/python3
  import os,sys
  with open("/run/mnt/ubuntu-seed/cryptsetup.calls", "a") as fp:
    fp.write(f"{sys.argv}\n")
  needle = "--inline-crypto-engine"
  if needle in sys.argv:
    sys.argv.remove(needle)
  os.execv("/sbin/cryptsetup.real", sys.argv)
  EOF
  chmod +x core22/sbin/cryptsetup
  # ensure the install-mode.log.gz contains all DEBUG messages
  echo "SNAPD_DEBUG=1" >> core22/etc/environment
  snap pack ./core22 --filename=core22-new.snap
  mv core22-new.snap "$(tests.nested get extra-snaps-path)" 

  # build fde-reveal-key hook into the "extra-initrd"
  # nested_create_core_vm picks this up
  mkdir -p ./extra-initrd/usr/bin/
  go build -o ./extra-initrd/usr/bin/fde-reveal-key "$TESTSLIB"/fde-setup-hook/fde-setup.go
  (cd ./extra-initrd/usr/bin/ ; ln -s fde-reveal-key fde-device-unlock)
  # create fde-setup hook inside the kernel and hint that "ice"
  # support should be enabled
  mkdir -p ./extra-kernel-snap/meta/hooks
  go build -o ./extra-kernel-snap/meta/hooks/fde-setup "$TESTSLIB"/fde-setup-hook/fde-setup.go
  (cd ./extra-kernel-snap/meta/hooks ; touch enable-ice-support; chmod +x enable-ice-support)

  tests.nested build-image core
  tests.nested create-vm core

execute: |
  echo "Check that we have an encrypted system"
  remote.exec "find /dev/mapper" | MATCH ubuntu-data
  remote.exec "test -e /run/mnt/ubuntu-boot/device/fde/ubuntu-data.sealed-key"
  echo "Check that ICE was used"
  remote.exec "zcat /var/log/install-mode.log.gz" | MATCH "node.* uses ICE: true"
  echo "Check that the --inline-crypto-engine flag was passed"
  remote.exec "cat /run/mnt/ubuntu-seed/cryptsetup.calls" | MATCH "inline-crypto-engine"
