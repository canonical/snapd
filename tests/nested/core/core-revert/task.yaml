summary: core revert test

kill-timeout: 30m

systems: [ubuntu-16.04-64]

environment:
    IMAGE_FILE: /tmp/work-dir/image/ubuntu-core-new.img

debug: |
    systemctl stop nested-vm || true
    if [ -f "$IMAGE_FILE" ]; then
        loops=$(kpartx -avs "$IMAGE_FILE" | cut -d' ' -f 3)

        part=$(echo "$loops" | tail -1)

        tmp=$(mktemp -d)
        mount "/dev/mapper/$part" "$tmp"

        grep --text "hsearch_r failed for.* No such process" "$tmp/system-data/var/log/syslog"

        umount "$tmp"
        rm -rf "$tmp"
        kpartx -ds "$IMAGE_FILE"
    fi

execute: |
    #shellcheck source=tests/lib/nested.sh
    . "$TESTSLIB/nested.sh"

    execute_remote "snap info core" | MATCH "tracking: +latest/${CORE_CHANNEL}"
    execute_remote "sudo snap refresh --${CORE_REFRESH_CHANNEL} core" || true

    if ! wait_for_ssh; then
        echo "ssh not stablished, exiting..."
        exit 1
    fi

    while ! execute_remote "snap changes" | MATCH "Done.*Refresh \"core\" snap from \"${CORE_REFRESH_CHANNEL}\" channel"; do
        sleep 1
    done
    execute_remote "snap info core" | MATCH "tracking: +latest/${CORE_REFRESH_CHANNEL}"

    # sanity check, no refresh should be done here but the command shouldn't fail
    execute_remote "sudo snap refresh"
    execute_remote "sudo snap revert core" || true

    if ! wait_for_ssh; then
        echo "ssh not stablished, exiting..."
        exit 1
    fi

    while ! execute_remote "snap changes" | MATCH "Done.*Revert \"core\" snap"; do sleep 1 ; done
    execute_remote "snap info core" | MATCH "tracking: +latest/${CORE_REFRESH_CHANNEL}"
    execute_remote "ifconfig" | MATCH eth0


    execute_remote "sudo snap refresh"
    execute_remote "sudo cat /var/log/syslog" | not MATCH "hsearch_r failed for.* No such process"
