summary: Verify fault injection with a reboot action

details: |
    The test injects a reboot fault during link snap and verifies that a reboot
    actually happens.

systems: [ubuntu-20.04-64]

execute: |
    #shellcheck source=tests/lib/nested.sh
    . "$TESTSLIB/nested.sh"

    # automatically cleaned up in restore
    echo "Inject a reboot on link-snap"
    cat <<EOF > fault-inject.conf
    [Service]
    Environment=SNAPPY_TESTING=1
    Environment=SNAPD_FAULT_INJECT=link-snap:reboot
    EOF

    echo "Wait for the system to be seeded first"
    tests.nested exec "sudo snap wait system seed.loaded"

    tests.nested copy fault-inject.conf
    tests.nested exec "sudo mkdir -p /etc/systemd/system/snapd.service.d"
    tests.nested exec "sudo cp -v fault-inject.conf /etc/systemd/system/snapd.service.d/"
    tests.nested exec "sudo systemctl daemon-reload"
    tests.nested exec "sudo systemctl restart snapd.service"

    boot_id="$( nested_get_boot_id )"
    echo "We should observe a reboot being triggered when linking the snap"
    change_id="$(tests.nested exec 'sudo snap install --no-wait test-snapd-sh')"

    echo "Wait for system reboot"
    tests.nested wait-for reboot "$boot_id"

    echo "Ensure that stamp file is present"
    tests.nested exec "test -e /var/lib/snapd/faults/link-snap:reboot"

    echo "And snap install completes"
    tests.nested exec "snap watch $change_id"

    echo "Remove the snap now"
    tests.nested exec "sudo snap remove test-snapd-sh"

    echo "Inject a panic on link-snap"
    # prepare a variant with a panic
    cat <<EOF > fault-inject.conf
    [Service]
    Environment=SNAPPY_TESTING=1
    Environment=SNAPD_FAULT_INJECT=link-snap:panic
    EOF
    # replace the existing file
    tests.nested copy fault-inject.conf
    tests.nested exec "sudo cp -v fault-inject.conf /etc/systemd/system/snapd.service.d/"
    tests.nested exec "sudo systemctl daemon-reload"
    tests.nested exec "sudo systemctl restart snapd.service"

    echo "Install the snap again"
    change_id="$(tests.nested exec 'sudo snap install --no-wait test-snapd-sh')"
    tests.nested exec "snap watch $change_id"
    tests.nested exec systemctl show --property NRestarts snapd.service | MATCH NRestarts=1
    tests.nested exec sudo journalctl -u snapd.service | MATCH 'panic: fault "link-snap:panic"'
