summary: Check that the core snap can be refreshed on a core device

details: |
    This test checks that the core snap can be refreshed from an installed
    revision to a new one. It expects to find a new snap revision in the
    channel pointed by the NESTED_CORE_REFRESH_CHANNEL env var.

systems: [ubuntu-16.04-64]
    
execute: |
    INITIAL_REV="$(tests.nested snap-rev core "${NESTED_CORE_CHANNEL}")"
    NEW_REV="$(tests.nested snap-rev core "${NESTED_CORE_REFRESH_CHANNEL}")"

    if [ "$INITIAL_REV" = "$NEW_REV" ]; then
        echo "Initial and target revisions are the same, skipping..."
        exit
    fi

    echo "Install test snap"
    tests.nested exec "sudo snap install test-snapd-sh"

    echo "Ensure we have a good starting place"
    tests.nested exec "test-snapd-sh.sh -c 'echo hello'" | MATCH hello

    echo "Go to known good starting place"
    tests.nested exec "snap download core --${NESTED_CORE_CHANNEL}"
    tests.nested exec "sudo snap ack core_*.assert"
    tests.nested exec "sudo snap install core_*.snap"

    echo "Check the initial core is installed and snaps can be executed"
    test "$(tests.nested snap-rev core)" = "${INITIAL_REV}"

    echo "Ensure test-snapd-sh works"
    tests.nested exec "test-snapd-sh.sh -c 'echo hello'" | MATCH hello

    echo "Refresh core snap to $NESTED_CORE_REFRESH_CHANNEL"
    refresh_to_new_core "$NESTED_CORE_REFRESH_CHANNEL"

    echo "After refresh, check new core is installed"
    test "$(tests.nested snap-rev core)" = "${NEW_REV}"

    echo "Ensure test-snapd-sh works"
    tests.nested exec "test-snapd-sh.sh -c 'echo hello'" | MATCH hello

    echo "Revert core"
    tests.nested exec "sudo snap revert core" || true
    tests.nested wait-for no-ssh
    nested_tests.nested wait-for ssh

    echo "After revert, check initial core is installed"
    test "$(tests.nested snap-rev core)" = "${INITIAL_REV}"

    echo "Ensure test-snapd-sh works"
    tests.nested exec "test-snapd-sh.sh -c 'echo hello'" | MATCH hello
