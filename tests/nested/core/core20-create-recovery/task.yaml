summary: verify creating recovery system on UC20

systems: [ubuntu-20.04-64]

prepare: |
    tests.nested exec sudo snap install test-snapd-curl --edge --devmode

execute: |
    echo "Create a recovery system with a typical recovery system label"
    boot_id="$( tests.nested boot-id )"
    echo '{"action":"create-recovery-system","params":{"recovery-system-label":"1234"}}' | \
        tests.nested exec sudo test-snapd-curl.curl -X POST -d @- --unix-socket /run/snapd.socket http://localhost/v2/debug > change.out
    REMOTE_CHG_ID=$(jq -r .change < change.out)
    tests.nested wait-for reboot "${boot_id}"
    tests.nested exec sudo snap watch "${REMOTE_CHG_ID}"

    echo "Verify the system is back in run mode"
    tests.nested exec "sudo cat /proc/cmdline" | MATCH snapd_recovery_mode=run

    tests.nested exec "test -f /run/mnt/ubuntu-seed/systems/1234/model"
    tests.nested exec "sudo cat /var/lib/snapd/modeenv" > modeenv
    MATCH 'current_recovery_systems=.*,1234' < modeenv
    MATCH 'good_recovery_systems=.*,1234' < modeenv

    echo "Create a recovery system with an alternative recovery system label"
    boot_id="$( tests.nested boot-id )"
    echo '{"action":"create-recovery-system","params":{"recovery-system-label":"1234-1"}}' | \
        tests.nested exec sudo test-snapd-curl.curl -X POST -d @- --unix-socket /run/snapd.socket http://localhost/v2/debug > change.out
    REMOTE_CHG_ID=$(jq -r .change < change.out)
    tests.nested wait-for reboot "${boot_id}"
    tests.nested exec sudo snap watch "${REMOTE_CHG_ID}"

    echo "Verify the system is back in run mode again"
    tests.nested exec "sudo cat /proc/cmdline" | MATCH snapd_recovery_mode=run

    tests.nested exec "test -f /run/mnt/ubuntu-seed/systems/1234-1/model"
    tests.nested exec "sudo cat /var/lib/snapd/modeenv" > modeenv
    MATCH 'current_recovery_systems=.*,1234-1' < modeenv
    MATCH 'good_recovery_systems=.*,1234-1' < modeenv
