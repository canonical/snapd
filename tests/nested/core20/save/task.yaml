summary: Check that ubuntu-save is set up in a UC20 device

description: |
    This test checks that ubuntu-save is preset and set up correctly in a UC20
    device

execute: |
    #shellcheck source=tests/lib/nested.sh
    . "$TESTSLIB/nested.sh"

    # check that ubuntu-save is mounted and has a reasonable amount of free
    # space, example df output:
    # Filesystem                                                   1B-blocks  Used Available Use% Mounted on
    # /dev/mapper/ubuntu-save-0bed13ef-f71f-418f-b046-b1ce32dd04a7   5079040 28672   4390912   1% /run/mnt/ubuntu-save
    save_out="$(nested_exec "df -B1 /run/mnt/ubuntu-save | tail -1")"
    echo "$save_out" | MATCH '^/dev/mapper/ubuntu-save-[0-9a-z-]+\s+'
    save_size="$(echo "$save_out" | awk '{print $4}')"
    echo "check  there is at least 4MB of free space available on ubuntu-save"
    test "$save_size" -gt "$((4*1024*1024))"

    # leave a canary
    nested_exec "sudo touch /run/mnt/ubuntu-save/canary"

    # TODO:UC20: verify that ubuntu-save is bind mounted under /var/lib/snapd/save

    # transition to recovery mode and check again
    boot_id="$(nested_get_boot_id)"
    # shellcheck disable=SC2016
    nested_exec 'sudo snap reboot --recover $(sudo snap recovery | grep -v Label | awk "{print \$1}")'
    nested_wait_for_reboot "${boot_id}"
    # verify in recover mode
    nested_exec 'sudo cat /proc/cmdline' | MATCH snapd_recovery_mode=recover

    recover_save_out="$(nested_exec "df -B1 /run/mnt/ubuntu-save | tail -1")"
    echo "$recover_save_out" | MATCH '^/dev/mapper/ubuntu-save-[0-9a-z-]+\s+'
    # and a canary exists
    nested_exec "test -f /run/mnt/ubuntu-save/canary"
