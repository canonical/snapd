#!/bin/sh

set -ue

echo "Setting and getting attribute value from prepare-plug-consumer hook"

# Read the value of static 'consumer-attr-1' attribute
if ! output=$(snapctl get :consumer consumer-attr-1); then
    echo "Expected snapctl get to be able to read the value of own 'consumer-attr1' attribute"
    exit 1
fi
expected_output="consumer-value-1"
if [ "$output" != "$expected_output" ]; then
    echo "Expected output to be '$expected_output', but it was '$output'"
    exit 1
fi

# Set a dynamic attribute.
if ! snapctl set :consumer consumer-attr-3=consumer-value-3; then
    echo "Expected snapctl set to be able to set the value of own 'consumer-attr-3' attribute"
    exit 1
fi

# Read dynamic attribute
if ! output=$(snapctl get :consumer consumer-attr-3); then
    echo "Expected snapctl get to be able to read the value of own dynamic attribute"
    exit 1
fi
expected_output="consumer-value-3"
if [ "$output" != "$expected_output" ]; then
    echo "Expected output to be '$expected_output', but it was '$output'"
    exit 1
fi

# Count executions of the hook using snap config; store execcount in the config and in the dynamic attribute of the interface
count=$(snapctl get execcount)
count=$(expr $count + 1)
snapctl set execcount=$count
snapctl set :consumer execcount=$count

touch "$SNAP_COMMON/prepare-plug-consumer-done"
