#!/usr/bin/env python3

import os
import struct

UHID_EVENT_FMT_CREATE2  = '< L 128s 64s 64s H H L L L L 4096s'
U2FHID_REPORT_DESCRIPTOR = bytes([
    0x06, 0xd0, 0xf1,   # Usage Page (0xf1d0)
    0x09, 0x01,         # Usage (0x01)
    0xa1, 0x01,         # Collection (Application)
    0x09, 0x20,         #   Usage (FIDO Usage Data In)
    0x15, 0x00,         #     Logical Min (0)
    0x26, 0xff, 0x00,   #     Logical Max (255)
    0x75, 0x08,         #     Report Size (8)
    0x95, 0x40,         #     Report Count (64)
    0x81, 0x02,         #     Input (Data, Absolute, Variable)
    0x09, 0x21,         #   Usage (FIDO Usage Data Out)
    0x15, 0x00,         #     Logical Min (0)
    0x26, 0xff, 0x00,   #     Logical Max (255)
    0x75, 0x08,         #     Report Size (8)
    0x95, 0x40,         #     Report Count (64)
    0x91, 0x02,         #     Output (Data, Absolute, Variable)
    0xc0                # End Collection
])


def uhid_generate_create2_event(fd):
    ev_type = 11
    name = b''
    phys = b''
    uniq = b''
    rd_size = len(U2FHID_REPORT_DESCRIPTOR)
    bus = 0
    vendor = 0x0000
    product = 0x0000
    version = 0
    country = 0
    rd_data = U2FHID_REPORT_DESCRIPTOR

    buf = struct.pack(
        UHID_EVENT_FMT_CREATE2, ev_type, name, phys, uniq, rd_size, bus,
        vendor, product, version, country, rd_data
    )
    n = os.write(fd, buf)
    assert n == len(buf)

    print('Device created on /dev/uhid')


if __name__ == "__main__":
    fd = os.open('/dev/uhid', os.O_RDWR)
    try:
        uhid_generate_create2_event(fd)
    finally:
        os.close(fd)
