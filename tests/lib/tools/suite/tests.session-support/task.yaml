summary: check the session support status of various distributions

details: |
    Check the tests.session tools properly indicates the system and session status
    of various distributions

execute: |

    # In case ubuntu core is not already built in prepare helper, the check for uc18
    # is the same than for ubuntu 18.04
    if [[ "$SPREAD_SYSTEM" = ubuntu-core-18-* ]]; then
        if MATCH '^ID=ubuntu$' < /etc/os-release; then
            exit 0
        fi
    fi

    case "$SPREAD_SYSTEM/$USER" in
        amazon-linux-2-*|centos-7-*)
            tests.session has-system-systemd-and-dbus | MATCH 'ok'
            tests.session has-system-systemd-and-dbus
            # Amazon Linux 2 which is based on CentOS 7 both disable user
            # session features of systemd as, at the time, this was a feature
            # that was not certain to stay in systemd, and RedHat did not want
            # to commit to supporting it.
            tests.session has-session-systemd-and-dbus | MATCH 'no user dbus.socket'
            not tests.session has-session-systemd-and-dbus
            ;;
        ubuntu-14.04-*)
            # Ubuntu 14.04 does not use systemd. 
            tests.session has-system-systemd-and-dbus | MATCH 'no busctl'
            not tests.session has-system-systemd-and-dbus
            tests.session has-session-systemd-and-dbus | MATCH 'no busctl'
            not tests.session has-session-systemd-and-dbus
            ;;
        ubuntu-16.04-*)
            tests.session has-system-systemd-and-dbus | MATCH 'ok'
            tests.session has-system-systemd-and-dbus
            # Ubuntu 16.04 does not use systemd for user sessions, and does not
            # ship the package providing dbus.socket in systemd --user by
            # default, but we install it in the project preparation phase.
            tests.session has-session-systemd-and-dbus | MATCH 'ok'
            tests.session has-session-systemd-and-dbus
            ;;
        ubuntu-core-1[68]-*)
            tests.session has-system-systemd-and-dbus | MATCH 'ok'
            tests.session has-system-systemd-and-dbus
            # Ubuntu Core 16 did not support user sessions.
            # Note that Ubuntu Core 18 and later are in the default case down
            # below, and do support this feature.
            tests.session has-session-systemd-and-dbus | MATCH 'no user dbus.socket'
            not tests.session has-session-systemd-and-dbus
            ;;
        *)
            # The list above contains just the exceptions.
            # By default everything should work.
            tests.session has-system-systemd-and-dbus | MATCH 'ok'
            tests.session has-system-systemd-and-dbus
            tests.session has-session-systemd-and-dbus | MATCH 'ok'
            tests.session has-session-systemd-and-dbus
            ;;
    esac
