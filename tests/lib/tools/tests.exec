#!/bin/bash

set -eu

show_help() {
    echo "usage: tests.exec skip-test [MSG]"
    echo "usage: tests.exec is-skipped"
    echo
    echo "Supported commands:"
    echo "    skip-test:  indicates the test has to be skipped and saves the raeson"
    echo "    is-skipped: check if the test has to be skipped and prints the raeson"
}

skip_test() {
    local raeson="${1:-}"
    echo "$raeson" > tests.exec
}

is_skipped() {
    if [ -f tests.exec ]; then
        echo "skip raeson: $(cat tests.exec)"
        return 0
    fi
    return 1
}

main() {
    if [ $# -eq 0 ]; then
        show_help
        exit 0
    fi

    local subcommand="$1"
    local action=
    while [ $# -gt 0 ]; do
        case "$subcommand" in
            -h|--help)
                show_help
                exit 0
                ;;
            *)
                action=$(echo "$subcommand" | tr '-' '_')
                shift
                break
                ;;
        esac
    done

    if [ -z "$(declare -f "$action")" ]; then
        echo "tests.exec: no such command: $subcommand"
        show_help
        exit 1
    fi

    "$action" "$@"
}

main "$@"
