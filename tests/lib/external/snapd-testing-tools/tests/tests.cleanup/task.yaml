summary: tests for the tests.cleanup tool

systems: [ubuntu-18.04-64]

execute: |
    # Without any arguments a help message is printed.
    tests.cleanup | MATCH "usage: tests.cleanup defer <cmd> \[args\]"
    tests.cleanup | MATCH "       tests.cleanup pop"
    tests.cleanup | MATCH "       tests.cleanup restore"

    # Both -h and --help are also recognized.
    tests.cleanup --help | MATCH "usage: tests.cleanup"
    tests.cleanup -h | MATCH "usage: tests.cleanup"

    # Unknown commands and options are reported
    tests.cleanup --foo 2>&1 | MATCH "tests.cleanup: unknown option --foo"
    tests.cleanup foo 2>&1 | MATCH "tests.cleanup: unknown command foo"

    # Normal usage consists of a sequence of defer+, restore
    # Note that restore runs the deferred commands in the opposite order.
    tests.cleanup defer echo one
    tests.cleanup defer echo two
    tests.cleanup defer echo three
    tests.cleanup restore > restore.log
    diff -u restore.log - <<EXPECTED
    three
    two
    one
    EXPECTED

    # Restoring twice is possible
    tests.cleanup restore
    tests.cleanup restore

    # Deferred commands are appended to defer.sh
    test ! -e defer.sh
    tests.cleanup defer echo a b c
    tests.cleanup defer echo 1 2 3
    diff -u defer.sh - <<EXPECTED
    echo a b c
    echo 1 2 3
    EXPECTED
    tests.cleanup restore
    test ! -e defer.sh

    # Deferred commands can fail their exit code is retained and the defer
    # stack is not purged.
    tests.cleanup defer false
    not tests.cleanup restore
    tests.cleanup restore 2>&1 | MATCH 'tests.cleanup: deferred command "false" failed with exit code 1'
    test -e defer.sh

    # Clean the defer.sh
    rm -f defer.sh

    # Deferred commands can be popped and executed one by one. This is useful
    # to ensure correctness in case of failure while still allowing precise
    # resource management.
    tests.cleanup defer echo popped
    tests.cleanup pop | MATCH popped

    # Popping removes the last command from the stack
    tests.cleanup defer echo cmd-a
    tests.cleanup defer echo cmd-b
    tests.cleanup defer echo cmd-c
    tests.cleanup pop | MATCH cmd-c
    diff -u defer.sh - <<EXPECTED
    echo cmd-a
    echo cmd-b
    EXPECTED
    tests.cleanup restore

    # Popping a command when there isn't any fails with an appropriate message
    tests.cleanup pop 2>&1 | MATCH 'tests.cleanup: cannot pop, cleanup stack is empty'
    not tests.cleanup pop
