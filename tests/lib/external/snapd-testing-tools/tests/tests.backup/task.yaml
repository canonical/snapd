summary: tests for the tests.backup tool

execute: |
    # Without any arguments a help message is printed.
    tests.backup | MATCH "usage: tests.backup prepare"
    tests.backup | MATCH "       tests.backup restore"

    # Both -h and --help are recognized.
    tests.backup --help | MATCH "usage: tests.backup"
    tests.backup -h | MATCH "usage: tests.backup"

    # Unknown commands and options are reported
    tests.backup --foo 2>&1 | MATCH "tests.backup: unknown option --foo"
    tests.backup foo 2>&1 | MATCH "tests.backup: unknown command foo"

    # Create a file and a directory inside the current path
    touch testfile-old
    mkdir testdir-old

    # Check prepare creates a backup for the current directory
    test ! -f "${PWD}.tar"
    tests.backup prepare
    test -f "${PWD}.tar"

    # Delete old data and create new data
    rm "${PWD}/testfile-old"
    rm -r testdir-old
    touch testfile-new
    mkdir testdir-new

    # Restore the backup
    tests.backup restore

    # Check old files and directories are restored after restore
    test -e testfile-old
    test -e testdir-old

    # Check new files and directories are gone after restore
    test ! -e testfile-new
    test ! -e testdir-new

    # Check the backup file is gone
    test ! -e "${PWD}.tar"

    # Validate restore cannot be called if backup file does not exist
    tests.backup restore 2>&1 | MATCH "tests.backup: cannot restore ${PWD}.tar, the file does not exist"

    # Check the tool support a path to prepare and restore
    TMP_DIR=$(mktemp -d)
    tests.backup prepare "$TMP_DIR"
    test -e "${TMP_DIR}.tar"
    tests.backup restore "$TMP_DIR"
    test ! -e "${TMP_DIR}.tar"

    # Validate prepare cannot be called if backup dir does not exist
    rm -rf "$TMP_DIR"
    tests.backup prepare "$TMP_DIR" 2>&1 | MATCH "tests.backup: cannot backup $TMP_DIR, not a directory"
