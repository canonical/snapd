summary: smoke test for the os.query tool

details: |
    Check the os.query tool properly detects the current system. Also
    verify the version comparison works.

backends: [google, openstack]

execute: |
    os.query --help | MATCH 'usage: os.query is-core, is-classic'
    os.query -h | MATCH 'usage: os.query is-core, is-classic'

    case "$SPREAD_SYSTEM" in
        ubuntu-14.04-64)
            os.query is-trusty
            os.query is-classic
            os.query is-ubuntu 14.04
            ! os.query is-ubuntu 18.04
            ! os.query is-core
            ! os.query is-s390x
            ;;
        ubuntu-16.04-64)
            os.query is-xenial
            os.query is-classic
            os.query is-ubuntu 16.04
            ! os.query is-ubuntu 14.04
            ! os.query is-core
            ;;
        ubuntu-18.04-32)
            os.query is-bionic
            os.query is-classic
            os.query is-ubuntu 18.04
            ! os.query is-ubuntu 14.04
            ! os.query is-core
            os.query is-pc-i386
            ;;
        ubuntu-18.04-64)
            os.query is-bionic
            os.query is-classic
            os.query is-ubuntu 18.04
            ! os.query is-ubuntu 14.04
            ! os.query is-core
            os.query is-pc-amd64

            # check ubuntu comparisons
            os.query is-ubuntu-ge 14.04
            os.query is-ubuntu-ge 18.04
            ! os.query is-ubuntu-ge 20.04
            os.query is-ubuntu-gt 16.04
            ! os.query is-ubuntu-gt 18.04
            os.query is-ubuntu-le 18.04
            os.query is-ubuntu-le 20.04
            ! os.query is-ubuntu-le 16.04
            os.query is-ubuntu-lt 20.04
            ! os.query is-ubuntu-lt 18.04
            os.query is-ubuntu-lt 2>&1 | MATCH "os.query: version id is expected"
            os.query is-ubuntu-lt 20.04-64 2>&1 | MATCH 'os.query: invalid version format "20.04-64" provided'

            # Check kernel comparisons
            os.query is-kernel-gt 4
            os.query is-kernel-gt 4.15
            os.query is-kernel-gt 4.15.0
            # 18.04 kernel might be something like 4.15.0.213.196 so don't
            # assume 4.15.0.X or 4.15.0-X necessarily work (ordering of . vs -)
            os.query is-kernel-gt 4.14.1.2
            os.query is-kernel-gt 4.14.1-2
            os.query is-kernel-gt 4.14.1-foo
            os.query is-kernel-ge 4
            os.query is-kernel-ge 4.15
            os.query is-kernel-ge 4.15.0
            os.query is-kernel-ge 4.14.1.2
            os.query is-kernel-ge 4.14.1-2
            os.query is-kernel-ge 4.14.1-foo
            os.query is-kernel-lt 6
            os.query is-kernel-lt 5.5
            os.query is-kernel-lt 5.4.1
            os.query is-kernel-lt 5.4.1.0
            os.query is-kernel-lt 5.4.1-0
            os.query is-kernel-lt 5.4.1-foo
            os.query is-kernel-le 6
            os.query is-kernel-le 5.5
            os.query is-kernel-le 5.4.1
            os.query is-kernel-le 5.4.1.0
            os.query is-kernel-le 5.4.1-0
            os.query is-kernel-le 5.4.1-foo

            ! os.query is-kernel-lt 4
            ! os.query is-kernel-lt 4.15
            ! os.query is-kernel-lt 4.15.0
            ! os.query is-kernel-le 4
            ! os.query is-kernel-le 4.15
            ! os.query is-kernel-le 4.15.0
            ! os.query is-kernel-gt 6
            ! os.query is-kernel-gt 5.5
            ! os.query is-kernel-gt 5.4.1
            ! os.query is-kernel-ge 6
            ! os.query is-kernel-ge 5.5
            ! os.query is-kernel-ge 5.4.1

            # Check that the exact kernel version works for -ge and -le
            os.query is-kernel-ge "$(uname -r)"
            os.query is-kernel-le "$(uname -r)"

            os.query is-kernel-le | MATCH 'os.query: version is expected'
            os.query is-kernel-le foo | MATCH 'os.query: invalid kernel version format "foo" provided'
            os.query is-kernel-le 1.foo | MATCH 'os.query: invalid kernel version format "1.foo" provided'
            os.query is-kernel-le 1.2.foo | MATCH 'os.query: invalid kernel version format "1.2.foo" provided'
            os.query is-kernel-le 1.2.3foo | MATCH 'os.query: invalid kernel version format "1.2.3foo" provided'
            ;;
        ubuntu-20.04-64)
            os.query is-focal
            os.query is-ubuntu
            os.query is-ubuntu 20.04
            ! os.query is-ubuntu 21.04
            ! os.query is-debian
            os.query is-classic
            ! os.query is-core
            ! os.query is-core-ge 20
            ! os.query is-core-le 20
            os.query is-pc-amd64
            ! os.query is-arm
            ;;
        ubuntu-22.04-64)
            os.query is-jammy
            os.query is-classic
            os.query is-ubuntu 22.04
            ! os.query is-ubuntu 20.04
            ! os.query is-core
            ! os.query is-core-ge 20
            ! os.query is-core-le 20
            ! os.query is-core-le 24
            ! os.query is-core-ge 24
            ;;
        ubuntu-24.04-64)
            os.query is-classic
            os.query is-ubuntu 24.04
            ! os.query is-ubuntu 21.04
            ! os.query is-core

            # Check kernel comparison
            os.query is-kernel-gt 6
            os.query is-kernel-gt 6.8
            os.query is-kernel-gt 6.8.0
            os.query is-kernel-ge 6
            os.query is-kernel-ge 6.8
            os.query is-kernel-ge 6.8.0
            ! os.query is-kernel-lt 6
            ! os.query is-kernel-lt 6.8
            ! os.query is-kernel-lt 6.8.0
            ! os.query is-kernel-le 6
            ! os.query is-kernel-le 6.8
            ! os.query is-kernel-le 6.8.0
            # Assume that the noble kernel will never exceed 8.0.0
            os.query is-kernel-lt 8
            os.query is-kernel-lt 8.0
            os.query is-kernel-lt 8.0.0
            os.query is-kernel-le 8
            os.query is-kernel-le 8.0
            os.query is-kernel-le 8.0.0
            ! os.query is-kernel-gt 8
            ! os.query is-kernel-gt 8.0
            ! os.query is-kernel-gt 8.0.0
            ! os.query is-kernel-ge 8
            ! os.query is-kernel-ge 8.0
            ! os.query is-kernel-ge 8.0.0
            # Check that the exact kernel version works for -ge and -le
            os.query is-kernel-ge "$(uname -r)"
            os.query is-kernel-le "$(uname -r)"
            ;;
        debian-11-64)
            os.query is-debian
            os.query is-debian 11
            os.query is-classic
            ! os.query is-core
            ;;
        debian-12-64)
            os.query is-debian
            os.query is-debian 12
            os.query is-classic
            ! os.query is-core
            ;;
        debian-sid-64)
            os.query is-debian
            os.query is-debian sid
            os.query is-classic
            ! os.query is-core
            ;;
        fedora-39-64)
            os.query is-fedora
            os.query is-fedora 39
            ! os.query is-fedora rawhide
            os.query is-classic
            ! os.query is-core
            ;;
        fedora-40-64)
            os.query is-fedora
            os.query is-fedora 40
            ! os.query is-fedora rawhide
            os.query is-classic
            ! os.query is-core
            ;;
        fedora-41-64)
            os.query is-fedora
            os.query is-fedora 41
            ! os.query is-fedora rawhide
            os.query is-classic
            ! os.query is-core
            ;;
        arch-linux-64)
            os.query is-arch-linux
            os.query is-classic
            ! os.query is-core

            os.query is-kernel-gt 6
            os.query is-kernel-gt 6.11
            os.query is-kernel-gt 6.11.1
            os.query is-kernel-ge 6
            os.query is-kernel-ge 6.11
            os.query is-kernel-ge 6.11.1
            ! os.query is-kernel-lt 6
            ! os.query is-kernel-lt 6.11
            ! os.query is-kernel-lt 6.11.1
            ! os.query is-kernel-le 6
            ! os.query is-kernel-le 6.11
            ! os.query is-kernel-le 6.11.1
            # Kernel 45.0.0 should take a very long time...
            os.query is-kernel-lt 45
            os.query is-kernel-lt 45.1
            os.query is-kernel-lt 45.1.2
            os.query is-kernel-le 45
            os.query is-kernel-le 45.1
            os.query is-kernel-le 45.1.2
            ! os.query is-kernel-gt 45
            ! os.query is-kernel-gt 45.1
            ! os.query is-kernel-gt 45.1.2
            ! os.query is-kernel-ge 45
            ! os.query is-kernel-ge 45.1
            ! os.query is-kernel-ge 45.1.2
            # Check that the exact kernel version works for -ge and -le
            os.query is-kernel-ge "$(uname -r)"
            os.query is-kernel-le "$(uname -r)"
            ;;
        amazon-linux-2-64)
            os.query is-amazon-linux
            os.query is-amazon-linux 2
            ! os.query is-amazon-linux 2023
            os.query is-classic
            ! os.query is-core
            ;;
        amazon-linux-2023-64)
            os.query is-amazon-linux
            os.query is-amazon-linux 2023
            ! os.query is-amazon-linux 2
            os.query is-classic
            ! os.query is-core
            ;;
        centos-9-64)
            os.query is-centos 9
            os.query is-centos
            ! os.query is-core
            ;;
        opensuse-15.5-64)
            os.query is-opensuse
            os.query is-opensuse 15.5
            os.query is-classic
            ! os.query is-core
            ;;
        opensuse-15.6-64)
            os.query is-opensuse
            os.query is-opensuse 15.6
            os.query is-classic
            ! os.query is-core
            ;;
        opensuse-tumbleweed-64)
            os.query is-opensuse
            os.query is-opensuse tumbleweed
            os.query is-classic
            ! os.query is-core
            ;;
        *)
            echo "System $SPREAD_SYSTEM not supported"
            exit 1
            ;;
    esac
