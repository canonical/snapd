summary: test for the log analyzer tool

# Github actions agents are just running in bionic and focal
systems: [ubuntu-18.04-64, ubuntu-20.04-64]

execute: |
    log-parser --help | MATCH 'usage: log-parser \[-h\] \[-c CUT\]'
    log-parser -h | MATCH 'usage: log-parser \[-h\] \[-c CUT\]'
    
    # Check results when the log just contains successful tests
    log-parser all-successful.log.spread
    TESTS_SUCCESSFUL=$(jq -r '.[] | select( .type == "result") | select( .result_type == "Successful") | .number' spread-results.json)
    test "$TESTS_SUCCESSFUL" = "434"
    
    # Check results when the log contains failed tests
    log-parser with-failed.log.spread
    TESTS_SUCCESSFUL=$(jq -r '.[] | select( .type == "result") | select( .result_type == "Successful") | .number' spread-results.json)
    TESTS_FAILED=$(jq -r '.[] | select( .type == "result") | select( .result_type == "Failed") | .number' spread-results.json)
    test "$TESTS_SUCCESSFUL" = "434"
    test "$TESTS_FAILED" = "1"
    
    # Check results when the log contains failed tests
    log-parser all-aborted.log.spread
    TESTS_SUCCESSFUL=$(jq -r '.[] | select( .type == "result") | select( .result_type == "Successful") | .number' spread-results.json)
    TESTS_FAILED=$(jq -r '.[] | select( .type == "result") | select( .result_type == "Failed") | .number' spread-results.json)
    TESTS_ABORTED=$(jq -r '.[] | select( .type == "result") | select( .result_type == "Aborted") | .number' spread-results.json)
    test "$TESTS_SUCCESSFUL" = "0"
    test -z "$TESTS_FAILED"
    test "$TESTS_ABORTED" = "505"
    
    # Check results when the log contains aborted, failed and successful TESTS
    log-parser with-failed-and-aborted.log.spread
    TESTS_SUCCESSFUL=$(jq -r '.[] | select( .type == "result") | select( .result_type == "Successful") | .number' spread-results.json)
    TESTS_FAILED_TASKS=$(jq -r '.[] | select( .type == "result") | select( .result_type == "Failed")  | select(.level == "tasks") | .number' spread-results.json)
    TESTS_FAILED_TASK=$(jq -r '.[] | select( .type == "result") | select( .result_type == "Failed")  | select(.level == "task") | .number' spread-results.json)
    TESTS_FAILED_PROJECT=$(jq -r '.[] | select( .type == "result") | select( .result_type == "Failed") | select(.level == "project") | .number' spread-results.json)
    TESTS_ABORTED=$(jq -r '.[] | select( .type == "result") | select( .result_type == "Aborted") | .number' spread-results.json)
    test "$TESTS_SUCCESSFUL" = "400"
    test "$TESTS_FAILED_TASKS" = "1"
    test "$TESTS_FAILED_TASK" = "1"
    test "$TESTS_FAILED_PROJECT" = "4"
    test "$TESTS_ABORTED" = "24"
    
    # Check the filter
    test "$(log-parser with-failed-and-aborted.log.spread -pd error | grep -c "Error preparing")" -eq 5
    test "$(log-parser with-failed-and-aborted.log.spread -pd error | grep -c "command -v restorecon")" -eq 4
    
    # Check the filter cuting the logs
    test "$(log-parser with-failed-and-aborted.log.spread -pd error | wc -l)" -eq 184
    test "$(log-parser with-failed-and-aborted.log.spread -pd error -c 0 | wc -l)" -eq 14
    test "$(log-parser with-failed-and-aborted.log.spread -pd error -c 0 | grep -c "Error preparing")" -eq 5
    test "$(log-parser with-failed-and-aborted.log.spread -pd error -c 0 | grep -c "<kill-timeout reached>")" -eq 0
    test "$(log-parser with-failed-and-aborted.log.spread -pd error -c 2 | wc -l)" -eq 26
    test "$(log-parser with-failed-and-aborted.log.spread -pd error -c 2 | grep -c "Error preparing")" -eq 5
    test "$(log-parser with-failed-and-aborted.log.spread -pd error -c 2 | grep -c "<kill-timeout reached>")" -eq 5
    test "$(log-parser with-failed-and-aborted.log.spread -pd error -c 3 | wc -l)" -eq 32
    test "$(log-parser with-failed-and-aborted.log.spread -pd error -c 3 | grep -c "Error preparing")" -eq 5
    test "$(log-parser with-failed-and-aborted.log.spread -pd error -c 3 | grep -c "<kill-timeout reached>")" -eq 5
    
    # Check the results can be filtered
    log-parser with-failed-and-aborted.log.spread -pr failed | grep -q "Failed tasks: 1"
    log-parser with-failed-and-aborted.log.spread -pr failed | grep -c "Failed project prepare: 4"
    log-parser with-failed-and-aborted.log.spread -pr aborted | grep -c "Aborted tasks: 24"
    log-parser all-successful.log.spread -pr successful | grep -q "Successful tasks: 434"
    log-parser all-successful.log.spread -pr failed | grep -v "Aborted tasks"
