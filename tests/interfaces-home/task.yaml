summary: |

  The home interface allows a snap to access non-hidden files in $HOME

  A snap which defines the home plug must be shown in the interfaces list.
  The plug must be autoconnected on install and, as usual, must be able to be
  reconnected.

environment:
  SNAP_NAME: home-consumer
  SNAP_FILE: "./$[SNAP_NAME]_1.0_all.snap"
  PLUG: home
  READABLE_FILE: "$HOME/readable"
  HIDDEN_READABLE_FILE: "$HOME/.readable"
  WRITABLE_FILE: "$HOME/writable"
  PREVIOUS_CONTENT: "previous content"
  CREATABLE_FILE: "$HOME/creatable"
  HIDDEN_CREATABLE_FILE: "$HOME/.creatable"
  OK_CONTENT: "ok"

kill-wait: 1m

prepare: |
  echo "Given a snap declaring the $PLUG plug is installed"
  snapbuild ./../fixtures/snaps/$SNAP_NAME .
  sudo snap install $SNAP_FILE

  echo "And there is a readable file in HOME"
  echo "$OK_CONTENT" > "$READABLE_FILE"

  echo "And there is a writable file in HOME"
  echo "$PREVIOUS_CONTENT" > "$WRITABLE_FILE"

  echo "And there is a hidden readable file in HOME"
  echo "$OK_CONTENT" > "$HIDDEN_READABLE_FILE"

restore: |
  sudo snap remove $SNAP_NAME
  rm -f $SNAP_FILE

execute: |
  CONNECTED_PATTERN="(?s)Slot +Plug\n\
  .*?\n\
  :$PLUG +$SNAP_NAME"
    DISCONNECTED_PATTERN="(?s)Slot +Plug\n\
  .*?\n\
  - +$SNAP_NAME:$PLUG"

  echo "Then the snap is listed as connected"
  echo "$(snap interfaces)" | grep -Pzq "$CONNECTED_PATTERN"

  echo "============================================"

  echo "When the plug is disconnected"
  sudo snap disconnect $SNAP_NAME:$PLUG ubuntu-core:$PLUG
  echo "$(snap interfaces)" | grep -Pzq "$DISCONNECTED_PATTERN"

  echo "Then the plug can be connected again"
  sudo snap connect $SNAP_NAME:$PLUG ubuntu-core:$PLUG
  echo "$(snap interfaces)" | grep -Pzq "$CONNECTED_PATTERN"

  echo "============================================"

  echo "When the plug is connected"
  sudo snap connect $SNAP_NAME:$PLUG ubuntu-core:$PLUG
  echo "$(snap interfaces)" | grep -Pzq "$CONNECTED_PATTERN"

  echo "Then the snap is able to read home files"
  response=$(home-consumer.reader $READABLE_FILE)
  echo "$response" | grep -Pqz "$OK_CONTENT"

  echo "============================================"

  echo "When the plug is disconnected"
  sudo snap disconnect $SNAP_NAME:$PLUG ubuntu-core:$PLUG
  echo "$(snap interfaces)" | grep -Pzq "$DISCONNECTED_PATTERN"

  echo "Then snap can't read home files"
  if home-consumer.reader $READABLE_FILE; then
    echo "Home files shouldn't be readable" && exit 1
  fi

  echo "============================================"

  echo "When the plug is connected"
  sudo snap connect $SNAP_NAME:$PLUG ubuntu-core:$PLUG
  echo "$(snap interfaces)" | grep -Pzq "$CONNECTED_PATTERN"

  echo "Then the snap is able to append to home files"
  home-consumer.writer "$WRITABLE_FILE"
  cat "$WRITABLE_FILE" | grep -Pqz "${PREVIOUS_CONTENT}\n${OK_CONTENT}"

  echo "============================================"

  echo "When the plug is disconnected"
  sudo snap disconnect $SNAP_NAME:$PLUG ubuntu-core:$PLUG
  echo "$(snap interfaces)" | grep -Pzq "$DISCONNECTED_PATTERN"

  echo "Then snap can't append to home files"
  if home-consumer.writer "$WRITABLE_FILE"; then
    echo "Home files shouldn't be writable" && exit 1
  fi

  echo "============================================"

  echo "When the plug is connected"
  sudo snap connect $SNAP_NAME:$PLUG ubuntu-core:$PLUG
  echo "$(snap interfaces)" | grep -Pzq "$CONNECTED_PATTERN"

  echo "Then the snap is able to create home files"
  home-consumer.writer "$CREATABLE_FILE"
  cat "$CREATABLE_FILE" | grep -Pqz "$OK_CONTENT"

  echo "============================================"

  echo "When the plug is disconnected"
  sudo snap disconnect $SNAP_NAME:$PLUG ubuntu-core:$PLUG
  echo "$(snap interfaces)" | grep -Pzq "$DISCONNECTED_PATTERN"

  echo "Then snap can't create home files"
  if home-consumer.writer "$CREATABLE_FILE"; then
    echo "Home shouldn't be accessible" && exit 1
  fi

  echo "============================================"

  echo "When the plug is connected"
  sudo snap connect $SNAP_NAME:$PLUG ubuntu-core:$PLUG
  echo "$(snap interfaces)" | grep -Pzq "$CONNECTED_PATTERN"

  echo "Then the snap is not able to read hidden home files"
  if home-consumer.reader "$HIDDEN_READABLE_FILE"; then
    echo "Home shouldn't be accessible" && exit 1
  fi

  echo "============================================"

  echo "When the plug is connected"
  sudo snap connect $SNAP_NAME:$PLUG ubuntu-core:$PLUG
  echo "$(snap interfaces)" | grep -Pzq "$CONNECTED_PATTERN"

  echo "Then the snap is not able to write hidden home files"
  if home-consumer.writer "$HIDDEN_CREATABLE_FILE"; then
    echo "Home shouldn't be accessible" && exit 1
  fi

  echo "============================================"
