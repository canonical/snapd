summary: Check that installing and running a snap works

restore: |
    rm -f /home/test/stderr.log
    rm -f /home/test/stdout.log
    # requied! in autopkgtest no suite restore is run at all
    snap remove --purge test-snapd-sh

debug: |
    if test -e stderr.log; then
        echo "content of stderr.log"
        cat stderr.log
    fi

execute: |
    #shellcheck source=tests/lib/systems.sh
    . "$TESTSLIB"/systems.sh

    echo "Ensure install from the store works"
    snap install test-snapd-sh

    echo "Ensure that the snap can be run as root"
    test-snapd-sh.sh -c 'echo hello' > stdout.log 2> stderr.log
    MATCH "^hello$" < stdout.log
    if [ -s stderr.log ]; then
        echo "stderr.log must be empty but it is not: (run as root)"
        cat stderr.log
        exit 1
    fi

    echo "Ensure that the snap can be run as the user"
    su -l -c "test-snapd-sh.sh -c 'echo hello' > stdout.log 2> stderr.log" test
    MATCH "^hello$" < stdout.log
    if [ -s stderr.log ]; then
        echo "stderr.log must be empty but it is not: (run as user)"
        cat stderr.log
        exit 1
    fi

    echo "Ensure the snap is listed"
    snap list | grep ^test-snapd-sh

    echo "Ensure a change was generated for the install"
    snap changes | MATCH 'Install "test-snapd-sh" snap'

    echo "Ensure different bases work"
    for base in core18 core20 core22; do
        # TODO remove this logic once core22 base snaps are uploaded in
        # all the supported architectures
        if [ "$base" = "core22" ] && not os.query is-pc-amd64; then
            continue
        fi

        # no core20 snap for i386 architecture
        if [ "$base" = "core20" ] && os.query is-pc-i386; then
            continue
        fi
        
        # TODO remove this logic once this and core22 snap leaves --edge
        if [ "$base" = "core22" ]; then
            snap install --edge core22
            snap install --edge test-snapd-sh-${base}
        else
            snap install test-snapd-sh-${base}
        fi
        
        test-snapd-sh-${base}.sh -c "echo hello $base" | MATCH "hello $base"
        # shellcheck disable=SC2016
        test-snapd-sh-${base}.sh -c 'touch $SNAP_COMMON/test'
        test -f /var/snap/test-snapd-sh-${base}/common/test
    done
