summary: Check that installing and running a snap works

debug: |
    if test -e stderr.log; then
        echo "content of stderr.log"
        cat stderr.log
    fi

restore: |
    rm -f stderr.log
    rm -f stdout.log
    # requied! in autopkgtest no suite restore is run at all
    snap remove --purge test-snapd-sh

execute: |
    #shellcheck source=tests/lib/systems.sh
    . "$TESTSLIB"/systems.sh

    echo "Ensure install from the store works"
    snap install test-snapd-sh

    echo "Ensure that the snap can be run as root"
    test-snapd-sh.sh -c 'echo hello' > stdout.log 2> stderr.log
    MATCH "^hello$" < stdout.log
    if is_cgroupv2; then
        # snap-confine issues a warning on a cgroupv2 system
        [ "$(cat stderr.log)" = 'WARNING: cgroup v2 is not fully supported yet, proceeding with partial confinement' ]
    else
       if [ -s stderr.log ]; then
           echo "stderr.log must be empty but it is not: (run as root)"
           cat stderr.log
           exit 1
       fi
    fi

    echo "Ensure that the snap can be run as the user"
    su -l -c "test-snapd-sh.sh -c 'echo hello' > stdout.log 2> stderr.log" test
    MATCH "^hello$" < stdout.log
    if is_cgroupv2; then
        # snap-confine issues a warning on a cgroupv2 system
        [ "$(cat stderr.log)" = 'WARNING: cgroup v2 is not fully supported yet, proceeding with partial confinement' ]
    else
       if [ -s stderr.log ]; then
           echo "stderr.log must be empty but it is not: (run as user)"
           cat stderr.log
           exit 1
       fi
    fi

    echo "Ensure the snap is listed"
    snap list | grep ^test-snapd-sh

    echo "Ensure a change was generated for the install"
    snap changes | MATCH 'Install "test-snapd-sh" snap'
