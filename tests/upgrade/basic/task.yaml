summary: Check that upgrade works
systems: [-ubuntu-core-16-64]
restore: |
    rm -f /var/tmp/myevil.txt
execute: |
    . $TESTSLIB/apt.sh

    echo Install previous version...
    apt-get install -y snapd

    prevsnapdver=$(snap --version|grep "snapd ")

    echo Install a snap with it
    snap install test-snapd-tools

    echo Sanity check install
    test-snapd-tools.echo Hello | grep Hello
    test-snapd-tools.env | grep SNAP_NAME=test-snapd-tools

    echo Do upgrade
    # allow-downgrades prevents errors when new versions hit the archive, for instance,
    # trying to install 2.11ubuntu1 over 2.11+0.16.04
    if [ "$SPREAD_SYSTEM" = "ubuntu-14.04-64" ]; then
        apt_install_local ${SPREAD_PATH}/../snapd*.deb
    else
        apt install -y --allow-downgrades ${SPREAD_PATH}/../snapd*.deb
    fi

    snapdver=$(snap --version|grep "snapd ")
    [ "$snapdver" != "$prevsnapdver" ]

    echo Sanity check already installed snaps after upgrade
    snap list | grep core
    snap list | grep test-snapd-tools
    test-snapd-tools.echo Hello | grep Hello
    test-snapd-tools.env | grep SNAP_NAME=test-snapd-tools
    echo Hello > /var/tmp/myevil.txt
    test-snapd-tools.cat /var/tmp/myevil.txt && exit 1 || true

    echo Check migrating to types in state
    coreType=$(jq -r '.data.snaps["ubuntu-core"].type' /var/lib/snapd/state.json)
    testSnapType=$(jq -r '.data.snaps["test-snapd-tools"].type' /var/lib/snapd/state.json)
    [ "$coreType" = "os" ]
    [ "$testSnapType" = "app" ]
