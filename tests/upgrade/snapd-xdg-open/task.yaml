summary: Verify snapd-xdg-open package is properly replaced with the snapd one
description: |
    snapd-xdg-open was formerly provided by the snapd-xdg-open package
    and is now part of the snapd package. This test case verifies that
    the snapd-xdg-open package from the archive is properly replaced.
restore: |
    if [ "$REMOTE_STORE" = staging ]; then
        echo "skip upgrade tests while talking to the staging store"
        exit 0
    fi
    apt purge -y snapd-xdg-open
execute: |
    . "$TESTSLIB/apt.sh"

    # Original version of snapd-xdg-open in the archive which was not
    # part of the snapd source package.
    ver=0.0.0~16.04
    case "$SPREAD_SYSTEM" in
        ubuntu-14.04-*)
            ver=0.0.0~14.04
            ;;
        ubuntu-16.04-*)
            ;;
        *)
            echo "System doesn't have a snapd-xdg-open package in the archive"
            echo "so skipping test case"
            # We need to have snapd installed as otherwise the restore
            # process fails
            apt-get install -y snapd
            exit 0
            ;;
    esac

    apt-get install -y snapd-xdg-open=$ver

    prevsnapdxdgver=$(dpkg-query --showformat='${Version}' --show snapd-xdg-open)

    # allow-downgrades prevents errors when new versions hit the archive, for instance,
    # trying to install 2.11ubuntu1 over 2.11+0.16.04
    if [[ "$SPREAD_SYSTEM" == ubuntu-14.04-* ]]; then
        # apt_install_local uses dpkg directly which happily downgrades
        apt_install_local ${GOPATH}/snapd*.deb
    else
        # not using apt_install_local here as this will not have
        # --allow-downgrades
        apt install -y --allow-downgrades ${GOPATH}/snapd*.deb
    fi

    snapdxdgver=$(dpkg-query --showformat='${Version}' --show snapd-xdg-open)
    [ "$snapdxdgver" != "$prevsnapdxdgver" ]
