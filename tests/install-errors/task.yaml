summary: Checks for cli errors installing snaps
environment:
  SIDELOAD_SNAP_NAME: basic-binaries
  STORE_SNAP_NAME: hello-world
  SNAP_FILE: "./$[SIDELOAD_SNAP_NAME]_1.0_all.snap"

prepare: |
  echo "Given a snap with a failing command is installed"
  snapbuild ../lib/snaps/$SIDELOAD_SNAP_NAME .
  sudo snap install $SNAP_FILE

  echo "And a snap from the store is installed"
  sudo snap install $STORE_SNAP_NAME

restore: |
  sudo snap remove $SIDELOAD_SNAP_NAME
  sudo snap remove $STORE_SNAP_NAME
  rm -f $SNAP_FILE

execute: |
  echo "Install unexisting snap prints error"
  expected="(?s)error: cannot perform the following tasks:\n\
  - Download snap \"unexisting.canonical\" from channel \"stable\" \\(snap not found\\)\n"
  actual=$(snap install unexisting.canonical 2>&1) || EXPECTED_FAILURE="unexisting"
  [ "$EXPECTED_FAILURE" = "unexisting" ] || exit 1
  echo "$actual" | grep -Pzq "$expected"

  echo "============================================"

  echo "Install without snap name shows error"
  expected="(?s)error: the required argument \`<snap>\` was not provided\n"
  actual=$(snap install 2>&1) || EXPECTED_FAILURE="nosnap"
  [ "$EXPECTED_FAILURE" = "nosnap" ] || exit 1
  echo "$actual" | grep -Pzq "$expected"

  echo "============================================"

  echo "Install points to login when not authenticated"
  expected="snap login --help"
  actual=$(sudo -i -u test /bin/sh -c "snap install hello-world 2>&1") || EXPECTED_FAILURE="unauthenticated"
  [ "$EXPECTED_FAILURE" = "unauthenticated" ] || exit 1
  echo "$actual" | grep -Pzq "$expected"

  echo "============================================"

  echo "When a failing command from a snap is called"
  basic-binaries.fail || EXPECTED_FAILURE="command-failed"

  echo "Then it must fail"
  [ "$EXPECTED_FAILURE" = "command-failed" ] || exit 1

  echo "============================================"

  echo "When we try to install a snap already installed from the store"
  sudo snap install $STORE_SNAP_NAME || EXPECTED_FAILURE="install-failed"

  echo "Then it must fail"
  [ "$EXPECTED_FAILURE" = "install-failed" ] || exit 1

  echo "============================================"
