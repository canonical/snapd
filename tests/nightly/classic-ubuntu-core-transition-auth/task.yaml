summary: Ensure that the ubuntu-core -> core transition works with auth.json

# we never test on core because the transition can only happen on "classic"
# we disable on ppc64el because the downloads are very slow there
# Fedora, openSUSE and Arch are disabled at the moment as there is something
# fishy going on and the snapd service gets terminated during the process.
systems: [-ubuntu-core-*, -ubuntu-*-ppc64el, -fedora-*, -opensuse-*, -arch-*]

# autopkgtest run only a subset of tests that deals with the integration
# with the distro
backends: [-autopkgtest]

warn-timeout: 1m

kill-timeout: 5m

debug: |
    snap changes
    #shellcheck source=tests/lib/changes.sh
    . "$TESTSLIB/changes.sh"
    snap change "$(change_id 'Transition ubuntu-core to core')" || true

restore: |
    # shellcheck source=tests/lib/files.sh
    . "$TESTSLIB/files.sh"

    clean_file /root/.snap/auth.json
    clean_dir /root/.snap

    clean_file /home/test/.snap/auth.json
    clean_dir /home/test/.snap

execute: |
    #shellcheck source=tests/lib/pkgdb.sh
    . "$TESTSLIB/pkgdb.sh"
    # shellcheck source=tests/lib/files.sh
    . "$TESTSLIB/files.sh"

    echo "Ensure core is gone and we have ubuntu-core instead"
    distro_purge_package snapd
    distro_install_build_snapd

    # need to be seeded to allow snap install
    snap wait system seed.loaded

    snap download "--${CORE_CHANNEL}" ubuntu-core
    snap ack ./ubuntu-core_*.assert
    snap install ./ubuntu-core_*.snap

    ensure_dir_exists_backup_real /root/.snap
    ensure_file_exists_backup_real /root/.snap/auth.json
    echo '{}' > /root/.snap/auth.json

    ensure_dir_exists_backup_real /home/test/.snap
    ensure_file_exists_backup_real /home/test/.snap/auth.json
    echo '{}' > /home/test/.snap/auth.json

    echo "Ensure transition is triggered"
    # wait for steady state or ensure-state-soon will be pointless
    ok=0
    for i in $(seq 40); do
        if ! snap changes|grep -q ".*.Doing.*" ; then
            ok=1
            break
        fi
        sleep .5
    done
    if [ $ok -ne 1 ] ; then
        echo "Did not reach steady state"
        exit 1
    fi
    snap debug ensure-state-soon


    # wait for transition
    ok=0
    for i in $(seq 240); do
        if snap changes|grep -q ".*Done.*Transition ubuntu-core to core" ; then
            ok=1
            break
        fi
        sleep 1
    done
    if [ $ok -ne 1 ] ; then
        echo "Transition did not start or finish"
        exit 1
    fi

    if snap list|grep ubuntu-core; then
        echo "ubuntu-core still installed, transition failed"
        exit 1
    fi
