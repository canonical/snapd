
policy_module(snappy,0.0.4)

########################################
#
# Declarations
#

type snappy_t;
type snappy_exec_t;
init_daemon_domain(snappy_t, snappy_exec_t)

type snappy_config_t;
files_config_file(snappy_config_t)

type snappy_var_lib_t;
files_type(snappy_var_lib_t)

type snappy_var_run_t;
files_pid_file(snappy_var_run_t)

type snappy_unit_file_t;
systemd_unit_file(snappy_unit_file_t)

########################################
#
# snappy local policy
#

# Allow transitions from init_t to snappy for sockets
gen_require(` type init_t; type var_run_t; ')
filetrans_pattern(init_t, var_run_t, snappy_var_run_t, sock_file, "snapd.socket")
filetrans_pattern(init_t, var_run_t, snappy_var_run_t, sock_file, "snapd-snap.socket")

# Allow snapd to read config files
read_files_pattern(snappy_t, snappy_config_t, snappy_config_t)

# Allow snapd to read DNS config
gen_require(` type net_conf_t; ')
allow snappy_t net_conf_t:file { getattr read };
allow snappy_t net_conf_t:lnk_file { read };

# Allow snapd to read sysctl files
gen_require(` type sysctl_net_t; ')
allow snappy_t sysctl_net_t:dir search;
allow snappy_t sysctl_net_t:file { open read };

# Allow snapd to read/write systemd units for managing snaps
gen_require(` type systemd_unit_file_t; ')
allow snappy_t systemd_unit_file_t:dir { read search };
allow snappy_t systemd_unit_file_t:file { getattr open read write };

# Read l10n files?
miscfiles_read_localization(snappy_t)

# Allow snapd to manage its socket files
manage_files_pattern(snappy_t, snappy_var_run_t, snappy_var_run_t)

# Allow snapd to manage its persistent data
manage_dirs_pattern(snappy_t, snappy_var_lib_t, snappy_var_lib_t)
manage_files_pattern(snappy_t, snappy_var_lib_t, snappy_var_lib_t)
manage_lnk_files_pattern(snappy_t, snappy_var_lib_t, snappy_var_lib_t)

logging_send_syslog_msg(snappy_t);

allow snappy_t self:capability { chown kill fowner fsetid mknod net_admin net_bind_service net_raw setfcap };
allow snappy_t self:tun_socket relabelto;
allow snappy_t self:process { getcap signal_perms setrlimit setfscreate };

allow snappy_t self:fifo_file rw_fifo_file_perms;
allow snappy_t self:unix_stream_socket create_stream_socket_perms;
allow snappy_t self:tcp_socket create_stream_socket_perms;
allow snappy_t self:udp_socket create_stream_socket_perms;
allow snappy_t self:unix_dgram_socket create_socket_perms;
allow snappy_t self:capability2 block_suspend;

# snapd needs to check for ipv6 support
gen_require(` type node_t; ')
allow snappy_t node_t:tcp_socket node_bind;

corenet_all_recvfrom_unlabeled(snappy_t)
corenet_all_recvfrom_netlabel(snappy_t)
corenet_tcp_sendrecv_generic_if(snappy_t)
corenet_tcp_sendrecv_generic_node(snappy_t)

corenet_tcp_sendrecv_http_port(snappy_t)
corenet_tcp_connect_http_port(snappy_t)
corenet_tcp_sendrecv_http_cache_port(snappy_t)
corenet_tcp_connect_http_cache_port(snappy_t)

# snapd has its own internal DNS resolver
corenet_tcp_sendrecv_dns_port(snappy_t)
corenet_udp_sendrecv_dns_port(snappy_t)
corenet_tcp_connect_dns_port(snappy_t)
corenet_sendrecv_dns_client_packets(snappy_t)
