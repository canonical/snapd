project: snapd

environment:
    REUSE_PROJECT: $(echo $REUSE_PROJECT)
    PROJECT_PATH: /gopath/src/github.com/snapcore/snapd
    GOPATH: /gopath
    PATH: /gopath/bin:/snap/bin:$PATH
    TESTSLIB: $[PROJECT_PATH]/tests/lib

backends:
    linode:
        key: $(echo $SPREAD_LINODE_KEY)
        systems:
            - ubuntu-16.04-64-grub
            - ubuntu-16.04-32-grub

path: $[PROJECT_PATH]

exclude:
    - .git

prepare: |
    [ "$REUSE_PROJECT" != 1 ] || exit 0

    # apt update is hanging on security.ubuntu.com with IPv6.
    sysctl -w net.ipv6.conf.all.disable_ipv6=1
    trap "sysctl -w net.ipv6.conf.all.disable_ipv6=0" EXIT

    apt purge -y snapd || true
    apt update
    # utilities
    apt install -y devscripts jq
    apt build-dep -y ./

    # increment version so upgrade can work
    dch -i "testing build"

    test -d /home/test || adduser --quiet --disabled-password --gecos '' test
    chown test.test -R ..
    sudo -i -u test /bin/sh -c "cd $PWD && DEB_BUILD_OPTIONS=nocheck dpkg-buildpackage -tc -b -Zgzip"

    # Disable burst limit so resetting the state quickly doesn't create problems.
    mkdir -p /etc/systemd/system/snapd.service.d
    cat <<EOF > /etc/systemd/system/snapd.service.d/local.conf
    [Unit]
    StartLimitInterval=0
    [Service]
    Environment=SNAPD_DEBUG_HTTP=7
    EOF

    # Build snapbuild.
    apt install -y git
    go get ./tests/lib/snapbuild

    # Build fakestore.
    go get ./tests/lib/fakestore/cmd/fakestore

suites:
    tests/main/:
        summary: Full-system tests for snapd
        prepare: |
            apt install -y ${SPREAD_PATH}/../snapd_*.deb
            # Snapshot the state including core.
            if [ ! -f $SPREAD_PATH/snapd-state.tar.gz ]; then
                ! snap list | grep core || exit 1
                snap install hello-world
                snap list | grep core
                snap remove hello-world
                rmdir /snap/hello-world # Should be done by snapd.

                systemctl stop snapd.service snapd.socket
                systemctl daemon-reload
                mounts="$(systemctl list-unit-files | grep '^snap[-.].*\.mount' | cut -f1 -d ' ')"
                services="$(systemctl list-unit-files | grep '^snap[-.].*\.service' | cut -f1 -d ' ')"
                for unit in $services $mounts; do
                    systemctl stop $unit
                done
                tar czf $SPREAD_PATH/snapd-state.tar.gz /var/lib/snapd /snap /etc/systemd/system/snap-*core*.mount
                systemctl daemon-reload # Workaround for http://paste.ubuntu.com/17735820/
                for unit in $mounts $services; do
                    systemctl start $unit
                done
                systemctl start snapd.socket
            fi
        restore: |
            $TESTSLIB/reset.sh
            apt purge -y snapd || true
        restore-each: |
            $TESTSLIB/reset.sh --reuse-core

    tests/upgrade/:
        summary: Tests for snapd upgrade
        restore:
            apt purge -y snapd || true
        restore-each: |
            $TESTSLIB/reset.sh
