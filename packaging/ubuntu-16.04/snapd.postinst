#!/bin/sh

set -e


case "$1" in
    configure)
        # ensure /var/lib/snapd/lib/gl is cleared
        if dpkg --compare-versions "$2" lt-nl "2.0.7"; then
            ldconfig
        fi

        # Ensure that we undo the damage done by the snap.mount unit that was present
        # in snapd 2.31.
        #
        # We found that update scripts make systemd stop inactive mount units and this
        # in turn stops all the units that depend on it so when the snap.mount unit is
        # stopped all the per-snap mount units gets stopped along with them.  The 2.31
        # release was only out briefly in xenial-proposed and bionic but to keep the
        # affected users safe let's start all the per-snap mount units so that snaps no
        # longer appear as broken after update.
        if dpkg --compare-versions "$2" ge-nl "2.31" && \
                dpkg --compare-versions "$2" lt-nl "2.32"; then
            units=$(systemctl list-unit-files --full | grep '^snap[-.]' | cut -f1 -d ' ' | grep -vF snap.mount.service || true)
            mounts=$(echo "$units" | grep '^snap[-.].*\.mount$' || true)
            for unit in $mounts; do
                # ensure its really a snap mount unit or systemd unit
                if ! grep -q 'What=/var/lib/snapd/snaps/' "/etc/systemd/system/$unit" && ! grep -q 'X-Snappy=yes' "/etc/systemd/system/$unit"; then
                    echo "Skipping non-snapd systemd unit $unit"
                    continue
                fi

                echo "Starting $unit"
                deb-systemd-invoke start "$unit" || true
            done
        fi

        # In commit 0dce4704a5d (2017-03-28, snapd v2.23.6) we renamed
        # /etc/apparmor.d/usr.lib.snap-confine to usr.lib.snap-confine.real
        # to fix LP: #1673247 - however some people (upgrades?) still have
        # the old usr.lib.snap-confine file. This seems to be loaded instead
        # of the correct usr.lib.snap-confine.real profile. To fix this we
        # use the rather blunt approach to remove the file forcefully.
        if test "$(md5sum /etc/apparmor.d/usr.lib.snapd.snap-confine | cut -f1 -d' ' 2>/dev/null)" = "2a38d40fe662f46fedd0aefbe78f23e9"; then
            rm -f /etc/apparmor.d/usr.lib.snapd.snap-confine
        fi


        # We need to copy what debhelper is doing here because the 
        # automatically added bits by debhelper run in the *wrong* order:
        # - it (re)starts snapd first
        # - it reloads the snap-confine apparmor profile *after* that
        # which of course means that on an upgrade there is a time window
        # in which snapd is available for the system-key check but
        # snap-confine has an old profile and will die because it tries
        # to do things that it cannot do with that old profile. By moving
        # the apparmor load here we ensure that the profile for snap-confine
        # is loaded before snapd restarts which means that when snapd is
        # ready snap-confine also has the right profile.
        #
        #
        # COPIED CODE DO NOT EDIT
        # Automatically added by dh_apparmor/2.12-4ubuntu8
        aa_is_enabled() {
            if command aa-enabled >/dev/null 2>&1; then
                # apparmor >= 2.10.95-2
                aa-enabled --quiet 2>/dev/null
            else
                # apparmor << 2.10.95-2
                # (This should be removed once Debian Stretch and Ubuntu 18.04 are out.)
                rc=0
                aa-status --enabled 2>/dev/null || rc=$?
                [ "$rc" = 0 ] || [ "$rc" = 2 ]
            fi
        }
        APP_PROFILE="/etc/apparmor.d/usr.lib.snapd.snap-confine.real"
        if [ -f "$APP_PROFILE" ]; then
            # Add the local/ include
            LOCAL_APP_PROFILE="/etc/apparmor.d/local/usr.lib.snapd.snap-confine.real"
            test -e "$LOCAL_APP_PROFILE" || {
                mkdir -p `dirname "$LOCAL_APP_PROFILE"`
                install --mode 644 /dev/null "$LOCAL_APP_PROFILE"
            }
            # Reload the profile, including any abstraction updates
            if aa_is_enabled; then
                apparmor_parser -r -T -W "$APP_PROFILE" || true
            fi
        fi
        # End automatically added section
fi

esac

#DEBHELPER#
