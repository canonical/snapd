#!/bin/sh
#
# This script acts as an entry point for running snapd from snapd.snap on
# a base snap that otherwise doesn't ship snapd itself. The entry point
# arranges for appropriate system integration, in particular by creating
# and starting systemd units for running snapd without any confinement.
#
# Arguments:
# $1: start|stop
# $2: prefix of the installed snapd snap (e.g. /snap/snapd/42/)
#     (on a fedora base this might be e.g. /var/lib/snaps...)

set -e

CMD="$1"
PREFIX="$2"

UNITS="snapd.service snapd.autoimport.service snapd.core-fixup.service \
       snapd.seeded.service snapd.snap-repair.service \
       snapd.snap-repair.timer snapd.socket"
ENABLE_UNITS="snapd.system-shutdown.service"

# TODO: discuss ID_LIKE=ubuntu-core or ID_LIKE=snap-core ?
if ! grep -q -E "ID(_LIKE)?=ubuntu-core" /etc/os-release && \
        ! grep -q -E "ID(_LIKE)?=ubuntu-core" /usr/lib/os-release;
    then
        echo "cannot run this helper on a non ubuntu-core system"
    exit 1
fi

case $CMD in
    start)
        echo "Running start action"
        if [ "$PREFIX" = "" ]; then
            echo "cannot run without the prefix for the snapd snap"
            exit 1
        fi
        # use existing snapd.service as a template and modify so that the
        # right prefix is used
        for u in $UNITS $ENABLE_UNITS; do
            sed "s#ExecStart=#ExecStart=$PREFIX#" "$PREFIX/lib/systemd/system/$u" > "/run/systemd/system/$u"
        done
        # and now use systemd to start it
        systemctl daemon-reload
        # some units only need to get enabled
        for unit in $ENABLE_UNITS; do
            if ! systemctl is-enabled $unit; then
                systemctl enable "$unit"
            fi
        done
        # most units are started
        for unit in $UNITS; do
            systemctl start "$unit"
            # FIXME: check that the unit is really fine, if not revert
        done
        ;;
    stop)
        echo "Running stop action"
        for unit in  $UNITS; do
            systemctl stop "$unit"
            rm -f /run/systemd/system/"$unit"
        done
        systemctl daemon-reload
        ;;
    *)
        echo "unknown action: $1"
        echo "this script is for internal use only"
        exit 1
        ;;
esac
