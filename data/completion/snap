# -*- sh -*-
#
#  Copyright (C) 2016-2017 Canonical Ltd
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License version 3 as
#  published by the Free Software Foundation.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

_complete_snap() {
    # TODO: add support for sourcing this function from the core snap.
    local cur prev words cword
    _init_completion -n : || return

    local command
    if [[ ${#words[@]} -gt 2 ]]; then
        if [[ ${words[1]} =~ ^-- ]]; then
            # global options take no args
            return 0
        fi
        if [[ ${words[-2]} = "--help" ]]; then
            # help takes no args
            return 0
        fi

        command=${words[-2]}
    fi

    # Only split on newlines
    local IFS=$'\n'

    COMPREPLY=($(GO_FLAGS_COMPLETION=1 "${words[@]}"))

    case $command in
        install|info|sign-build)
            _filedir "snap"
            ;;
        ack)
            _filedir
            ;;
        try)
            _filedir -d
            ;;
        connect|disconnect|interfaces)
            # interface completions will only end in ':' when they all
            # end in ':' (i.e. you either get offered snap names up to
            # and including the ':', or you get offered the whole thing)
            if [[ "$COMPREPLY" == *: ]]; then
                compopt -o nospace
            fi
    esac

    __ltrim_colon_completions "$cur"

    return 0
}

complete -F _complete_snap snap
