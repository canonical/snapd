#!/bin/bash
set -xeu

need_rebuild=1

shopt -s nullglob

if [ "${NO_REBUILD:-0}" = "1" ]; then
    echo "-- $(date) -- requested no snap rebuild"
    need_rebuild=0

    # check if we have any snaps built at all
    built_snaps=(built-snap/snapd_*.snap.keep)
    if (( "${#built_snaps[@]}" > 0 )); then
        echo "-- $(date) -- found prebuilt snapd snaps:"
        for s in "${built_snaps[@]}"; do
            echo "--   $s"
        done
    else
        echo "-- $(date) -- no prebuilt snaps found"
        need_rebuild=1
    fi
fi

if [ "$need_rebuild" = 1 ]; then
    echo "-- $(date) -- rebuilding snapd snap"
    ./tests/build-test-snapd-snap
    echo "-- $(date) -- snapd snap rebuild complete"
fi

if [ -z "$SPREAD_TAG_FEATURES" ]; then
    SPREAD_USE_PREBUILT_SNAPD_SNAP=true exec spread "$@"
else
    WRITE_DIR="/tmp/features"
    RUN_TESTS=("$@")
    NUM_ATTEMPTS=${NUM_ATTEMPTS:-1}
    export SPREAD_USE_PREBUILT_SNAPD_SNAP=true
    mkdir -p "$WRITE_DIR"
    for i in $(seq 1 "$NUM_ATTEMPTS"); do

        spread -artifacts "${WRITE_DIR}"/features-artifacts -no-debug-output "${RUN_TESTS[@]}" | tee "${WRITE_DIR}/spread-logs.txt"

        if [ -f "$WRITE_DIR"/spread-logs.txt ]; then
            ./tests/lib/external/snapd-testing-tools/utils/log-parser "${WRITE_DIR}"/spread-logs.txt --output "${WRITE_DIR}"/spread-results.json
            ./tests/lib/external/snapd-testing-tools/utils/log-analyzer list-reexecute-tasks "${RUN_TESTS[@]}" "${WRITE_DIR}"/spread-results.json > "${WRITE_DIR}"/failed-tests.txt
        else
            touch "${WRITE_DIR}/failed-tests.txt"
        fi

        ./tests/lib/compose-features.py \
            --dir ${WRITE_DIR}/features-artifacts/feature-tags \
            --output ${WRITE_DIR}/composed-feature-tags \
            --failed-tests "$(cat ${WRITE_DIR}/failed-tests.txt)" \
            --run-attempt "${i}"
        
        if [ ! -s "${WRITE_DIR}/failed-tests.txt" ]; then
            break
        fi

        mapfile RUN_TESTS < "${WRITE_DIR}"/failed-tests.txt
    done

    ./tests/lib/compose-features.py \
        --dir ${WRITE_DIR}/composed-feature-tags \
        --output ${WRITE_DIR}/final-feature-tags \
        --replace-old-runs


    echo "Your feature tags can be found in $WRITE_DIR/final-feature-tags"
fi
