#!/usr/bin/make -f
# -*- makefile -*-

#export DH_VERBOSE=1
export DH_OPTIONS
export DH_GOPKG := github.com/snapcore/snapd
#export DEB_BUILD_OPTIONS=nocheck
export DH_GOLANG_EXCLUDES=integration-tests tests
# export DH_GOLANG_GO_GENERATE=1

export PATH:=${PATH}:${CURDIR}

RELEASE = $(shell lsb_release -c -s)

SYSTEMD_UNITS_DESTDIR=
ifeq ($(RELEASE),trusty)
	SYSTEMD_UNITS_DESTDIR="lib/systemd/upstart/"
else
	SYSTEMD_UNITS_DESTDIR="lib/systemd/system/"
endif

TAGS=
ifneq (,$(filter testkeys,$(DEB_BUILD_OPTIONS)))
	TAGS=-tags withtestkeys
endif

%:
	dh $@ --buildsystem=golang --with=golang --fail-missing --with systemd --builddirectory=_build

override_dh_auto_build:
	mkdir -p _build/src/$(DH_GOPKG)/cmd/snap/test-data
	cp -a cmd/snap/test-data/*.gpg _build/src/$(DH_GOPKG)/cmd/snap/test-data/
	dh_auto_build -- $(TAGS)

override_dh_auto_test:
	dh_auto_test
ifeq (,$(filter nocheck,$(DEB_BUILD_OPTIONS)))
	# check that only the main trusted account-key is included
	[ $$(strings _build/bin/snapd|grep -c -E "public-key-sha3-384: [a-zA-Z0-9_-]{64}") -eq 1 ]
	strings _build/bin/snapd|grep -c "^public-key-sha3-384: -CvQKAwRQ5h3Ffn10FILJoEZUXOv6km9FwA80-Rcj-f-6jadQ89VRswHNiEB9Lxk$$"
endif

override_dh_systemd_enable:
	# enable boot-ok
	dh_systemd_enable \
		-psnapd \
		snapd.boot-ok.service
	# enable the first boot service
	dh_systemd_enable \
		-psnapd \
		snapd.firstboot.service
	# we want the auto-update timer enabled by default
	dh_systemd_enable \
		-psnapd \
		snapd.refresh.timer
	# but the auto-update service disabled
	dh_systemd_enable \
		--no-enable \
		-psnapd \
		snapd.refresh.service
	# enable snapd
	dh_systemd_enable \
		-psnapd \
		snapd.socket
	dh_systemd_enable \
		-psnapd \
		snapd.service

override_dh_systemd_start:
	# start boot-ok
	dh_systemd_start \
		-psnapd \
		snapd.boot-ok.service
	# we want to start the auto-update timer
	dh_systemd_start \
		-psnapd \
		snapd.refresh.timer
	# but not start the service
	dh_systemd_start \
		--no-start \
		-psnapd \
		snapd.refresh.service
	# start snapd
	dh_systemd_start \
		-psnapd \
		snapd.socket
	dh_systemd_start \
		-psnapd \
		snapd.service

override_dh_install:
	# we do not need this in the package, its just needed during build
	rm -rf ${CURDIR}/debian/tmp/usr/bin/xgettext-go
	# Making the packages private
	rm -rf ${CURDIR}/debian/snapd/usr/share/gocode
	# uboot-go is not shippable
	rm -f ${CURDIR}/debian/tmp/usr/bin/uboot-go
	# toolbelt is not shippable
	rm -f ${CURDIR}/debian/tmp/usr/bin/toolbelt
	# we do not like /usr/bin/snappy anymore
	rm -f ${CURDIR}/debian/tmp/usr/bin/snappy
	# install dev package files
	install debian/tmp/usr/share/gocode -d debian/snapd/usr/share
	# install binaries and needed files
	install debian/tmp/usr/bin/snap -D debian/snapd/usr/bin/snap
	install debian/tmp/usr/bin/snapctl -D debian/snapd/usr/bin/snapctl
	install debian/tmp/usr/bin/snapd -D debian/snapd/usr/lib/snapd
	install debian/tmp/usr/bin/snap-exec -D debian/snapd/usr/lib/snapd
	install data/completion/snap -D debian/snapd/usr/share/bash-completion/completions/snap
	# i18n stuff
	# ../../share /usr
	# etc/profile.d contains the PATH extension for snap packages
	install etc/profile.d -d debian/snapd/etc
	# etc/X11/Xsession.d will add to XDG_DATA_DIRS so that we have .desktop support
	install etc/X11 -d debian/snapd/etc
	# we conditionally install snapd's systemd units
	mkdir -p debian/snapd/$(SYSTEMD_UNITS_DESTDIR)
	install debian/snapd.refresh.timer debian/snapd/$(SYSTEMD_UNITS_DESTDIR)
	install debian/snapd.refresh.service debian/snapd/$(SYSTEMD_UNITS_DESTDIR)
	install debian/*.socket debian/snapd/$(SYSTEMD_UNITS_DESTDIR)
	install debian/snapd.service debian/snapd/$(SYSTEMD_UNITS_DESTDIR)
	install debian/*.target debian/snapd/$(SYSTEMD_UNITS_DESTDIR)
	install debian/snapd.boot-ok.service debian/snapd/$(SYSTEMD_UNITS_DESTDIR)
	install debian/snapd.firstboot.service debian/snapd/$(SYSTEMD_UNITS_DESTDIR)
ifeq ($(RELEASE),trusty)
	dh_link debian/snapd/$(SYSTEMD_UNITS_DESTDIR)/snapd.firstboot.service debian/snapd/$(SYSTEMD_UNITS_DESTDIR)/multi-user.target.wants/snapd.firstboot.service
	dh_link debian/snapd/$(SYSTEMD_UNITS_DESTDIR)/snapd.boot-ok.service debian/snapd/$(SYSTEMD_UNITS_DESTDIR)/multi-user.target.wants/snapd.boot-ok.service
	dh_link debian/snapd/$(SYSTEMD_UNITS_DESTDIR)/snapd.service debian/snapd/$(SYSTEMD_UNITS_DESTDIR)/multi-user.target.wants/snapd.service
endif

override_dh_auto_install: snap.8
	dh_auto_install -O--buildsystem=golang

snap.8:
	$(CURDIR)/_build/bin/snap help --man > $@

override_dh_auto_clean:
	dh_auto_clean -O--buildsystem=golang
	rm -vf snap.8
