#!/bin/bash -e

show_help() {
    echo "usage: remote.exec [--user <USER>] [--pass <PASS>] <CMD>"
    echo ""
    echo "Available options:"
    echo "  -h --help   show this help message."
    echo ""
}

_load_config() {
    local CFG_FILE
    CFG_FILE="$(remote.setup get-config-path)"
    if [ ! -f "$CFG_FILE" ]; then
        echo "remote.exec: config file \"$CFG_FILE\" not found, please run remote.setup command first"
        return 1
    fi
    # shellcheck disable=SC1090
    . "$CFG_FILE"
}

_get_pass() {
    local SSH_PASS
    if [ -n "$TESTS_REMOTE_PASS" ]; then
        echo "sshpass -p $TESTS_REMOTE_PASS"
    fi
}

_get_cert() {
    if [ -n "$TESTS_REMOTE_PASS" ]; then
        return
    elif [ -n "$TESTS_REMOTE_CERT" ]; then
        echo "-i $TESTS_REMOTE_CERT"
    fi
}

remote_exec() {
    local user pass
    local timeout=10
    while [ $# -gt 0 ]; do
        case "$1" in
            -h|--help)
                show_help
                exit
                ;;
            --user)
                user="$2"
                shift 2
                ;;
            --pass)
                pass="$2"
                shift 2
                ;;
            --timeout)
                timeout="$2"
                shift 2
                ;;
            -*)
                echo "remote.exec: unknown option $1" >&2
                exit 1
                ;;
            *)
                break    
                ;;
        esac
    done

    _load_config
    if [ -n "$user" ]; then
        TESTS_REMOTE_USER="$user"
    fi
    if [ -n "$pass" ]; then
        TESTS_REMOTE_PASS="$pass"
    fi

    local SSH_PASS SSH_CERT
    SSH_PASS="$(_get_pass)"
    SSH_CERT="$(_get_cert)"

    # shellcheck disable=SC2153,SC2086
    $SSH_PASS ssh $SSH_CERT -p "$TESTS_REMOTE_PORT" -o LogLevel=ERROR -o ServerAliveInterval=10 -o ConnectTimeout="$timeout" -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no "$TESTS_REMOTE_USER"@"$TESTS_REMOTE_HOST" "$@"
}

main() {    
    remote_exec "$@"
}

main "$@"
