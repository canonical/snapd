name: Tests
on:
  pull_request:
    branches: [ "master", "release/**" ]
  push:
    branches: [ "release/**" ]

jobs:
  snap-builds:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Cache snapd snap build status
      id: cache-snapd-build-status
      uses: actions/cache@v1
      with:
        path: "${{ github.workspace }}/.test-results"
        key: "${{ github.run_id }}-${{ github.job }}-results"
    - name: Check cached snap build
      id: cached-results
      run: |
          CACHE_RESULT_STAMP="${{ github.workspace }}/.test-results/snap-build-success"
          echo "CACHE_RESULT_STAMP=$CACHE_RESULT_STAMP" >> $GITHUB_ENV
          if [ -e "$CACHE_RESULT_STAMP" ]; then
              has_cached_snap=0
              while read name; do
                  has_cached_snap=1
                  # bring back artifacts from the cache
                  cp -v "$name" "${{ github.workspace }}"
              done < <(find "$(dirname $CACHE_RESULT_STAMP)" -name "*.snap")
              if [ "$has_cached_snap" = "1" ]; then
                  # we have restored an artifact from the cache
                  echo "::set-output name=already-ran::true"
              fi
          fi
    - name: Build snapd snap
      if: steps.cached-results.outputs.already-ran != 'true'
      uses: snapcore/action-build@v1
    - name: Cache built artifact
      run: |
        mkdir -p $(dirname "$CACHE_RESULT_STAMP")
        cp -v *.snap "$(dirname $CACHE_RESULT_STAMP)/"
    - name: Uploading snapd snap artifact
      uses: actions/upload-artifact@v2
      with:
        name: snap-files
        path: "*.snap"
    - name: Mark successful snap build
      run: |
        mkdir -p $(dirname "$CACHE_RESULT_STAMP")
        touch "$CACHE_RESULT_STAMP"

  spread-cat:
    runs-on: self-hosted
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        # spread uses tags as delta reference
        fetch-depth: 0
    - name: Run spread tests
      run: |
          # Register a problem matcher to highlight spread failures
          spread google:ubuntu-18.04-64:tests/main/abort
