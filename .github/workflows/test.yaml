name: Tests
on:
  pull_request:
    branches: [ "master", "release/**" ]
jobs:
  # TODO: port CLA check
  static-checks:
    runs-on: ubuntu-latest
    env:
      GOPATH: ${{ github.workspace }}
      GO111MODULE: off
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        # NOTE: checkout the code in a fixed location, even for forks, as this
        # is relevant for go's import system.
        path: ./src/github.com/snapcore/snapd
    - name: Set up go 1.9
      uses: actions/setup-go@v1
      with:
        go-version: 1.9
    - name: Install govendor
      run: go get -u github.com/kardianos/govendor
    - name: Cache Go dependencies
      id: cache-go-govendor
      uses: actions/cache@v1
      with:
        path: ${{ github.workspace }}/.cache/govendor
        key: go-govendor-{{ hashFiles('**/vendor.json') }}
    - name: Get Go dependencies
      run: |
          cd ${{ github.workspace }}/src/github.com/snapcore/snapd
          ${{ github.workspace }}/bin/govendor sync
    - name: Run static checks
      run: |
        cd ${{ github.workspace }}/src/github.com/snapcore/snapd
        ./run-checks --static
  unit-tests:
    runs-on: ubuntu-latest
    needs: static-checks
    env:
      GOPATH: ${{ github.workspace }}
      GO111MODULE: off
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        # NOTE: checkout the code in a fixed location, even for forks, as this
        # is relevant for go's import system.
        path: ./src/github.com/snapcore/snapd
    - name: Cache Debian dependencies
      id: cache-deb-downloads
      uses: actions/cache@v1
      with:
        path: /var/cache/apt
        key: var-cache-apt-{{ hashFiles('**/debian/control') }}
    - name: Download Debian dependencies
      if: steps.cache-deb-downloads.outputs.cache-hit != 'true'
      run: |
          sudo apt clean
          sudo apt update
          sudo apt build-dep -d -y ${{ github.workspace }}/src/github.com/snapcore/snapd
    # Work around caching files owned by root https://github.com/actions/cache/issues/133
    - name: Install Debian dependencies
      run: sudo apt build-dep -y ${{ github.workspace }}/src/github.com/snapcore/snapd
    - name: Make /var/cache/apt owned by current user
      run: sudo chown -R $(id -u) /var/cache/apt
    - name: Set up go 1.9
      uses: actions/setup-go@v1
      with:
        go-version: 1.9
    - name: Install govendor
      run: go get -u github.com/kardianos/govendor
    - name: Cache Go dependencies
      id: cache-go-govendor
      uses: actions/cache@v1
      with:
        path: ${{ github.workspace }}/.cache/govendor
        key: go-govendor-{{ hashFiles('**/vendor.json') }}
    - name: Get Go dependencies
      run: |
          cd ${{ github.workspace }}/src/github.com/snapcore/snapd
          ${{ github.workspace }}/bin/govendor sync
    - name: Build C
      run: |
          cd ${{ github.workspace }}/src/github.com/snapcore/snapd/cmd/
          ./autogen.sh
          make -j2
    - name: Build Go
      run: go build github.com/snapcore/snapd/...
    - name: Test C
      run: |
          cd ${{ github.workspace }}/src/github.com/snapcore/snapd/cmd/
          make check
    - name: Test Go
      run: go test github.com/snapcore/snapd/...
  spread-canary:
    needs: unit-tests
    runs-on: [self-hosted, linux]
    strategy:
      fail-fast: false
      matrix:
        system:
        - ubuntu-16.04-64
        - ubuntu-core-16-64
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install spread
      run: |
          cd /tmp
          curl -s -O https://niemeyer.s3.amazonaws.com/spread-amd64.tar.gz
          tar xzvf spread-amd64.tar.gz
    - name: Run spread tests
      env:
          SPREAD_GOOGLE_KEY: ${{ secrets.SPREAD_GOOGLE_KEY }}
      run: /tmp/spread google:${{ matrix.system }}:tests/...
      # TODO: move this to a reliable post() action.
    - name: Discard spread workers
      run: |
        shopt -s nullglob;
        for r in .spread-reuse.*.yaml; do
          spread -discard -reuse-pid="$(echo "$r" | grep -o -E '[0-9]+')";
        done
  spread-stable:
    needs: [unit-tests, spread-canary]
    runs-on: [self-hosted, linux]
    strategy:
      fail-fast: false
      matrix:
        system:
        - ubuntu-14.04-64
        - ubuntu-18.04-64
        - ubuntu-19.10-64
        - ubuntu-20.04-64
        - ubuntu-core-18-64
        - ubuntu-core-20-64
        - debian-9-64
        - debian-sid-64
        - fedora-30-64
        - fedora-31-64
        - arch-linux-64
        - amazon-linux-2-64
        - centos-7-64
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install spread
      run: |
          cd /tmp
          curl -s -O https://niemeyer.s3.amazonaws.com/spread-amd64.tar.gz
          tar xzvf spread-amd64.tar.gz
    - name: Run spread tests
      env:
          SPREAD_GOOGLE_KEY: ${{ secrets.SPREAD_GOOGLE_KEY }}
      run: /tmp/spread google:${{ matrix.system }}:tests/...
      # TODO: move this to a reliable post() action.
    - name: Discard spread workers
      run: |
        shopt -s nullglob;
        for r in .spread-reuse.*.yaml; do
          spread -discard -reuse-pid="$(echo "$r" | grep -o -E '[0-9]+')";
        done
  spread-unstable:
    needs: [unit-tests, spread-stable]
    runs-on: [self-hosted, linux]
    strategy:
      # Remove this once the TODO for post actions is done
      fail-fast: false
      matrix:
        system:
        - centos-8-64
        - opensuse-15.1-64
        - opensuse-tumbleweed-64
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install spread
      run: |
          cd /tmp
          curl -s -O https://niemeyer.s3.amazonaws.com/spread-amd64.tar.gz
          tar xzvf spread-amd64.tar.gz
    - name: Run spread tests
      env:
          SPREAD_GOOGLE_KEY: ${{ secrets.SPREAD_GOOGLE_KEY }}
      run: /tmp/spread -abend google-unstable:${{ matrix.system }}:tests/...
      # TODO: move this to a reliable post() action.
    - name: Discard spread workers
      run: |
        shopt -s nullglob;
        for r in .spread-reuse.*.yaml; do
          spread -discard -reuse-pid="$(echo "$r" | grep -o -E '[0-9]+')";
        done
