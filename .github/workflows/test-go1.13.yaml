name: Tests go1.13
on:
  pull_request:
    branches: [ "master", "release/**" ]
jobs:
  unit-tests-1_13:
    runs-on: ubuntu-18.04
    env:
      GOPATH: ${{ github.workspace }}
      GO111MODULE: off
      # Set PATH to ignore the load of magic binaries from /usr/local/bin And
      # to use the go snap automatically. Note that we install go from the
      # snap in a step below. Without this we get the GitHub-controlled latest
      # version of go.
      PATH: /snap/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
      GOROOT: ""
      # skip format checks on 1.13+
      SKIP_GOFMT: 1

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        # NOTE: checkout the code in a fixed location, even for forks, as this
        # is relevant for go's import system.
        path: ./src/github.com/snapcore/snapd
    - name: Make /var/cache/apt owned by current user
      run: sudo chown -R $(id -u) /var/cache/apt
    - name: Cache Debian dependencies
      id: cache-deb-downloads
      uses: actions/cache@v1
      with:
        path: /var/cache/apt
        key: var-cache-apt-{{ hashFiles('**/debian/control') }}
    - name: Run "apt update"
      run: |
          sudo apt update
    - name: Download Debian dependencies
      if: steps.cache-deb-downloads.outputs.cache-hit != 'true'
      run: |
          sudo apt clean
          sudo apt build-dep -d -y ${{ github.workspace }}/src/github.com/snapcore/snapd
    # Work around caching files owned by root https://github.com/actions/cache/issues/133
    - name: Install Debian dependencies
      run: sudo apt build-dep -y ${{ github.workspace }}/src/github.com/snapcore/snapd
    # golang 1.13 is used on 20.04
    - name: Install the go snap
      run: |
          sudo snap install --classic --channel=1.13 go
    - name: Install ShellCheck as a snap
      run: |
          sudo apt-get remove --purge shellcheck
          sudo snap install shellcheck
    - name: Make /var/cache/apt owned by current user
      run: sudo chown -R $(id -u) /var/cache/apt
    - name: Install govendor
      run: go get -u github.com/kardianos/govendor
    - name: Cache Go dependencies
      id: cache-go-govendor
      uses: actions/cache@v1
      with:
        path: ${{ github.workspace }}/.cache/govendor
        key: go-govendor-{{ hashFiles('**/vendor.json') }}
    - name: Get Go dependencies
      run: cd ${{ github.workspace }}/src/github.com/snapcore/snapd && ${{ github.workspace }}/bin/govendor sync
    - name: Run static checks
      run: cd ${{ github.workspace }}/src/github.com/snapcore/snapd && ./run-checks --static
    - name: Build C
      run: |
          cd ${{ github.workspace }}/src/github.com/snapcore/snapd/cmd/
          ./autogen.sh
          make -j2
    - name: Build Go
      run: go build github.com/snapcore/snapd/...
    - name: Test C
      run: cd ${{ github.workspace }}/src/github.com/snapcore/snapd/cmd/ && make check
    - name: Test Go
      run: cd ${{ github.workspace }}/src/github.com/snapcore/snapd && ./run-checks --unit

  spread:
    needs: [unit-tests-1_13]
    runs-on: self-hosted
    strategy:
      # FIXME: enable fail-fast mode once spread can cancel an executing job.
      #
      # Disable fail-fast mode as it doesn't function with spread. It seems
      # that cancelling tasks requires short, interruptible actions and
      # interrupting spread, notably, does not work today. As such disable
      # fail-fast while we tackle that problem upstream.
      fail-fast: false
      matrix:
        system:
        - ubuntu-19.10-64
        - ubuntu-20.04-64
        - ubuntu-20.04-64-secboot
        - ubuntu-core-20-64
        - debian-sid-64
        - fedora-30-64
        - fedora-31-64
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Run spread tests
      env:
          SPREAD_GOOGLE_KEY: ${{ secrets.SPREAD_GOOGLE_KEY }}
      if: "!contains(github.event.pull_request.labels.*.name, 'Skip spread')"
      run: |
          # Register a problem matcher to highlight spread failures
          echo "::add-matcher::.github/spread-problem-matcher.json"
          spread google:${{ matrix.system }}:tests/...
    - name: Discard spread workers
      if: always()
      run: |
        shopt -s nullglob;
        for r in .spread-reuse.*.yaml; do
          spread -discard -reuse-pid="$(echo "$r" | grep -o -E '[0-9]+')";
        done
